<?xml version="1.0" encoding="UTF-8"?>
<spirit:design xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>xci</spirit:library>
  <spirit:name>unknown</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:componentInstances>
    <spirit:componentInstance>
      <spirit:instanceName>design_1_runge_kutta_45_0_1</spirit:instanceName>
      <spirit:componentRef spirit:vendor="xilinx.com" spirit:library="hls" spirit:name="runge_kutta_45" spirit:version="1.0"/>
      <spirit:configurableElementValues>
        <spirit:configurableElementValue spirit:referenceId="ADDRBLOCK_RANGE.S_AXI_CONTROL.Reg">65536</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.CLK_DOMAIN">design_1_processing_system7_0_1_FCLK_CLK0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.FREQ_HZ">10000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_CLK.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.AP_RST_N.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTERRUPT.PortWidth">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ADDR_WIDTH">64</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ARUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.AWUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.BUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.CLK_DOMAIN">design_1_processing_system7_0_1_FCLK_CLK0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.FREQ_HZ">10000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_BRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_CACHE">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_LOCK">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_PROT">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_QOS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_REGION">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_RRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_WSTRB">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.NUM_READ_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.NUM_WRITE_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.RUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.RUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.WUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.WUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ADDR_WIDTH">64</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ARUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.AWUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.BUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.CLK_DOMAIN">design_1_processing_system7_0_1_FCLK_CLK0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.FREQ_HZ">10000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_BRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_CACHE">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_LOCK">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_PROT">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_QOS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_REGION">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_RRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_WSTRB">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.NUM_READ_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.NUM_WRITE_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.RUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.RUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.WUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.WUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.ARUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.AWUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.BUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.CLK_DOMAIN">design_1_processing_system7_0_1_FCLK_CLK0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.FREQ_HZ">10000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_BRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_CACHE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_LOCK">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_PROT">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_QOS">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_REGION">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_RRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_WSTRB">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.MAX_BURST_LENGTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_READ_OUTSTANDING">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_READ_THREADS">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_WRITE_OUTSTANDING">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_WRITE_THREADS">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.RUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.RUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.SUPPORTS_NARROW_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.WUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.WUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_ARUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_AWUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_BUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_CACHE_VALUE">&quot;0011&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_ID_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_PROT_VALUE">&quot;000&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_RUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_USER_VALUE">0x00000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_T_BUS_WUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_ARUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_AWUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_BUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_CACHE_VALUE">&quot;0011&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_ID_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_PROT_VALUE">&quot;000&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_RUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_USER_VALUE">0x00000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_M_AXI_X_BUS_WUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="MODELPARAM_VALUE.C_S_AXI_CONTROL_ADDR_WIDTH">8</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_ARUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_AWUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_BUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_CACHE_VALUE">&quot;0011&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_ENABLE_ID_PORTS">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_ENABLE_USER_PORTS">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_ID_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_PROT_VALUE">&quot;000&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_RUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_USER_VALUE">0x00000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_T_BUS_WUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_ARUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_AWUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_BUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_CACHE_VALUE">&quot;0011&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_DATA_WIDTH">128</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_ENABLE_ID_PORTS">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_ENABLE_USER_PORTS">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_ID_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_PROT_VALUE">&quot;000&quot;</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_RUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_USER_VALUE">0x00000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.C_M_AXI_X_BUS_WUSER_WIDTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Component_Name">design_1_runge_kutta_45_0_1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.ARCHITECTURE">zynq</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BASE_BOARD_PART">tul.com.tw:pynq-z2:part0:1.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BOARD_CONNECTIONS"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.DEVICE">xc7z020</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PACKAGE">clg400</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PREFHDL">VERILOG</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SILICON_REVISION"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SIMULATOR_LANGUAGE">MIXED</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SPEEDGRADE">-1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.STATIC_POWER"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.TEMPERATURE_GRADE"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_CUSTOMIZATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_GENERATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPCONTEXT">IP_Integrator</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPREVISION">2113088904</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.MANAGED">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.OUTPUTDIR">../../../../../../rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_runge_kutta_45_0_1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SELECTEDSIMMODEL"/>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SHAREDDIR">../../ipshared</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SWVERSION">2022.1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SYNTHESISFLOW">OUT_OF_CONTEXT</spirit:configurableElementValue>
      </spirit:configurableElementValues>
      <spirit:vendorExtensions>
        <xilinx:componentInstanceExtensions>
          <xilinx:configElementInfos>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.AP_CLK.ASSOCIATED_PORT" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.AP_CLK.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.AP_CLK.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.AP_CLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.AP_CLK.PHASE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTERRUPT.PortWidth" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ADDR_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ARUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.AWUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.BUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.DATA_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_BRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_CACHE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_RRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.ID_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.NUM_READ_THREADS" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.NUM_WRITE_THREADS" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.PHASE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.RUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.RUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.WUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_T_BUS.WUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ADDR_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ARUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.AWUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.BUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.DATA_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_BRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_CACHE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_RRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.ID_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.NUM_READ_THREADS" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.NUM_WRITE_THREADS" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.PHASE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.RUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.RUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.WUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXI_X_BUS.WUSER_WIDTH" xilinx:valueSource="auto" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.ARUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.AWUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.BUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.CLK_DOMAIN" xilinx:valueSource="default_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_BRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_BURST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_CACHE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_RRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.ID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.MAX_BURST_LENGTH" xilinx:valueSource="auto" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_READ_OUTSTANDING" xilinx:valueSource="auto" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_READ_THREADS" xilinx:valueSource="constant_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.NUM_WRITE_THREADS" xilinx:valueSource="constant_prop" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.PHASE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.RUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.RUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.WUSER_BITS_PER_BYTE" xilinx:valuePermission="bd_and_user"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI_CONTROL.WUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
          </xilinx:configElementInfos>
          <xilinx:boundaryDescriptionInfo>
            <xilinx:boundaryDescription xilinx:boundaryDescriptionJSON="{
              &quot;schema&quot;: &quot;xilinx.com:schema:json_boundary:1.0&quot;,
              &quot;boundary&quot;: {
                &quot;ports&quot;: {
                  &quot;s_axi_control_AWADDR&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_AWVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_control_AWREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_control_WDATA&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_WSTRB&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_WVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_control_WREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_control_BRESP&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_BVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_control_BREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_control_ARADDR&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_ARVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axi_control_ARREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_control_RDATA&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_RRESP&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;s_axi_control_RVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_control_RREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;ap_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;ap_rst_n&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;interrupt&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_AWADDR&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;63&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWLEN&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWSIZE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWBURST&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWLOCK&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWREGION&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWCACHE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWPROT&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWQOS&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_AWVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_AWREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_WDATA&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;127&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_WSTRB&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;15&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_WLAST&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_WVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_WREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_BRESP&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_BVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_BREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_ARADDR&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;63&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARLEN&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARSIZE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARBURST&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARLOCK&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARREGION&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARCACHE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARPROT&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARQOS&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_ARVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_X_BUS_ARREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_RDATA&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;127&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_RRESP&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_X_BUS_RLAST&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_RVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_X_BUS_RREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_AWADDR&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;63&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWLEN&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWSIZE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWBURST&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWLOCK&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWREGION&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWCACHE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWPROT&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWQOS&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_AWVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_AWREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_WDATA&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;127&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_WSTRB&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;15&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_WLAST&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_WVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_WREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_BRESP&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_BVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_BREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_ARADDR&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;63&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARLEN&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;7&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARSIZE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARBURST&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARLOCK&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARREGION&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARCACHE&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARPROT&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;2&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARQOS&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_ARVALID&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axi_T_BUS_ARREADY&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_RDATA&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;127&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_RRESP&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot; } ],
                  &quot;m_axi_T_BUS_RLAST&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_RVALID&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axi_T_BUS_RREADY&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ]
                },
                &quot;interfaces&quot;: {
                  &quot;s_axi_control&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:aximm:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:aximm_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;memory_map_ref&quot;: &quot;s_axi_control&quot;,
                    &quot;parameters&quot;: {
                      &quot;ADDR_WIDTH&quot;: [ { &quot;value&quot;: &quot;8&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;DATA_WIDTH&quot;: [ { &quot;value&quot;: &quot;32&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;PROTOCOL&quot;: [ { &quot;value&quot;: &quot;AXI4LITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;READ_WRITE_MODE&quot;: [ { &quot;value&quot;: &quot;READ_WRITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;10000000&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;AWUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ARUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;BUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_LOCK&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_PROT&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_CACHE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_QOS&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_REGION&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_WSTRB&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_RRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;SUPPORTS_NARROW_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;MAX_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;design_1_processing_system7_0_1_FCLK_CLK0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_THREADS&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_THREADS&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;AWADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_AWADDR&quot; } ],
                      &quot;AWVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_AWVALID&quot; } ],
                      &quot;AWREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_AWREADY&quot; } ],
                      &quot;WDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_WDATA&quot; } ],
                      &quot;WSTRB&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_WSTRB&quot; } ],
                      &quot;WVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_WVALID&quot; } ],
                      &quot;WREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_WREADY&quot; } ],
                      &quot;BRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_BRESP&quot; } ],
                      &quot;BVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_BVALID&quot; } ],
                      &quot;BREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_BREADY&quot; } ],
                      &quot;ARADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_ARADDR&quot; } ],
                      &quot;ARVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_ARVALID&quot; } ],
                      &quot;ARREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_ARREADY&quot; } ],
                      &quot;RDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_RDATA&quot; } ],
                      &quot;RRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_RRESP&quot; } ],
                      &quot;RVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_RVALID&quot; } ],
                      &quot;RREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_control_RREADY&quot; } ]
                    }
                  },
                  &quot;ap_clk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;s_axi_control:m_axi_X_BUS:m_axi_T_BUS&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;ap_rst_n&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;10000000&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;design_1_processing_system7_0_1_FCLK_CLK0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;ap_clk&quot; } ]
                    }
                  },
                  &quot;ap_rst_n&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;ap_rst_n&quot; } ]
                    }
                  },
                  &quot;interrupt&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:interrupt:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:interrupt_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;SENSITIVITY&quot;: [ { &quot;value&quot;: &quot;LEVEL_HIGH&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;PortWidth&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;INTERRUPT&quot;: [ { &quot;physical_name&quot;: &quot;interrupt&quot; } ]
                    }
                  },
                  &quot;m_axi_X_BUS&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:aximm:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:aximm_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;address_space_ref&quot;: &quot;Data_m_axi_X_BUS&quot;,
                    &quot;parameters&quot;: {
                      &quot;NUM_READ_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;NUM_WRITE_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;8&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_READ_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;16&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_WRITE_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;16&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;256&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;PROTOCOL&quot;: [ { &quot;value&quot;: &quot;AXI4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;READ_WRITE_MODE&quot;: [ { &quot;value&quot;: &quot;READ_WRITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;HAS_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;SUPPORTS_NARROW_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;DATA_WIDTH&quot;: [ { &quot;value&quot;: &quot;128&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;10000000&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ADDR_WIDTH&quot;: [ { &quot;value&quot;: &quot;64&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;AWUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ARUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;BUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_LOCK&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_PROT&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_CACHE&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_QOS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_REGION&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_WSTRB&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_RRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;design_1_processing_system7_0_1_FCLK_CLK0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;AWADDR&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWADDR&quot; } ],
                      &quot;AWLEN&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWLEN&quot; } ],
                      &quot;AWSIZE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWSIZE&quot; } ],
                      &quot;AWBURST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWBURST&quot; } ],
                      &quot;AWLOCK&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWLOCK&quot; } ],
                      &quot;AWREGION&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWREGION&quot; } ],
                      &quot;AWCACHE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWCACHE&quot; } ],
                      &quot;AWPROT&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWPROT&quot; } ],
                      &quot;AWQOS&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWQOS&quot; } ],
                      &quot;AWVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWVALID&quot; } ],
                      &quot;AWREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_AWREADY&quot; } ],
                      &quot;WDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_WDATA&quot; } ],
                      &quot;WSTRB&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_WSTRB&quot; } ],
                      &quot;WLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_WLAST&quot; } ],
                      &quot;WVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_WVALID&quot; } ],
                      &quot;WREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_WREADY&quot; } ],
                      &quot;BRESP&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_BRESP&quot; } ],
                      &quot;BVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_BVALID&quot; } ],
                      &quot;BREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_BREADY&quot; } ],
                      &quot;ARADDR&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARADDR&quot; } ],
                      &quot;ARLEN&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARLEN&quot; } ],
                      &quot;ARSIZE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARSIZE&quot; } ],
                      &quot;ARBURST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARBURST&quot; } ],
                      &quot;ARLOCK&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARLOCK&quot; } ],
                      &quot;ARREGION&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARREGION&quot; } ],
                      &quot;ARCACHE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARCACHE&quot; } ],
                      &quot;ARPROT&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARPROT&quot; } ],
                      &quot;ARQOS&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARQOS&quot; } ],
                      &quot;ARVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARVALID&quot; } ],
                      &quot;ARREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_ARREADY&quot; } ],
                      &quot;RDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_RDATA&quot; } ],
                      &quot;RRESP&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_RRESP&quot; } ],
                      &quot;RLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_RLAST&quot; } ],
                      &quot;RVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_RVALID&quot; } ],
                      &quot;RREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_X_BUS_RREADY&quot; } ]
                    }
                  },
                  &quot;m_axi_T_BUS&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:aximm:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:aximm_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;address_space_ref&quot;: &quot;Data_m_axi_T_BUS&quot;,
                    &quot;parameters&quot;: {
                      &quot;NUM_READ_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;NUM_WRITE_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;8&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_READ_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;16&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_WRITE_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;16&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;MAX_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;256&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;PROTOCOL&quot;: [ { &quot;value&quot;: &quot;AXI4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;READ_WRITE_MODE&quot;: [ { &quot;value&quot;: &quot;READ_WRITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;HAS_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;SUPPORTS_NARROW_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;usage&quot;: &quot;all&quot; } ],
                      &quot;DATA_WIDTH&quot;: [ { &quot;value&quot;: &quot;128&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;10000000&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ADDR_WIDTH&quot;: [ { &quot;value&quot;: &quot;64&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;AWUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;ARUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;BUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;auto&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_LOCK&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_PROT&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_CACHE&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_QOS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_REGION&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_WSTRB&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_RRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;design_1_processing_system7_0_1_FCLK_CLK0&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd_and_user&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_ips_inferred&quot;: true, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;AWADDR&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWADDR&quot; } ],
                      &quot;AWLEN&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWLEN&quot; } ],
                      &quot;AWSIZE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWSIZE&quot; } ],
                      &quot;AWBURST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWBURST&quot; } ],
                      &quot;AWLOCK&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWLOCK&quot; } ],
                      &quot;AWREGION&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWREGION&quot; } ],
                      &quot;AWCACHE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWCACHE&quot; } ],
                      &quot;AWPROT&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWPROT&quot; } ],
                      &quot;AWQOS&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWQOS&quot; } ],
                      &quot;AWVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWVALID&quot; } ],
                      &quot;AWREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_AWREADY&quot; } ],
                      &quot;WDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_WDATA&quot; } ],
                      &quot;WSTRB&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_WSTRB&quot; } ],
                      &quot;WLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_WLAST&quot; } ],
                      &quot;WVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_WVALID&quot; } ],
                      &quot;WREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_WREADY&quot; } ],
                      &quot;BRESP&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_BRESP&quot; } ],
                      &quot;BVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_BVALID&quot; } ],
                      &quot;BREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_BREADY&quot; } ],
                      &quot;ARADDR&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARADDR&quot; } ],
                      &quot;ARLEN&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARLEN&quot; } ],
                      &quot;ARSIZE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARSIZE&quot; } ],
                      &quot;ARBURST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARBURST&quot; } ],
                      &quot;ARLOCK&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARLOCK&quot; } ],
                      &quot;ARREGION&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARREGION&quot; } ],
                      &quot;ARCACHE&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARCACHE&quot; } ],
                      &quot;ARPROT&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARPROT&quot; } ],
                      &quot;ARQOS&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARQOS&quot; } ],
                      &quot;ARVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARVALID&quot; } ],
                      &quot;ARREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_ARREADY&quot; } ],
                      &quot;RDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_RDATA&quot; } ],
                      &quot;RRESP&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_RRESP&quot; } ],
                      &quot;RLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_RLAST&quot; } ],
                      &quot;RVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_RVALID&quot; } ],
                      &quot;RREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axi_T_BUS_RREADY&quot; } ]
                    }
                  }
                },
                &quot;address_spaces&quot;: {
                  &quot;Data_m_axi_X_BUS&quot;: {
                    &quot;range&quot;: &quot;16E&quot;,
                    &quot;width&quot;: &quot;64&quot;
                  },
                  &quot;Data_m_axi_T_BUS&quot;: {
                    &quot;range&quot;: &quot;16E&quot;,
                    &quot;width&quot;: &quot;64&quot;
                  }
                },
                &quot;memory_maps&quot;: {
                  &quot;s_axi_control&quot;: {
                    &quot;address_blocks&quot;: {
                      &quot;Reg&quot;: {
                        &quot;base_address&quot;: &quot;0&quot;,
                        &quot;range&quot;: &quot;65536&quot;,
                        &quot;usage&quot;: &quot;register&quot;,
                        &quot;access&quot;: &quot;read-write&quot;,
                        &quot;parameters&quot;: {
                          &quot;OFFSET_BASE_PARAM&quot;: [ { &quot;value&quot;: &quot;C_S_AXI_CONTROL_BASEADDR&quot; } ],
                          &quot;OFFSET_HIGH_PARAM&quot;: [ { &quot;value&quot;: &quot;C_S_AXI_CONTROL_HIGHADDR&quot; } ]
                        },
                        &quot;registers&quot;: {
                          &quot;CTRL&quot;: {
                            &quot;address_offset&quot;: &quot;0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;CTRL&quot;,
                            &quot;description&quot;: &quot;Control signals&quot;,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;AP_START&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;ap_start&apos;.&quot;,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AP_DONE&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;ap_done&apos;.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;AP_IDLE&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;ap_idle&apos;.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;AP_READY&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;ap_ready&apos;.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED_1&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 3,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;AUTO_RESTART&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;auto_restart&apos;.&quot;,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESERVED_2&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;INTERRUPT&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal Register for &apos;interrupt&apos;.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED_3&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 22,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;GIER&quot;: {
                            &quot;address_offset&quot;: &quot;4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;GIER&quot;,
                            &quot;description&quot;: &quot;Global Interrupt Enable Register&quot;,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;Enable&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled&quot;,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESERVED&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 31,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;IP_IER&quot;: {
                            &quot;address_offset&quot;: &quot;8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;IP_IER&quot;,
                            &quot;description&quot;: &quot;IP Interrupt Enable Register&quot;,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;CHAN0_INT_EN&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.&quot;,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CHAN1_INT_EN&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.&quot;,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESERVED_0&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 30,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;IP_ISR&quot;: {
                            &quot;address_offset&quot;: &quot;12&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;IP_ISR&quot;,
                            &quot;description&quot;: &quot;IP Interrupt Status Register&quot;,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;CHAN0_INT_ST&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 interrupt, 1 = Channel 0 interrupt.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;CHAN1_INT_ST&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 interrupt, 1 = Channel 1 interrupt.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED_0&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 30,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;yy_1&quot;: {
                            &quot;address_offset&quot;: &quot;16&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;yy_1&quot;,
                            &quot;description&quot;: &quot;Data signal of yy&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;yy&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of yy&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;yy_2&quot;: {
                            &quot;address_offset&quot;: &quot;20&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;yy_2&quot;,
                            &quot;description&quot;: &quot;Data signal of yy&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;yy&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of yy&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;tt_1&quot;: {
                            &quot;address_offset&quot;: &quot;28&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;tt_1&quot;,
                            &quot;description&quot;: &quot;Data signal of tt&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;tt&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of tt&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;tt_2&quot;: {
                            &quot;address_offset&quot;: &quot;32&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;tt_2&quot;,
                            &quot;description&quot;: &quot;Data signal of tt&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;tt&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of tt&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;tf_1&quot;: {
                            &quot;address_offset&quot;: &quot;40&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;tf_1&quot;,
                            &quot;description&quot;: &quot;Data signal of tf&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;tf&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of tf&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;tf_2&quot;: {
                            &quot;address_offset&quot;: &quot;44&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;tf_2&quot;,
                            &quot;description&quot;: &quot;Data signal of tf&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;tf&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of tf&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h0_1&quot;: {
                            &quot;address_offset&quot;: &quot;52&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h0_1&quot;,
                            &quot;description&quot;: &quot;Data signal of h0&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of h0&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h0_2&quot;: {
                            &quot;address_offset&quot;: &quot;56&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h0_2&quot;,
                            &quot;description&quot;: &quot;Data signal of h0&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of h0&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;atol_1&quot;: {
                            &quot;address_offset&quot;: &quot;64&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;atol_1&quot;,
                            &quot;description&quot;: &quot;Data signal of atol&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;atol&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of atol&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;atol_2&quot;: {
                            &quot;address_offset&quot;: &quot;68&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;atol_2&quot;,
                            &quot;description&quot;: &quot;Data signal of atol&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;atol&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of atol&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h_max_1&quot;: {
                            &quot;address_offset&quot;: &quot;76&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h_max_1&quot;,
                            &quot;description&quot;: &quot;Data signal of h_max&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h_max&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of h_max&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h_max_2&quot;: {
                            &quot;address_offset&quot;: &quot;80&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h_max_2&quot;,
                            &quot;description&quot;: &quot;Data signal of h_max&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h_max&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of h_max&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h_min_1&quot;: {
                            &quot;address_offset&quot;: &quot;88&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h_min_1&quot;,
                            &quot;description&quot;: &quot;Data signal of h_min&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h_min&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of h_min&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;h_min_2&quot;: {
                            &quot;address_offset&quot;: &quot;92&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;h_min_2&quot;,
                            &quot;description&quot;: &quot;Data signal of h_min&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;h_min&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of h_min&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;mu_1&quot;: {
                            &quot;address_offset&quot;: &quot;100&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;mu_1&quot;,
                            &quot;description&quot;: &quot;Data signal of mu&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;mu&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of mu&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;mu_2&quot;: {
                            &quot;address_offset&quot;: &quot;104&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;mu_2&quot;,
                            &quot;description&quot;: &quot;Data signal of mu&quot;,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;mu&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 63 to 32 of mu&quot;,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;size&quot;: {
                            &quot;address_offset&quot;: &quot;112&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;size&quot;,
                            &quot;description&quot;: &quot;Data signal of size&quot;,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;size&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;description&quot;: &quot;Bit 31 to 0 of size&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;size_ctrl&quot;: {
                            &quot;address_offset&quot;: &quot;116&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;size_ctrl&quot;,
                            &quot;description&quot;: &quot;Control signal of size&quot;,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;size_ap_vld&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal size_ap_vld&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 31,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;flag&quot;: {
                            &quot;address_offset&quot;: &quot;128&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;flag&quot;,
                            &quot;description&quot;: &quot;Data signal of flag&quot;,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;flag&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Bit 0 to 0 of flag&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 31,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;flag_ctrl&quot;: {
                            &quot;address_offset&quot;: &quot;132&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;flag_ctrl&quot;,
                            &quot;description&quot;: &quot;Control signal of flag&quot;,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0&quot;,
                            &quot;fields&quot;: {
                              &quot;flag_ap_vld&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;description&quot;: &quot;Control signal flag_ap_vld&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RESERVED&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 31,
                                &quot;description&quot;: &quot;Reserved.  0s on read.&quot;,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }"/>
          </xilinx:boundaryDescriptionInfo>
        </xilinx:componentInstanceExtensions>
      </spirit:vendorExtensions>
    </spirit:componentInstance>
  </spirit:componentInstances>
</spirit:design>
