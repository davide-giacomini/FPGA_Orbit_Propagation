#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:47:01 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Mon May 22 17:42:47 2023
# Process ID: 105229
# Current directory: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/vivado.jou
# Running On: davide-N552VW, OS: Linux, CPU Frequency: 2600.000 MHz, CPU Physical cores: 4, Host memory: 16671 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/davide/Projects/runge_kutta_45'.
WARNING: [IP_Flow 19-3656] If you move the project, the path for repository '/home/davide/Projects/runge_kutta_45' may become invalid. A better location for the repository would be in a path adjacent to the project. (Current project location is '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1'.)
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2022.1/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.dcp' for cell 'design_1_i/rst_ps7_0_100M'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_runge_kutta_45_0_0/design_1_runge_kutta_45_0_0.dcp' for cell 'design_1_i/runge_kutta_45_0'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1.dcp' for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_1/design_1_auto_pc_1.dcp' for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_2/design_1_auto_pc_2.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00.44 ; elapsed = 00:00:00.45 . Memory (MB): peak = 3150.742 ; gain = 0.000 ; free physical = 6958 ; free virtual = 8924
INFO: [Netlist 29-17] Analyzing 2429 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst'
INFO: [Project 1-1714] 14 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3358.844 ; gain = 0.000 ; free physical = 6355 ; free virtual = 8342
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 36 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 34 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 2 instances

19 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:25 ; elapsed = 00:00:25 . Memory (MB): peak = 3358.844 ; gain = 208.102 ; free physical = 6354 ; free virtual = 8342
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.9 . Memory (MB): peak = 3358.844 ; gain = 0.000 ; free physical = 6341 ; free virtual = 8329

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: c525a92f

Time (s): cpu = 00:00:20 ; elapsed = 00:00:14 . Memory (MB): peak = 3501.613 ; gain = 142.770 ; free physical = 5608 ; free virtual = 7665

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/first_mi_word_i_2 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/s_axi_bvalid_INST_0_i_1, which resulted in an inversion of 6 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/first_mi_word_i_2 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/s_axi_bvalid_INST_0_i_1, which resulted in an inversion of 6 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_VITIS_LOOP_160_1_fu_1005/icmp_ln160_reg_306[0]_i_1 into driver instance design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_VITIS_LOOP_160_1_fu_1005/flow_control_loop_pipe_sequential_init_U/mem_reg_0_i_5__0, which resulted in an inversion of 16 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_last_copy_y_fu_1051/empty_reg_740_pp0_iter1_reg[0]_i_1 into driver instance design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_last_copy_y_fu_1051/flow_control_loop_pipe_sequential_init_U/grp_runge_kutta_45_Pipeline_last_copy_y_fu_1051_ap_start_reg_i_3, which resulted in an inversion of 18 pins
INFO: [Opt 31-138] Pushed 1 inverter(s) to 26 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 10a086920

Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 3756.660 ; gain = 0.000 ; free physical = 5408 ; free virtual = 7466
INFO: [Opt 31-389] Phase Retarget created 108 cells and removed 239 cells
INFO: [Opt 31-1021] In phase Retarget, 126 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 4 inverter(s) to 60 load pin(s).
Phase 2 Constant propagation | Checksum: 1c9c961d7

Time (s): cpu = 00:00:09 ; elapsed = 00:00:04 . Memory (MB): peak = 3756.660 ; gain = 0.000 ; free physical = 5429 ; free virtual = 7487
INFO: [Opt 31-389] Phase Constant propagation created 392 cells and removed 1924 cells
INFO: [Opt 31-1021] In phase Constant propagation, 126 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 11c26f2f1

Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 3756.660 ; gain = 0.000 ; free physical = 5209 ; free virtual = 7380
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 3654 cells
INFO: [Opt 31-1021] In phase Sweep, 448 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 11c26f2f1

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 3788.676 ; gain = 32.016 ; free physical = 5234 ; free virtual = 7405
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 11818132a

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 3788.676 ; gain = 32.016 ; free physical = 5229 ; free virtual = 7402
INFO: [Opt 31-389] Phase Shift Register Optimization created 6 cells and removed 0 cells

Phase 6 Post Processing Netlist
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/first_step_q[4]_i_1__0 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/first_step_q[8]_i_2__0, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/first_step_q[4]_i_1 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/first_step_q[8]_i_2, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/first_step_q[4]_i_1__0 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/first_step_q[8]_i_2__0, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/first_step_q[4]_i_1 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/first_step_q[8]_i_2, which resulted in an inversion of 1 pins
Phase 6 Post Processing Netlist | Checksum: 1f979cddd

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 3788.676 ; gain = 32.016 ; free physical = 5228 ; free virtual = 7402
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 4 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 154 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |             108  |             239  |                                            126  |
|  Constant propagation         |             392  |            1924  |                                            126  |
|  Sweep                        |               0  |            3654  |                                            448  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               6  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               4  |                                            154  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.1 . Memory (MB): peak = 3788.676 ; gain = 0.000 ; free physical = 5268 ; free virtual = 7442
Ending Logic Optimization Task | Checksum: 193d72318

Time (s): cpu = 00:00:16 ; elapsed = 00:00:10 . Memory (MB): peak = 3788.676 ; gain = 32.016 ; free physical = 5268 ; free virtual = 7442

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...
INFO: [Pwropt 34-9] Applying IDT optimizations ...

Finished Running Vector-less Activity Propagation
INFO: [Pwropt 34-10] Applying ODC optimizations ...


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 79 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 3 WE to EN ports
Number of BRAM Ports augmented: 26 newly gated: 11 Total Ports: 158
Ending PowerOpt Patch Enables Task | Checksum: 9edec9ef

Time (s): cpu = 00:00:00.55 ; elapsed = 00:00:00.45 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5247 ; free virtual = 7421
Ending Power Optimization Task | Checksum: 9edec9ef

Time (s): cpu = 00:00:50 ; elapsed = 00:00:33 . Memory (MB): peak = 4233.191 ; gain = 444.516 ; free physical = 5295 ; free virtual = 7469

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: 125ce2176

Time (s): cpu = 00:00:12 ; elapsed = 00:00:04 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5325 ; free virtual = 7498
Ending Final Cleanup Task | Checksum: 125ce2176

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5325 ; free virtual = 7499

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5325 ; free virtual = 7499
Ending Netlist Obfuscation Task | Checksum: 125ce2176

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5325 ; free virtual = 7499
INFO: [Common 17-83] Releasing license: Implementation
54 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:46 ; elapsed = 00:01:09 . Memory (MB): peak = 4233.191 ; gain = 874.348 ; free physical = 5325 ; free virtual = 7499
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.22 ; elapsed = 00:00:00.05 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5319 ; free virtual = 7495
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:39 ; elapsed = 00:00:08 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5112 ; free virtual = 7297
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5106 ; free virtual = 7291
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 6737b101

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.04 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5106 ; free virtual = 7292
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5106 ; free virtual = 7292

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 3e49d189

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 5143 ; free virtual = 7330

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: d92ade8a

Time (s): cpu = 00:00:35 ; elapsed = 00:00:15 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4933 ; free virtual = 7274

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: d92ade8a

Time (s): cpu = 00:00:35 ; elapsed = 00:00:15 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4933 ; free virtual = 7274
Phase 1 Placer Initialization | Checksum: d92ade8a

Time (s): cpu = 00:00:35 ; elapsed = 00:00:15 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4933 ; free virtual = 7274

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 144f2eee7

Time (s): cpu = 00:00:45 ; elapsed = 00:00:17 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4905 ; free virtual = 7246

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: c49fcb76

Time (s): cpu = 00:00:55 ; elapsed = 00:00:19 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4897 ; free virtual = 7238

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: c49fcb76

Time (s): cpu = 00:00:55 ; elapsed = 00:00:19 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4897 ; free virtual = 7239

Phase 2.4 Global Placement Core

Phase 2.4.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 2990 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 1300 nets or LUTs. Breaked 0 LUT, combined 1300 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4878 ; free virtual = 7223

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |           1300  |                  1300  |           0  |           1  |  00:00:02  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |           1300  |                  1300  |           0  |           4  |  00:00:02  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.1 Physical Synthesis In Placer | Checksum: 1cbe5ec0f

Time (s): cpu = 00:02:25 ; elapsed = 00:00:51 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4869 ; free virtual = 7214
Phase 2.4 Global Placement Core | Checksum: 187ca362e

Time (s): cpu = 00:02:29 ; elapsed = 00:00:53 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4869 ; free virtual = 7215
Phase 2 Global Placement | Checksum: 187ca362e

Time (s): cpu = 00:02:29 ; elapsed = 00:00:53 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4887 ; free virtual = 7232

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1c641b24f

Time (s): cpu = 00:02:40 ; elapsed = 00:00:55 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4880 ; free virtual = 7226

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1a4240fa5

Time (s): cpu = 00:03:00 ; elapsed = 00:01:01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4882 ; free virtual = 7228

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 19cddadf7

Time (s): cpu = 00:03:02 ; elapsed = 00:01:02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4880 ; free virtual = 7226

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 20a980279

Time (s): cpu = 00:03:02 ; elapsed = 00:01:02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4880 ; free virtual = 7226

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 1f3ab748b

Time (s): cpu = 00:03:14 ; elapsed = 00:01:12 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4864 ; free virtual = 7210

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 1fa23ef7b

Time (s): cpu = 00:03:16 ; elapsed = 00:01:14 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4869 ; free virtual = 7214

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1b7ce59d4

Time (s): cpu = 00:03:16 ; elapsed = 00:01:15 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4868 ; free virtual = 7214
Phase 3 Detail Placement | Checksum: 1b7ce59d4

Time (s): cpu = 00:03:16 ; elapsed = 00:01:15 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4868 ; free virtual = 7214

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1f65f1f97

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=16.457 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 1f9a960ed

Time (s): cpu = 00:00:06 ; elapsed = 00:00:01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4845 ; free virtual = 7190
INFO: [Place 46-33] Processed net design_1_i/runge_kutta_45_0/inst/X_BUS_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 1, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 217a01ee7

Time (s): cpu = 00:00:08 ; elapsed = 00:00:02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
Phase 4.1.1.1 BUFG Insertion | Checksum: 1f65f1f97

Time (s): cpu = 00:03:54 ; elapsed = 00:01:24 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=16.457. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 1e4c5c1c2

Time (s): cpu = 00:03:55 ; elapsed = 00:01:25 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Time (s): cpu = 00:03:55 ; elapsed = 00:01:25 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
Phase 4.1 Post Commit Optimization | Checksum: 1e4c5c1c2

Time (s): cpu = 00:03:55 ; elapsed = 00:01:25 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1e4c5c1c2

Time (s): cpu = 00:03:56 ; elapsed = 00:01:25 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                2x2|                4x4|
|___________|___________________|___________________|
|      South|                2x2|                8x8|
|___________|___________________|___________________|
|       East|                4x4|                8x8|
|___________|___________________|___________________|
|       West|                4x4|                8x8|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1e4c5c1c2

Time (s): cpu = 00:03:56 ; elapsed = 00:01:26 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
Phase 4.3 Placer Reporting | Checksum: 1e4c5c1c2

Time (s): cpu = 00:03:56 ; elapsed = 00:01:26 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188

Time (s): cpu = 00:03:56 ; elapsed = 00:01:26 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1e393c1bd

Time (s): cpu = 00:03:57 ; elapsed = 00:01:26 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
Ending Placer Task | Checksum: 157d7ae6d

Time (s): cpu = 00:03:57 ; elapsed = 00:01:27 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4842 ; free virtual = 7188
INFO: [Common 17-83] Releasing license: Implementation
90 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:04:01 ; elapsed = 00:01:28 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4892 ; free virtual = 7238
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4798 ; free virtual = 7220
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:07 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4857 ; free virtual = 7222
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.16 ; elapsed = 00:00:00.26 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4839 ; free virtual = 7204
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.16 ; elapsed = 00:00:00.27 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4831 ; free virtual = 7196
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
99 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:25 ; elapsed = 00:00:05 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4801 ; free virtual = 7166
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4738 ; free virtual = 7179
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:10 ; elapsed = 00:00:05 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4795 ; free virtual = 7178
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: bb4c2f1f ConstDB: 0 ShapeSum: 9c8b7f4e RouteDB: 0
Post Restoration Checksum: NetGraph: 4cceb5e NumContArr: 4d2fc04a Constraints: 0 Timing: 0
Phase 1 Build RT Design | Checksum: 51fcaba8

Time (s): cpu = 00:00:52 ; elapsed = 00:00:28 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4670 ; free virtual = 7054

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 51fcaba8

Time (s): cpu = 00:00:53 ; elapsed = 00:00:28 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4640 ; free virtual = 7024

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 51fcaba8

Time (s): cpu = 00:00:53 ; elapsed = 00:00:28 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4639 ; free virtual = 7024
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: 14142e0e7

Time (s): cpu = 00:01:31 ; elapsed = 00:00:40 . Memory (MB): peak = 4233.191 ; gain = 0.000 ; free physical = 4587 ; free virtual = 6972
INFO: [Route 35-416] Intermediate Timing Summary | WNS=16.981 | TNS=0.000  | WHS=-0.221 | THS=-360.447|


Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 51778
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 51778
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: bdc3ca4e

Time (s): cpu = 00:01:55 ; elapsed = 00:00:45 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4588 ; free virtual = 6973

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: bdc3ca4e

Time (s): cpu = 00:01:55 ; elapsed = 00:00:45 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4588 ; free virtual = 6973
Phase 3 Initial Routing | Checksum: e3510cda

Time (s): cpu = 00:02:15 ; elapsed = 00:00:50 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4584 ; free virtual = 6969

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 4516
 Number of Nodes with overlaps = 204
 Number of Nodes with overlaps = 18
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=14.756 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1b6a7e7d8

Time (s): cpu = 00:02:58 ; elapsed = 00:01:10 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4576 ; free virtual = 6963

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=14.756 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 16767f5da

Time (s): cpu = 00:03:00 ; elapsed = 00:01:12 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6963
Phase 4 Rip-up And Reroute | Checksum: 16767f5da

Time (s): cpu = 00:03:01 ; elapsed = 00:01:12 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6963

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 1ae2d63e5

Time (s): cpu = 00:03:07 ; elapsed = 00:01:14 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962
INFO: [Route 35-416] Intermediate Timing Summary | WNS=14.756 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 1ae2d63e5

Time (s): cpu = 00:03:07 ; elapsed = 00:01:14 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1ae2d63e5

Time (s): cpu = 00:03:08 ; elapsed = 00:01:14 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962
Phase 5 Delay and Skew Optimization | Checksum: 1ae2d63e5

Time (s): cpu = 00:03:08 ; elapsed = 00:01:15 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 135b0bd3b

Time (s): cpu = 00:03:16 ; elapsed = 00:01:17 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962
INFO: [Route 35-416] Intermediate Timing Summary | WNS=14.756 | TNS=0.000  | WHS=0.020  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1ee80392c

Time (s): cpu = 00:03:16 ; elapsed = 00:01:17 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962
Phase 6 Post Hold Fix | Checksum: 1ee80392c

Time (s): cpu = 00:03:17 ; elapsed = 00:01:18 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 13.5353 %
  Global Horizontal Routing Utilization  = 16.0519 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1436b535c

Time (s): cpu = 00:03:17 ; elapsed = 00:01:18 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1436b535c

Time (s): cpu = 00:03:17 ; elapsed = 00:01:18 . Memory (MB): peak = 4265.566 ; gain = 32.375 ; free physical = 4575 ; free virtual = 6962

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: c5ddf2bb

Time (s): cpu = 00:03:23 ; elapsed = 00:01:21 . Memory (MB): peak = 4281.574 ; gain = 48.383 ; free physical = 4576 ; free virtual = 6963

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=14.756 | TNS=0.000  | WHS=0.020  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: c5ddf2bb

Time (s): cpu = 00:03:30 ; elapsed = 00:01:23 . Memory (MB): peak = 4281.574 ; gain = 48.383 ; free physical = 4575 ; free virtual = 6962
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:03:30 ; elapsed = 00:01:23 . Memory (MB): peak = 4281.574 ; gain = 48.383 ; free physical = 4637 ; free virtual = 7024

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
115 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:04:08 ; elapsed = 00:01:31 . Memory (MB): peak = 4281.574 ; gain = 48.383 ; free physical = 4637 ; free virtual = 7024
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4281.574 ; gain = 0.000 ; free physical = 4548 ; free virtual = 7021
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:08 . Memory (MB): peak = 4289.578 ; gain = 8.004 ; free physical = 4594 ; free virtual = 7002
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:42 ; elapsed = 00:00:10 . Memory (MB): peak = 4320.793 ; gain = 31.215 ; free physical = 4548 ; free virtual = 6957
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:32 ; elapsed = 00:00:07 . Memory (MB): peak = 4327.730 ; gain = 6.938 ; free physical = 4541 ; free virtual = 6950
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
127 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:33 ; elapsed = 00:00:13 . Memory (MB): peak = 4403.656 ; gain = 75.926 ; free physical = 4471 ; free virtual = 6904
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Common 17-206] Exiting Vivado at Mon May 22 17:48:46 2023...
#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:47:01 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Mon May 22 17:48:59 2023
# Process ID: 123424
# Current directory: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/vivado.jou
# Running On: davide-N552VW, OS: Linux, CPU Frequency: 3108.502 MHz, CPU Physical cores: 4, Host memory: 16671 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.05 ; elapsed = 00:00:00.04 . Memory (MB): peak = 3141.781 ; gain = 0.000 ; free physical = 6592 ; free virtual = 9020
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.57 ; elapsed = 00:00:00.57 . Memory (MB): peak = 3141.805 ; gain = 0.000 ; free physical = 5670 ; free virtual = 8107
INFO: [Netlist 29-17] Analyzing 2303 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF Files: Time (s): cpu = 00:00:03 ; elapsed = 00:00:04 . Memory (MB): peak = 3425.844 ; gain = 54.039 ; free physical = 4719 ; free virtual = 7156
Restored from archive | CPU: 3.560000 secs | Memory: 57.152023 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3425.844 ; gain = 54.039 ; free physical = 4719 ; free virtual = 7156
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3425.844 ; gain = 0.000 ; free physical = 4723 ; free virtual = 7160
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 37 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 34 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 2 instances
  SRLC32E => SRL16E: 1 instance 

INFO: [Project 1-604] Checkpoint was created with Vivado v2022.1 (64-bit) build 3526262
open_checkpoint: Time (s): cpu = 00:00:33 ; elapsed = 00:00:35 . Memory (MB): peak = 3429.844 ; gain = 288.062 ; free physical = 4723 ; free virtual = 7160
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2022.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__8 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__8 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__9 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__9 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__8 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__9 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__20 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__23 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__3 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__7 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__18 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__21 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__25 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__25/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__28 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__28/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__29 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__29/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__31 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__31/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__33 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__33/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__35 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__35/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__37 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__37/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__40 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__40/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__41 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__41/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__5 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__9 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__15 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__20 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__23 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__3 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__7 output design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__1 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__10 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__12 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__14 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__17 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__18 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__2 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__4 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__6 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__8 output design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_900/mul_80s_80s_140_1_1_U68/dout__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_962/mul_80s_80s_160_1_1_U73/dout__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__20 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__23 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__3 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__7 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/grp_vel_der_Pipeline_sq_sum_loop_fu_131/mul_80s_80s_160_1_1_U25/dout__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__21 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__25 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__28 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__29 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__31 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__33 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__35 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__37 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__40 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__41 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__5 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__9 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_868/grp_vel_der_fu_208/mul_140s_140s_140_1_1_U38/dout__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__15 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__20 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__23 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__3 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__7 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1030/mul_80s_80s_160_1_1_U76/dout__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__12 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__14 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__2 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__4 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__8 multiplier stage design_1_i/runge_kutta_45_0/inst/mul_61ns_80s_140_1_1_U97/dout__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A6)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A3)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A2)+((~A2)*(~A5)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A1)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A1)+((~A1)*(~A6)*A2)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A5)*A2)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A2)+((~A2)*(~A6)*A1)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A2)*A1)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A5' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A5' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A2)+((~A2)*(~A4)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A5' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A2)+((~A2)*(~A3)*A6)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC RTSTAT-10] No routable loads: 154 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0]... and (the first 15 of 98 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 458 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
22 Infos, 277 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:47 ; elapsed = 00:00:30 . Memory (MB): peak = 4078.094 ; gain = 648.250 ; free physical = 4547 ; free virtual = 6995
INFO: [Common 17-206] Exiting Vivado at Mon May 22 17:50:12 2023...
