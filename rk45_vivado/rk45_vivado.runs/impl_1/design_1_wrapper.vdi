#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:47:01 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Mon Jun 26 11:19:36 2023
# Process ID: 39098
# Current directory: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/vivado.jou
# Running On: davide-N552VW, OS: Linux, CPU Frequency: 3142.560 MHz, CPU Physical cores: 4, Host memory: 16659 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/davide/Projects/runge_kutta_45/rk45_vitis'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2022.1/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.dcp' for cell 'design_1_i/rst_ps7_0_20M'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_runge_kutta_45_0_0/design_1_runge_kutta_45_0_0.dcp' for cell 'design_1_i/runge_kutta_45_0'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1.dcp' for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_1/design_1_auto_pc_1.dcp' for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_2/design_1_auto_pc_2.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00.61 ; elapsed = 00:00:00.61 . Memory (MB): peak = 3141.832 ; gain = 0.000 ; free physical = 6169 ; free virtual = 8661
INFO: [Netlist 29-17] Analyzing 3995 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst'
Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst'
INFO: [Project 1-1714] 14 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3349.934 ; gain = 0.000 ; free physical = 5772 ; free virtual = 8280
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 32 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 30 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 2 instances

19 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:28 ; elapsed = 00:00:28 . Memory (MB): peak = 3349.934 ; gain = 208.102 ; free physical = 5772 ; free virtual = 8280
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 3349.934 ; gain = 0.000 ; free physical = 5680 ; free virtual = 8196

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: f19aa21b

Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 3503.703 ; gain = 153.770 ; free physical = 5014 ; free virtual = 7531

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/current_word_1[3]_i_1 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/s_axi_rvalid_INST_0_i_7, which resulted in an inversion of 2 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/legal_wrap_len_q_i_1__0 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/legal_wrap_len_q_i_2__0, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/first_mi_word_i_2 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/s_axi_bvalid_INST_0_i_2, which resulted in an inversion of 6 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/current_word_1[3]_i_1__0 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/s_axi_wready_INST_0_i_5, which resulted in an inversion of 2 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/legal_wrap_len_q_i_1 into driver instance design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/legal_wrap_len_q_i_2, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/current_word_1[3]_i_1 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/s_axi_rvalid_INST_0_i_7, which resulted in an inversion of 2 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/legal_wrap_len_q_i_1__0 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/legal_wrap_len_q_i_2__0, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/first_mi_word_i_2 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.USE_SPLIT.write_resp_inst/s_axi_bvalid_INST_0_i_2, which resulted in an inversion of 6 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/current_word_1[3]_i_1__0 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/s_axi_wready_INST_0_i_5, which resulted in an inversion of 2 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/legal_wrap_len_q_i_1 into driver instance design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/legal_wrap_len_q_i_2, which resulted in an inversion of 1 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/T_BUS_m_axi_U/store_unit/buff_wdata/U_fifo_mem/mem_reg_0_i_76__0 into driver instance design_1_i/runge_kutta_45_0/inst/T_BUS_m_axi_U/store_unit/buff_wdata/U_fifo_mem/mem_reg_0_i_77__0, which resulted in an inversion of 5 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/T_BUS_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][0]_srl4_i_1__0 into driver instance design_1_i/runge_kutta_45_0/inst/T_BUS_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][0]_srl4_i_3, which resulted in an inversion of 3 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/sub_ln859_reg_3337[3]_i_3 into driver instance design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/ram_reg_0_i_52__1, which resulted in an inversion of 3 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/sub_ln859_reg_3337[3]_i_5 into driver instance design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/ram_reg_0_i_50__1, which resulted in an inversion of 3 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/select_ln1086_reg_601[2]_i_108__1 into driver instance design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/select_ln1086_reg_601[2]_i_42, which resulted in an inversion of 24 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/shl_ln258_1_reg_692[18]_i_101 into driver instance design_1_i/runge_kutta_45_0/inst/tt_loc_V_U/shl_ln258_1_reg_692[18]_i_39, which resulted in an inversion of 24 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/yy_loc_V_U/select_ln1086_reg_601[2]_i_100 into driver instance design_1_i/runge_kutta_45_0/inst/yy_loc_V_U/select_ln1086_reg_601[50]_i_44, which resulted in an inversion of 24 pins
INFO: [Opt 31-1287] Pulled Inverter design_1_i/runge_kutta_45_0/inst/yy_loc_V_U/select_ln1086_reg_601[2]_i_100__0 into driver instance design_1_i/runge_kutta_45_0/inst/yy_loc_V_U/select_ln1086_reg_601[2]_i_28, which resulted in an inversion of 24 pins
INFO: [Opt 31-138] Pushed 1 inverter(s) to 8 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 206693b4d

Time (s): cpu = 00:00:07 ; elapsed = 00:00:03 . Memory (MB): peak = 3760.719 ; gain = 0.000 ; free physical = 4857 ; free virtual = 7374
INFO: [Opt 31-389] Phase Retarget created 1994 cells and removed 2460 cells
INFO: [Opt 31-1021] In phase Retarget, 126 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 14 inverter(s) to 16 load pin(s).
Phase 2 Constant propagation | Checksum: 18713aa87

Time (s): cpu = 00:00:09 ; elapsed = 00:00:05 . Memory (MB): peak = 3760.719 ; gain = 0.000 ; free physical = 4857 ; free virtual = 7374
INFO: [Opt 31-389] Phase Constant propagation created 938 cells and removed 4773 cells
INFO: [Opt 31-1021] In phase Constant propagation, 126 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1cc365f34

Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 3760.719 ; gain = 0.000 ; free physical = 4856 ; free virtual = 7373
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 5671 cells
INFO: [Opt 31-1021] In phase Sweep, 448 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1cc365f34

Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 3792.734 ; gain = 32.016 ; free physical = 4854 ; free virtual = 7371
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1cc365f34

Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 3792.734 ; gain = 32.016 ; free physical = 4854 ; free virtual = 7371
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1cc365f34

Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 3792.734 ; gain = 32.016 ; free physical = 4854 ; free virtual = 7371
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 154 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |            1994  |            2460  |                                            126  |
|  Constant propagation         |             938  |            4773  |                                            126  |
|  Sweep                        |               0  |            5671  |                                            448  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            154  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.1 ; elapsed = 00:00:00.09 . Memory (MB): peak = 3792.734 ; gain = 0.000 ; free physical = 4854 ; free virtual = 7371
Ending Logic Optimization Task | Checksum: 10de03cb3

Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 3792.734 ; gain = 32.016 ; free physical = 4854 ; free virtual = 7371

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 114 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 9 newly gated: 4 Total Ports: 228
Ending PowerOpt Patch Enables Task | Checksum: 1a156afd5

Time (s): cpu = 00:00:00.63 ; elapsed = 00:00:00.54 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4774 ; free virtual = 7296
Ending Power Optimization Task | Checksum: 1a156afd5

Time (s): cpu = 00:00:41 ; elapsed = 00:00:26 . Memory (MB): peak = 4233.250 ; gain = 440.516 ; free physical = 4819 ; free virtual = 7341

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: ed96594b

Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4837 ; free virtual = 7370
Ending Final Cleanup Task | Checksum: ed96594b

Time (s): cpu = 00:00:13 ; elapsed = 00:00:06 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4837 ; free virtual = 7370

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4837 ; free virtual = 7370
Ending Netlist Obfuscation Task | Checksum: ed96594b

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4837 ; free virtual = 7370
INFO: [Common 17-83] Releasing license: Implementation
64 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:27 ; elapsed = 00:00:55 . Memory (MB): peak = 4233.250 ; gain = 883.316 ; free physical = 4837 ; free virtual = 7370
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.33 ; elapsed = 00:00:00.07 . Memory (MB): peak = 4233.250 ; gain = 0.000 ; free physical = 4822 ; free virtual = 7358
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:35 ; elapsed = 00:00:08 . Memory (MB): peak = 4269.281 ; gain = 36.031 ; free physical = 4641 ; free virtual = 7186
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4629 ; free virtual = 7175
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 736e40f6

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4629 ; free virtual = 7175
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4629 ; free virtual = 7175

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: de8a97d6

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4659 ; free virtual = 7206

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 7b0e7ca7

Time (s): cpu = 00:00:32 ; elapsed = 00:00:13 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4510 ; free virtual = 7176

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 7b0e7ca7

Time (s): cpu = 00:00:32 ; elapsed = 00:00:13 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4510 ; free virtual = 7176
Phase 1 Placer Initialization | Checksum: 7b0e7ca7

Time (s): cpu = 00:00:32 ; elapsed = 00:00:13 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4512 ; free virtual = 7178

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: fe5d812d

Time (s): cpu = 00:00:43 ; elapsed = 00:00:16 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4467 ; free virtual = 7134

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 99f4eb66

Time (s): cpu = 00:00:52 ; elapsed = 00:00:18 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4460 ; free virtual = 7127

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 99f4eb66

Time (s): cpu = 00:00:52 ; elapsed = 00:00:18 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4460 ; free virtual = 7127

Phase 2.4 Global Placement Core

Phase 2.4.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 1986 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 799 nets or LUTs. Breaked 0 LUT, combined 799 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4441 ; free virtual = 7111

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            799  |                   799  |           0  |           1  |  00:00:03  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            799  |                   799  |           0  |           4  |  00:00:03  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.1 Physical Synthesis In Placer | Checksum: f4481a0d

Time (s): cpu = 00:02:21 ; elapsed = 00:00:48 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4429 ; free virtual = 7100
Phase 2.4 Global Placement Core | Checksum: 190ab87af

Time (s): cpu = 00:02:28 ; elapsed = 00:00:51 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4370 ; free virtual = 7050
Phase 2 Global Placement | Checksum: 190ab87af

Time (s): cpu = 00:02:28 ; elapsed = 00:00:51 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4367 ; free virtual = 7048

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 17f6796f6

Time (s): cpu = 00:02:38 ; elapsed = 00:00:54 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4291 ; free virtual = 6972

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 20081e9cc

Time (s): cpu = 00:03:04 ; elapsed = 00:01:06 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4210 ; free virtual = 6892

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 12eaf7797

Time (s): cpu = 00:03:05 ; elapsed = 00:01:07 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4210 ; free virtual = 6892

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 1b67519b7

Time (s): cpu = 00:03:06 ; elapsed = 00:01:07 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4210 ; free virtual = 6892

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 1a7153e1c

Time (s): cpu = 00:03:18 ; elapsed = 00:01:18 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4133 ; free virtual = 6818

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 12b545a23

Time (s): cpu = 00:03:21 ; elapsed = 00:01:20 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4169 ; free virtual = 6853

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 19429d5cf

Time (s): cpu = 00:03:21 ; elapsed = 00:01:21 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4169 ; free virtual = 6853
Phase 3 Detail Placement | Checksum: 19429d5cf

Time (s): cpu = 00:03:21 ; elapsed = 00:01:21 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4166 ; free virtual = 6850

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 14e069097

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=29.485 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 18efc09e2

Time (s): cpu = 00:00:05 ; elapsed = 00:00:01 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4137 ; free virtual = 6821
INFO: [Place 46-33] Processed net design_1_i/runge_kutta_45_0/inst/X_BUS_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 1, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 109c5fa17

Time (s): cpu = 00:00:08 ; elapsed = 00:00:02 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4136 ; free virtual = 6821
Phase 4.1.1.1 BUFG Insertion | Checksum: 14e069097

Time (s): cpu = 00:03:59 ; elapsed = 00:01:31 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=29.485. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 10f90e140

Time (s): cpu = 00:03:59 ; elapsed = 00:01:32 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Time (s): cpu = 00:03:59 ; elapsed = 00:01:32 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820
Phase 4.1 Post Commit Optimization | Checksum: 10f90e140

Time (s): cpu = 00:03:59 ; elapsed = 00:01:32 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 10f90e140

Time (s): cpu = 00:04:00 ; elapsed = 00:01:32 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                2x2|                4x4|
|___________|___________________|___________________|
|      South|                2x2|                2x2|
|___________|___________________|___________________|
|       East|                4x4|                4x4|
|___________|___________________|___________________|
|       West|                1x1|                8x8|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 10f90e140

Time (s): cpu = 00:04:01 ; elapsed = 00:01:33 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820
Phase 4.3 Placer Reporting | Checksum: 10f90e140

Time (s): cpu = 00:04:01 ; elapsed = 00:01:33 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820

Time (s): cpu = 00:04:01 ; elapsed = 00:01:33 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 16639c814

Time (s): cpu = 00:04:01 ; elapsed = 00:01:33 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820
Ending Placer Task | Checksum: e646c896

Time (s): cpu = 00:04:02 ; elapsed = 00:01:34 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4135 ; free virtual = 6820
INFO: [Common 17-83] Releasing license: Implementation
100 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:04:05 ; elapsed = 00:01:35 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4185 ; free virtual = 6870
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:03 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4066 ; free virtual = 6827
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:08 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4161 ; free virtual = 6863
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.15 ; elapsed = 00:00:00.24 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4138 ; free virtual = 6840
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.23 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4157 ; free virtual = 6859
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
109 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:25 ; elapsed = 00:00:05 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4118 ; free virtual = 6821
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4031 ; free virtual = 6811
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 4096 ; free virtual = 6817
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: 39329f0a ConstDB: 0 ShapeSum: ad14298c RouteDB: 0
Post Restoration Checksum: NetGraph: 450fd3ec NumContArr: e059c6ae Constraints: 0 Timing: 0
Phase 1 Build RT Design | Checksum: 125699a9a

Time (s): cpu = 00:00:51 ; elapsed = 00:00:27 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3993 ; free virtual = 6715

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 125699a9a

Time (s): cpu = 00:00:51 ; elapsed = 00:00:27 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3961 ; free virtual = 6683

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 125699a9a

Time (s): cpu = 00:00:51 ; elapsed = 00:00:27 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3961 ; free virtual = 6683
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: b01ba162

Time (s): cpu = 00:01:26 ; elapsed = 00:00:38 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3926 ; free virtual = 6649
INFO: [Route 35-416] Intermediate Timing Summary | WNS=29.745 | TNS=0.000  | WHS=-0.221 | THS=-295.155|


Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 51112
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 51112
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: 4bad9e93

Time (s): cpu = 00:01:46 ; elapsed = 00:00:43 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3913 ; free virtual = 6636

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 4bad9e93

Time (s): cpu = 00:01:46 ; elapsed = 00:00:43 . Memory (MB): peak = 4269.281 ; gain = 0.000 ; free physical = 3913 ; free virtual = 6636
Phase 3 Initial Routing | Checksum: 1be74d7ee

Time (s): cpu = 00:02:21 ; elapsed = 00:00:49 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3902 ; free virtual = 6626

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 4187
 Number of Nodes with overlaps = 159
 Number of Nodes with overlaps = 13
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=27.195 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1ba27e4e4

Time (s): cpu = 00:03:13 ; elapsed = 00:01:14 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 11
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=27.195 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1b62acca1

Time (s): cpu = 00:03:15 ; elapsed = 00:01:16 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633
Phase 4 Rip-up And Reroute | Checksum: 1b62acca1

Time (s): cpu = 00:03:15 ; elapsed = 00:01:16 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 157d051c5

Time (s): cpu = 00:03:22 ; elapsed = 00:01:18 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633
INFO: [Route 35-416] Intermediate Timing Summary | WNS=27.195 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 157d051c5

Time (s): cpu = 00:03:22 ; elapsed = 00:01:18 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 157d051c5

Time (s): cpu = 00:03:22 ; elapsed = 00:01:18 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633
Phase 5 Delay and Skew Optimization | Checksum: 157d051c5

Time (s): cpu = 00:03:22 ; elapsed = 00:01:18 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1a682ef89

Time (s): cpu = 00:03:31 ; elapsed = 00:01:21 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633
INFO: [Route 35-416] Intermediate Timing Summary | WNS=27.195 | TNS=0.000  | WHS=0.031  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1b5907787

Time (s): cpu = 00:03:31 ; elapsed = 00:01:21 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633
Phase 6 Post Hold Fix | Checksum: 1b5907787

Time (s): cpu = 00:03:31 ; elapsed = 00:01:21 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3909 ; free virtual = 6633

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 16.4649 %
  Global Horizontal Routing Utilization  = 20.0643 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1b70dd37c

Time (s): cpu = 00:03:32 ; elapsed = 00:01:22 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3907 ; free virtual = 6631

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1b70dd37c

Time (s): cpu = 00:03:32 ; elapsed = 00:01:22 . Memory (MB): peak = 4278.742 ; gain = 9.461 ; free physical = 3907 ; free virtual = 6631

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1d9dc22f8

Time (s): cpu = 00:03:38 ; elapsed = 00:01:25 . Memory (MB): peak = 4294.750 ; gain = 25.469 ; free physical = 3905 ; free virtual = 6629

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=27.195 | TNS=0.000  | WHS=0.031  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1d9dc22f8

Time (s): cpu = 00:03:45 ; elapsed = 00:01:26 . Memory (MB): peak = 4294.750 ; gain = 25.469 ; free physical = 3907 ; free virtual = 6631
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:03:45 ; elapsed = 00:01:27 . Memory (MB): peak = 4294.750 ; gain = 25.469 ; free physical = 3962 ; free virtual = 6686

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
125 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:04:23 ; elapsed = 00:01:35 . Memory (MB): peak = 4294.750 ; gain = 25.469 ; free physical = 3962 ; free virtual = 6686
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4294.750 ; gain = 0.000 ; free physical = 3869 ; free virtual = 6680
INFO: [Common 17-1381] The checkpoint '/home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:08 . Memory (MB): peak = 4302.754 ; gain = 8.004 ; free physical = 3920 ; free virtual = 6666
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:40 ; elapsed = 00:00:10 . Memory (MB): peak = 4310.758 ; gain = 8.004 ; free physical = 3885 ; free virtual = 6631
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:31 ; elapsed = 00:00:07 . Memory (MB): peak = 4321.664 ; gain = 10.906 ; free physical = 3881 ; free virtual = 6627
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
137 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:33 ; elapsed = 00:00:12 . Memory (MB): peak = 4401.559 ; gain = 79.895 ; free physical = 3847 ; free virtual = 6604
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Common 17-206] Exiting Vivado at Mon Jun 26 11:25:34 2023...
#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:47:01 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Mon Jun 26 11:26:00 2023
# Process ID: 54609
# Current directory: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/davide/Projects/runge_kutta_45/rk45_vivado/rk45_vivado.runs/impl_1/vivado.jou
# Running On: davide-N552VW, OS: Linux, CPU Frequency: 2600.000 MHz, CPU Physical cores: 4, Host memory: 16659 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.05 ; elapsed = 00:00:00.06 . Memory (MB): peak = 3142.750 ; gain = 0.000 ; free physical = 5933 ; free virtual = 8709
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.85 ; elapsed = 00:00:01 . Memory (MB): peak = 3142.773 ; gain = 0.000 ; free physical = 1497 ; free virtual = 5665
INFO: [Netlist 29-17] Analyzing 3202 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF Files: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3419.812 ; gain = 57.008 ; free physical = 169 ; free virtual = 4016
Restored from archive | CPU: 3.650000 secs | Memory: 58.348938 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3419.812 ; gain = 57.008 ; free physical = 169 ; free virtual = 4016
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3419.812 ; gain = 0.000 ; free physical = 188 ; free virtual = 4038
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 32 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 30 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 2 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2022.1 (64-bit) build 3526262
open_checkpoint: Time (s): cpu = 00:00:46 ; elapsed = 00:00:53 . Memory (MB): peak = 3423.812 ; gain = 281.062 ; free physical = 187 ; free virtual = 4038
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2022.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__11/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__15/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__7 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__7 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__8 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__8 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9 input design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__0 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__12 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__13 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__15 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__16 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__17 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__19 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__20 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__23 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__23/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__24 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__24/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__25 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__25/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__28 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__28/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__29 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__29/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__3 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__30 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__30/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__33 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__33/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__34 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__34/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__35 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__35/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__38 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__38/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__39 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__39/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__40 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__40/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__44 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__44/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__45 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__45/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__47 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__47/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__49 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__49/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__5 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__53 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__53/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__53 input design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__53/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9 output design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__54 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__54/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__56 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__56/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__57 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__57/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__8 output design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__0 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__12 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__14 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__16 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__16/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__18 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__2 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__21 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__5 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__9 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0__0 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__1 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__10 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__11 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__12 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__13 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__14 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__15 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__16 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__16/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__17 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__18 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__19 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__2 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__20 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__21 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__22 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__23 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__24 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__24/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__25 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__25/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__26 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__26/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__27 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__27/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__28 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__28/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__29 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__29/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__3 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__30 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__31 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__31/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__32 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__32/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__4 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__5 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__6 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__7 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__8 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__9 output design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_macply_fu_959/mul_85s_85s_170_1_1_U23/dout__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__48/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__50/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__51/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__52/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__54 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__54/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__56 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__56/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__57 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__57/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__8 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_multiply_fu_1093/mul_177s_177s_287_1_1_U40/dout__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__0 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__12 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__14 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__16 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__2 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__21 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__5 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__9 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/grp_vel_der_Pipeline_sq_sum_loop_fu_135/squared_sum_V_macply_fu_73/mul_85s_85s_170_1_1_U23/dout__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0__0 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__1 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__10 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__11 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__12 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__13 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__14 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__15 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__16 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__17 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__18 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__19 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__2 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__20 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__21 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__22 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__23 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__24 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__25 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__26 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__27 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__28 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__29 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__3 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__30 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__31 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__32 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__4 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__5 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__6 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__7 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__8 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__9 multiplier stage design_1_i/runge_kutta_45_0/inst/grp_ode_fpga_fu_1163/grp_vel_der_fu_210/op_V_multiply_fu_155/mul_177s_177s_287_1_1_U40/dout__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A3)*A2)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A5)*A2)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A4)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A1)+((~A1)*(~A4)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A4)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A5)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A1)+((~A1)*(~A6)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A1)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A1)+((~A1)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A3)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A6)+((~A6)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A6' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A2)+((~A2)*(~A1)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC RTSTAT-10] No routable loads: 154 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon_1/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.gen_axi3_conv.axi3_conv_inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_ds/inst/gen_downsizer.gen_cascaded_downsizer.first_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0]... and (the first 15 of 98 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 383 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
22 Infos, 293 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:02:03 ; elapsed = 00:00:36 . Memory (MB): peak = 4077.453 ; gain = 653.641 ; free physical = 865 ; free virtual = 4336
INFO: [Common 17-206] Exiting Vivado at Mon Jun 26 11:27:36 2023...
