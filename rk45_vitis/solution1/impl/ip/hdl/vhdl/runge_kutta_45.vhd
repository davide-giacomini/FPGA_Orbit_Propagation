-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity runge_kutta_45 is
generic (
    C_M_AXI_X_BUS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_X_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_X_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_BUS_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_X_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_X_BUS_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_T_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_T_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_T_BUS_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_T_BUS_USER_VALUE : INTEGER := 0;
    C_M_AXI_T_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_T_BUS_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_X_BUS_USER_VALUE : INTEGER := 0;
    C_M_AXI_X_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_X_BUS_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_X_BUS_AWVALID : OUT STD_LOGIC;
    m_axi_X_BUS_AWREADY : IN STD_LOGIC;
    m_axi_X_BUS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_X_BUS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ID_WIDTH-1 downto 0);
    m_axi_X_BUS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_X_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_X_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_X_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_X_BUS_WVALID : OUT STD_LOGIC;
    m_axi_X_BUS_WREADY : IN STD_LOGIC;
    m_axi_X_BUS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_DATA_WIDTH-1 downto 0);
    m_axi_X_BUS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_X_BUS_WLAST : OUT STD_LOGIC;
    m_axi_X_BUS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ID_WIDTH-1 downto 0);
    m_axi_X_BUS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_X_BUS_ARVALID : OUT STD_LOGIC;
    m_axi_X_BUS_ARREADY : IN STD_LOGIC;
    m_axi_X_BUS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_X_BUS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ID_WIDTH-1 downto 0);
    m_axi_X_BUS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_X_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_X_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_X_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_X_BUS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_X_BUS_RVALID : IN STD_LOGIC;
    m_axi_X_BUS_RREADY : OUT STD_LOGIC;
    m_axi_X_BUS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_X_BUS_DATA_WIDTH-1 downto 0);
    m_axi_X_BUS_RLAST : IN STD_LOGIC;
    m_axi_X_BUS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ID_WIDTH-1 downto 0);
    m_axi_X_BUS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_X_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_BVALID : IN STD_LOGIC;
    m_axi_X_BUS_BREADY : OUT STD_LOGIC;
    m_axi_X_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_X_BUS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_X_BUS_ID_WIDTH-1 downto 0);
    m_axi_X_BUS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_X_BUS_BUSER_WIDTH-1 downto 0);
    m_axi_T_BUS_AWVALID : OUT STD_LOGIC;
    m_axi_T_BUS_AWREADY : IN STD_LOGIC;
    m_axi_T_BUS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_T_BUS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ID_WIDTH-1 downto 0);
    m_axi_T_BUS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_T_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_T_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_T_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_T_BUS_WVALID : OUT STD_LOGIC;
    m_axi_T_BUS_WREADY : IN STD_LOGIC;
    m_axi_T_BUS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_DATA_WIDTH-1 downto 0);
    m_axi_T_BUS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_T_BUS_WLAST : OUT STD_LOGIC;
    m_axi_T_BUS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ID_WIDTH-1 downto 0);
    m_axi_T_BUS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_T_BUS_ARVALID : OUT STD_LOGIC;
    m_axi_T_BUS_ARREADY : IN STD_LOGIC;
    m_axi_T_BUS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_T_BUS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ID_WIDTH-1 downto 0);
    m_axi_T_BUS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_T_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_T_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_T_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_T_BUS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_T_BUS_RVALID : IN STD_LOGIC;
    m_axi_T_BUS_RREADY : OUT STD_LOGIC;
    m_axi_T_BUS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_T_BUS_DATA_WIDTH-1 downto 0);
    m_axi_T_BUS_RLAST : IN STD_LOGIC;
    m_axi_T_BUS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ID_WIDTH-1 downto 0);
    m_axi_T_BUS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_T_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_T_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_BVALID : IN STD_LOGIC;
    m_axi_T_BUS_BREADY : OUT STD_LOGIC;
    m_axi_T_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_T_BUS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_T_BUS_ID_WIDTH-1 downto 0);
    m_axi_T_BUS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_T_BUS_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of runge_kutta_45 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "runge_kutta_45_runge_kutta_45,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=73.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=207,HLS_SYN_DSP=0,HLS_SYN_FF=11320,HLS_SYN_LUT=55170,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (62 downto 0) := "000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (62 downto 0) := "000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (62 downto 0) := "000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (62 downto 0) := "000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (62 downto 0) := "000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (62 downto 0) := "000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (62 downto 0) := "000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (62 downto 0) := "000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (62 downto 0) := "000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (62 downto 0) := "001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (62 downto 0) := "010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (62 downto 0) := "100000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv56_80000000000000 : STD_LOGIC_VECTOR (55 downto 0) := "10000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv56_8E147AE147AE18 : STD_LOGIC_VECTOR (55 downto 0) := "10001110000101000111101011100001010001111010111000011000";
    constant ap_const_lv56_7EB851EB851EB8 : STD_LOGIC_VECTOR (55 downto 0) := "01111110101110000101000111101011100001010001111010111000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv177_lc_1 : STD_LOGIC_VECTOR (176 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv85_BAAAAAAAAAAAA : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000001011101010101010101010101010101010101010101010101010";
    constant ap_const_lv85_0 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv85_39809334AC0BF6 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000111001100000001001001100110100101011000000101111110110";
    constant ap_const_lv85_53555555555554 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000001010011010101010101010101010101010101010101010101010100";
    constant ap_const_lv85_1FFFFFFFD6BC609A90E7DA : STD_LOGIC_VECTOR (84 downto 0) := "1111111111111111111111111111111010110101111000110000010011010100100001110011111011010";
    constant ap_const_lv85_10C30C30C30C31 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000010000110000110000110000110000110000110000110000110001";
    constant ap_const_lv85_28641FDB9753 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000001010000110010000011111110110111001011101010011";
    constant ap_const_lv85_1FFFFFFFFF74A52D57AA02 : STD_LOGIC_VECTOR (84 downto 0) := "1111111111111111111111111111111111111011101001010010100101101010101111010101000000010";
    constant ap_const_lv85_4BBBBBBBBBBBC : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000100101110111011101110111011101110111011101110111100";
    constant ap_const_lv85_1FFFFFFFF97D4B8B4D79EA : STD_LOGIC_VECTOR (84 downto 0) := "1111111111111111111111111111111111001011111010100101110001011010011010111100111101010";
    constant ap_const_lv85_55D229EF6BC39 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000101010111010010001010011110111101101011110000111001";
    constant ap_const_lv85_1FFFFFFFFCCCCCCCCCCCCD : STD_LOGIC_VECTOR (84 downto 0) := "1111111111111111111111111111111111100110011001100110011001100110011001100110011001101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011000000000000";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_37 : STD_LOGIC_VECTOR (11 downto 0) := "000000110111";
    constant ap_const_lv12_FC9 : STD_LOGIC_VECTOR (11 downto 0) := "111111001001";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_55 : STD_LOGIC_VECTOR (11 downto 0) := "000001010101";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv85_1FFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (84 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_FFF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal yy : STD_LOGIC_VECTOR (63 downto 0);
    signal tt : STD_LOGIC_VECTOR (63 downto 0);
    signal tf : STD_LOGIC_VECTOR (63 downto 0);
    signal h0 : STD_LOGIC_VECTOR (63 downto 0);
    signal atol : STD_LOGIC_VECTOR (63 downto 0);
    signal h_max : STD_LOGIC_VECTOR (63 downto 0);
    signal h_min : STD_LOGIC_VECTOR (63 downto 0);
    signal mu : STD_LOGIC_VECTOR (63 downto 0);
    signal size : STD_LOGIC_VECTOR (31 downto 0);
    signal size_ap_vld : STD_LOGIC;
    signal flag : STD_LOGIC;
    signal flag_ap_vld : STD_LOGIC;
    signal X_BUS_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal X_BUS_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal X_BUS_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal and_ln132_reg_3120 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal icmp_ln254_reg_3371 : STD_LOGIC_VECTOR (0 downto 0);
    signal T_BUS_blk_n_AR : STD_LOGIC;
    signal T_BUS_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal T_BUS_blk_n_AW : STD_LOGIC;
    signal T_BUS_blk_n_B : STD_LOGIC;
    signal grp_macply_fu_959_ap_return : STD_LOGIC_VECTOR (176 downto 0);
    signal reg_787 : STD_LOGIC_VECTOR (176 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state32_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state33_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state34_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state35_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state36_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state37_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal n12_reg_846 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_211_reg_858 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_1028 : STD_LOGIC_VECTOR (176 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state43_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state50_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state44_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_state45_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_state46_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_state47_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_state48_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_state42_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal k_V_q0 : STD_LOGIC_VECTOR (84 downto 0);
    signal reg_1257 : STD_LOGIC_VECTOR (84 downto 0);
    signal k_V_q1 : STD_LOGIC_VECTOR (84 downto 0);
    signal reg_1263 : STD_LOGIC_VECTOR (84 downto 0);
    signal reg_1269 : STD_LOGIC_VECTOR (84 downto 0);
    signal mu_read_reg_2912 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_min_read_reg_2917 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_max_read_reg_2922 : STD_LOGIC_VECTOR (63 downto 0);
    signal atol_read_reg_2927 : STD_LOGIC_VECTOR (63 downto 0);
    signal h0_read_reg_2932 : STD_LOGIC_VECTOR (63 downto 0);
    signal tf_read_reg_2937 : STD_LOGIC_VECTOR (63 downto 0);
    signal tt_read_reg_2942 : STD_LOGIC_VECTOR (63 downto 0);
    signal yy_read_reg_2949 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_reg_2973 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln122_1_reg_2979 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_ap_fixed_base_fu_1123_ap_return : STD_LOGIC_VECTOR (84 downto 0);
    signal mu_loc_V_reg_2995 : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal atol_loc_V_ap_fixed_base_fu_1128_ap_return : STD_LOGIC_VECTOR (84 downto 0);
    signal atol_loc_V_reg_3000 : STD_LOGIC_VECTOR (84 downto 0);
    signal tf_loc_V_ap_fixed_base_fu_1133_ap_return : STD_LOGIC_VECTOR (84 downto 0);
    signal tf_loc_V_reg_3005 : STD_LOGIC_VECTOR (84 downto 0);
    signal trunc_ln122_fu_1315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln122_reg_3013 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_max_loc_7_fu_1584_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal h_max_loc_7_reg_3018 : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal h_min_loc_7_fu_1857_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal h_min_loc_7_reg_3024 : STD_LOGIC_VECTOR (84 downto 0);
    signal h_loc_5_fu_2148_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal lhs_V_1_fu_2160_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal lhs_V_1_reg_3041 : STD_LOGIC_VECTOR (85 downto 0);
    signal conv_i602_fu_2163_p1 : STD_LOGIC_VECTOR (88 downto 0);
    signal conv_i602_reg_3106 : STD_LOGIC_VECTOR (88 downto 0);
    signal icmp_ln1696_2_fu_2166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1696_2_reg_3111 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1696_fu_2171_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1696_reg_3115 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal and_ln132_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tk_next_1_fu_2205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln8_reg_3129 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln_reg_3135 : STD_LOGIC_VECTOR (59 downto 0);
    signal cycles_1_fu_2309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_loc_7_fu_2339_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal h_loc_7_reg_3156 : STD_LOGIC_VECTOR (84 downto 0);
    signal trunc_ln125_fu_2347_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln125_reg_3163 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal trunc_ln125_1_fu_2351_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln125_1_reg_3168 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal trunc_ln125_2_fu_2355_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln125_2_reg_3174 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln160_fu_2366_p1 : STD_LOGIC_VECTOR (176 downto 0);
    signal sext_ln160_reg_3180 : STD_LOGIC_VECTOR (176 downto 0);
    signal add_ln170_fu_2382_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln170_reg_3185 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal n_fu_2388_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_reg_3190 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal i_fu_2409_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_3198 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln160_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_reg_3203 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln180_fu_2421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_reg_3207 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state31_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln187_fu_2467_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln187_reg_3232 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln180_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln180_reg_3247 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_3_fu_2515_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_3_reg_3256 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_V_addr_reg_3271 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_V_addr_reg_3271_pp1_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln201_fu_2568_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln201_reg_3287 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln195_fu_2600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln195_reg_3302 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_4_fu_2616_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_4_reg_3311 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1698_fu_2629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1698_reg_3319 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal sub_ln220_fu_2653_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln220_reg_3323 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1698_1_fu_2660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1698_1_reg_3328 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln231_fu_2683_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln231_reg_3332 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln859_fu_2719_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln859_reg_3337 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal h_loc_8_fu_2755_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal tt_loc_V_q0 : STD_LOGIC_VECTOR (84 downto 0);
    signal t_gap_fu_2767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_gap_reg_3360 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1696_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul389_fu_2823_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul389_reg_3365 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln254_fu_2829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln9_reg_3375 : STD_LOGIC_VECTOR (59 downto 0);
    signal add405_fu_2886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add405_reg_3386 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln6_fu_2893_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln6_reg_3391 : STD_LOGIC_VECTOR (34 downto 0);
    signal trunc_ln257_fu_2902_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln257_reg_3396 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_ode_fpga_fu_1163_ap_done : STD_LOGIC;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal k_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_V_ce0 : STD_LOGIC;
    signal k_V_we0 : STD_LOGIC;
    signal k_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_V_ce1 : STD_LOGIC;
    signal yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal yy_loc_V_ce0 : STD_LOGIC;
    signal yy_loc_V_we0 : STD_LOGIC;
    signal yy_loc_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal yy_loc_V_q0 : STD_LOGIC_VECTOR (84 downto 0);
    signal yy_loc_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal yy_loc_V_ce1 : STD_LOGIC;
    signal yy_loc_V_q1 : STD_LOGIC_VECTOR (84 downto 0);
    signal tt_loc_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tt_loc_V_ce0 : STD_LOGIC;
    signal tt_loc_V_we0 : STD_LOGIC;
    signal tt_loc_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal c_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_V_ce0 : STD_LOGIC;
    signal c_V_we0 : STD_LOGIC;
    signal c_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal c_V_q0 : STD_LOGIC_VECTOR (84 downto 0);
    signal c_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_V_ce1 : STD_LOGIC;
    signal c_V_we1 : STD_LOGIC;
    signal c_V_d1 : STD_LOGIC_VECTOR (84 downto 0);
    signal e_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_V_ce0 : STD_LOGIC;
    signal e_V_we0 : STD_LOGIC;
    signal e_V_q0 : STD_LOGIC_VECTOR (176 downto 0);
    signal e_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_V_ce1 : STD_LOGIC;
    signal e_V_we1 : STD_LOGIC;
    signal e_V_d1 : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_macply_fu_959_ap_ready : STD_LOGIC;
    signal grp_macply_fu_959_result_V_read : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_macply_fu_959_x_V_read : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_macply_fu_959_y_V_read : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_multiply_fu_1093_ap_ready : STD_LOGIC;
    signal grp_multiply_fu_1093_y_V_read : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_multiply_fu_1093_ap_return : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_ap_fixed_base_fu_1123_ap_ready : STD_LOGIC;
    signal grp_ap_fixed_base_fu_1123_d : STD_LOGIC_VECTOR (63 downto 0);
    signal atol_loc_V_ap_fixed_base_fu_1128_ap_ready : STD_LOGIC;
    signal atol_loc_V_ap_fixed_base_fu_1128_d : STD_LOGIC_VECTOR (63 downto 0);
    signal tf_loc_V_ap_fixed_base_fu_1133_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WLAST : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_RREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_BREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_we0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_atol_loc_V_ap_fixed_base_fu_1128_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WLAST : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_RREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_BREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WLAST : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_RREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_BREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_ce0 : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_ap_start : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_ap_idle : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_ap_ready : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ode_fpga_fu_1163_out_r_ce0 : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_out_r_we0 : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_out_r_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_ode_fpga_fu_1163_out_offset : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ode_fpga_fu_1163_in_r_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_ode_fpga_fu_1163_in_r_ce0 : STD_LOGIC;
    signal grp_ode_fpga_fu_1163_c_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ode_fpga_fu_1163_c_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out_ap_vld : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din1 : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din2 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din3 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_p_Val2_21_out : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_p_Val2_21_out_ap_vld : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din1 : STD_LOGIC_VECTOR (176 downto 0);
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din2 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din3 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_Q_V_5_out : STD_LOGIC_VECTOR (88 downto 0);
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_Q_V_5_out_ap_vld : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_we0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce1 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_we0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce1 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WLAST : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_RREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_BREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_ce0 : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_idle : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_ready : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WLAST : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARVALID : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_RREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_BREADY : STD_LOGIC;
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_ce0 : STD_LOGIC;
    signal T_BUS_AWVALID : STD_LOGIC;
    signal T_BUS_AWREADY : STD_LOGIC;
    signal T_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal T_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal T_BUS_WVALID : STD_LOGIC;
    signal T_BUS_WREADY : STD_LOGIC;
    signal T_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal T_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal T_BUS_ARVALID : STD_LOGIC;
    signal T_BUS_ARREADY : STD_LOGIC;
    signal T_BUS_RVALID : STD_LOGIC;
    signal T_BUS_RREADY : STD_LOGIC;
    signal T_BUS_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal T_BUS_RFIFONUM : STD_LOGIC_VECTOR (4 downto 0);
    signal T_BUS_BVALID : STD_LOGIC;
    signal T_BUS_BREADY : STD_LOGIC;
    signal X_BUS_AWVALID : STD_LOGIC;
    signal X_BUS_AWREADY : STD_LOGIC;
    signal X_BUS_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal X_BUS_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal X_BUS_WVALID : STD_LOGIC;
    signal X_BUS_WREADY : STD_LOGIC;
    signal X_BUS_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal X_BUS_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal X_BUS_ARVALID : STD_LOGIC;
    signal X_BUS_ARREADY : STD_LOGIC;
    signal X_BUS_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal X_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal X_BUS_RVALID : STD_LOGIC;
    signal X_BUS_RREADY : STD_LOGIC;
    signal X_BUS_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal X_BUS_RFIFONUM : STD_LOGIC_VECTOR (4 downto 0);
    signal X_BUS_BVALID : STD_LOGIC;
    signal X_BUS_BREADY : STD_LOGIC;
    signal lhs_V32_reg_718 : STD_LOGIC_VECTOR (84 downto 0);
    signal sub_ln85931_reg_728 : STD_LOGIC_VECTOR (14 downto 0);
    signal tk_prev_reg_870 : STD_LOGIC_VECTOR (31 downto 0);
    signal tk_prev30_reg_740 : STD_LOGIC_VECTOR (31 downto 0);
    signal tk_next_reg_809 : STD_LOGIC_VECTOR (31 downto 0);
    signal tk_next29_reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal cycles_reg_797 : STD_LOGIC_VECTOR (31 downto 0);
    signal cycles27_reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal flag_loc_V24_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state20 : BOOLEAN;
    signal i_814_reg_822 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_113_reg_834 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal icmp_ln162_fu_2403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_n12_phi_fu_850_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_n_211_phi_fu_862_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_tk_prev_phi_fu_874_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op557_call_state56 : BOOLEAN;
    signal ap_block_state56_on_subcall_done : BOOLEAN;
    signal scale_V_1_reg_886 : STD_LOGIC_VECTOR (55 downto 0);
    signal flag_loc_V_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_tk_next28_phi_fu_924_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tk_next28_reg_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_cycles26_phi_fu_937_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal cycles26_reg_933 : STD_LOGIC_VECTOR (19 downto 0);
    signal flag_loc_V25_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal zext_ln243_fu_2733_p1 : STD_LOGIC_VECTOR (176 downto 0);
    signal bitcast_ln122_fu_2156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg : STD_LOGIC := '0';
    signal grp_ode_fpga_fu_1163_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg : STD_LOGIC := '0';
    signal grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg : STD_LOGIC := '0';
    signal grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state65_ignore_call3 : BOOLEAN;
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal zext_ln162_fu_2398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_3_fu_2436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_4_fu_2451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_5_fu_2462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_6_fu_2483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_7_fu_2494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_8_fu_2510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln195_fu_2521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_3_fu_2537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_4_fu_2552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_5_fu_2563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_6_fu_2584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_7_fu_2595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_8_fu_2611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom318_fu_2634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom348_fu_2664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_fu_2698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln119_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln122_fu_1305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln137_fu_2289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln140_fu_2299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln254_fu_2876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal zext_ln254_1_fu_2871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state65 : BOOLEAN;
    signal grp_fu_1251_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_1239_p4 : STD_LOGIC_VECTOR (84 downto 0);
    signal ireg_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1334_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_fu_1348_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_30_fu_1352_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_fu_1360_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_1364_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln590_fu_1322_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_fu_1344_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln616_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln616_fu_1396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_fu_1402_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_9_fu_1370_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_fu_1408_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln621_fu_1438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln621_fu_1442_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_max_loc_2_fu_1452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln618_fu_1422_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal zext_ln639_fu_1468_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln606_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln606_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln617_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln115_fu_1460_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln617_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_1_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_max_loc_1_fu_1446_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_max_loc_4_fu_1490_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_max_loc_5_fu_1522_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln616_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln616_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln638_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_max_loc_3_fu_1472_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal sext_ln115_fu_1530_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln616_3_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln638_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln638_1_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln638_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_max_loc_6_fu_1552_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal ireg_1_fu_1592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_1_fu_1607_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_1_fu_1621_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_32_fu_1625_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_1_fu_1633_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_31_fu_1599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_6_fu_1637_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln590_1_fu_1595_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_1_fu_1617_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1657_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln616_1_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln616_1_fu_1669_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_1_fu_1675_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_10_fu_1643_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_1_fu_1681_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln621_1_fu_1711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln621_1_fu_1715_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_min_loc_2_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln618_1_fu_1695_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal zext_ln639_1_fu_1741_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln606_1_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_1_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln606_1_fu_1751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln617_1_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln115_1_fu_1733_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln617_1_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_1_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_1_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_2_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_3_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_min_loc_1_fu_1719_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_min_loc_4_fu_1763_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_min_loc_5_fu_1795_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln616_1_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_1_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln616_1_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln638_2_fu_1819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_min_loc_3_fu_1745_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal sext_ln115_1_fu_1803_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln616_4_fu_1833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln638_1_fu_1839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln638_3_fu_1845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln638_1_fu_1851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_min_loc_6_fu_1825_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal ireg_2_fu_1865_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_2_fu_1880_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_2_fu_1894_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_34_fu_1898_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_2_fu_1906_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_33_fu_1872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_7_fu_1910_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln590_2_fu_1868_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_2_fu_1890_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_1930_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln616_2_fu_1936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln616_2_fu_1942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_2_fu_1948_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_fu_1916_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_2_fu_1954_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln621_2_fu_1984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln621_2_fu_1988_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal h_loc_3_fu_1998_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln618_2_fu_1968_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal zext_ln639_2_fu_2014_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln606_2_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_2_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln606_2_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln617_2_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_2_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_2_fu_2042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_4_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln616_2_fu_2060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_2_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln616_2_fu_2066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln616_5_fu_2078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln638_2_fu_2084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln638_5_fu_2090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln638_2_fu_2096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_loc_4_fu_2018_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal and_ln638_4_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln620_5_fu_2054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_loc_2_fu_1992_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln638_1_fu_2116_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln617_2_fu_2030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln638_3_fu_2110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln638_fu_2102_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal sext_ln638_fu_2124_p1 : STD_LOGIC_VECTOR (84 downto 0);
    signal or_ln638_4_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln638_5_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln638_2_fu_2134_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal select_ln623_fu_2006_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln132_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_1_fu_2181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln148_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln149_fu_2199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln135_fu_2217_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln135_1_fu_2223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_gap_1_fu_2229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln3_fu_2235_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln137_fu_2243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln137_fu_2247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln134_fu_2213_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln5_fu_2262_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln140_fu_2270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln140_fu_2274_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln859_2_fu_2319_p0 : STD_LOGIC_VECTOR (84 downto 0);
    signal sext_ln859_fu_2315_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal sext_ln859_2_fu_2319_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal ret_V_fu_2323_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal icmp_ln1695_fu_2329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_loc_fu_2334_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal h_loc_7_fu_2339_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal ref_tmp1_fu_2359_p3 : STD_LOGIC_VECTOR (139 downto 0);
    signal tmp_s_fu_2374_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln170_fu_2370_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln187_2_fu_2426_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln187_fu_2430_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln187_1_fu_2441_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln187_1_fu_2445_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln187_2_fu_2456_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_2471_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln187_fu_2479_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln187_3_fu_2488_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln187_4_fu_2505_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln201_2_fu_2527_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln201_fu_2531_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln201_1_fu_2542_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln201_1_fu_2546_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln201_2_fu_2557_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_2572_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln201_fu_2580_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln201_3_fu_2589_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln201_4_fu_2606_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_2639_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_9_fu_2646_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_fu_2669_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_fu_2676_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln127_1_fu_2694_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln127_fu_2690_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_12_fu_2703_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_fu_2711_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln8_fu_2725_p3 : STD_LOGIC_VECTOR (110 downto 0);
    signal icmp_ln1696_1_fu_2738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln244_fu_2743_p3 : STD_LOGIC_VECTOR (84 downto 0);
    signal icmp_ln1695_1_fu_2750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln252_fu_2775_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln252_1_fu_2787_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln_fu_2779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln252_1_fu_2791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_65_fu_2805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_66_fu_2811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_67_fu_2817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_gap_fu_2799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln4_fu_2835_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln254_fu_2843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln254_fu_2847_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln_fu_2862_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component runge_kutta_45_macply IS
    port (
        ap_ready : OUT STD_LOGIC;
        result_V_read : IN STD_LOGIC_VECTOR (176 downto 0);
        x_V_read : IN STD_LOGIC_VECTOR (84 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (84 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (176 downto 0) );
    end component;


    component runge_kutta_45_multiply IS
    port (
        ap_ready : OUT STD_LOGIC;
        x_V_read : IN STD_LOGIC_VECTOR (176 downto 0);
        y_V_read : IN STD_LOGIC_VECTOR (176 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (176 downto 0) );
    end component;


    component runge_kutta_45_ap_fixed_base IS
    port (
        ap_ready : OUT STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_VITIS_LOOP_119_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_X_BUS_AWVALID : OUT STD_LOGIC;
        m_axi_X_BUS_AWREADY : IN STD_LOGIC;
        m_axi_X_BUS_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WVALID : OUT STD_LOGIC;
        m_axi_X_BUS_WREADY : IN STD_LOGIC;
        m_axi_X_BUS_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_X_BUS_WLAST : OUT STD_LOGIC;
        m_axi_X_BUS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARVALID : OUT STD_LOGIC;
        m_axi_X_BUS_ARREADY : IN STD_LOGIC;
        m_axi_X_BUS_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RVALID : IN STD_LOGIC;
        m_axi_X_BUS_RREADY : OUT STD_LOGIC;
        m_axi_X_BUS_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_RLAST : IN STD_LOGIC;
        m_axi_X_BUS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RFIFONUM : IN STD_LOGIC_VECTOR (4 downto 0);
        m_axi_X_BUS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BVALID : IN STD_LOGIC;
        m_axi_X_BUS_BREADY : OUT STD_LOGIC;
        m_axi_X_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln119 : IN STD_LOGIC_VECTOR (59 downto 0);
        yy_loc_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce0 : OUT STD_LOGIC;
        yy_loc_V_we0 : OUT STD_LOGIC;
        yy_loc_V_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        atol_loc_V_ap_fixed_base_fu_1128_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        atol_loc_V_ap_fixed_base_fu_1128_p_dout0 : IN STD_LOGIC_VECTOR (84 downto 0);
        atol_loc_V_ap_fixed_base_fu_1128_p_ready : IN STD_LOGIC );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_axi_write_yy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_X_BUS_AWVALID : OUT STD_LOGIC;
        m_axi_X_BUS_AWREADY : IN STD_LOGIC;
        m_axi_X_BUS_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WVALID : OUT STD_LOGIC;
        m_axi_X_BUS_WREADY : IN STD_LOGIC;
        m_axi_X_BUS_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_X_BUS_WLAST : OUT STD_LOGIC;
        m_axi_X_BUS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARVALID : OUT STD_LOGIC;
        m_axi_X_BUS_ARREADY : IN STD_LOGIC;
        m_axi_X_BUS_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RVALID : IN STD_LOGIC;
        m_axi_X_BUS_RREADY : OUT STD_LOGIC;
        m_axi_X_BUS_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_RLAST : IN STD_LOGIC;
        m_axi_X_BUS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RFIFONUM : IN STD_LOGIC_VECTOR (4 downto 0);
        m_axi_X_BUS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BVALID : IN STD_LOGIC;
        m_axi_X_BUS_BREADY : OUT STD_LOGIC;
        m_axi_X_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln137 : IN STD_LOGIC_VECTOR (59 downto 0);
        yy_loc_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce0 : OUT STD_LOGIC;
        yy_loc_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_axi_write_tt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_T_BUS_AWVALID : OUT STD_LOGIC;
        m_axi_T_BUS_AWREADY : IN STD_LOGIC;
        m_axi_T_BUS_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_T_BUS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_T_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_WVALID : OUT STD_LOGIC;
        m_axi_T_BUS_WREADY : IN STD_LOGIC;
        m_axi_T_BUS_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_T_BUS_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_T_BUS_WLAST : OUT STD_LOGIC;
        m_axi_T_BUS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_ARVALID : OUT STD_LOGIC;
        m_axi_T_BUS_ARREADY : IN STD_LOGIC;
        m_axi_T_BUS_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_T_BUS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_T_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RVALID : IN STD_LOGIC;
        m_axi_T_BUS_RREADY : OUT STD_LOGIC;
        m_axi_T_BUS_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_T_BUS_RLAST : IN STD_LOGIC;
        m_axi_T_BUS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RFIFONUM : IN STD_LOGIC_VECTOR (4 downto 0);
        m_axi_T_BUS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_BVALID : IN STD_LOGIC;
        m_axi_T_BUS_BREADY : OUT STD_LOGIC;
        m_axi_T_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln140 : IN STD_LOGIC_VECTOR (59 downto 0);
        tt_loc_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tt_loc_V_ce0 : OUT STD_LOGIC;
        tt_loc_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_ode_fpga IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        out_offset : IN STD_LOGIC_VECTOR (2 downto 0);
        in_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
        in_offset : IN STD_LOGIC_VECTOR (11 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
        mu_V_read : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_k_inner IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_814 : IN STD_LOGIC_VECTOR (2 downto 0);
        add_ln170 : IN STD_LOGIC_VECTOR (4 downto 0);
        n_113 : IN STD_LOGIC_VECTOR (2 downto 0);
        k_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k_V_ce0 : OUT STD_LOGIC;
        k_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
        sum_V_1_0_out : OUT STD_LOGIC_VECTOR (176 downto 0);
        sum_V_1_0_out_ap_vld : OUT STD_LOGIC;
        grp_macply_fu_959_p_din1 : OUT STD_LOGIC_VECTOR (176 downto 0);
        grp_macply_fu_959_p_din2 : OUT STD_LOGIC_VECTOR (84 downto 0);
        grp_macply_fu_959_p_din3 : OUT STD_LOGIC_VECTOR (84 downto 0);
        grp_macply_fu_959_p_dout0 : IN STD_LOGIC_VECTOR (176 downto 0);
        grp_macply_fu_959_p_ready : IN STD_LOGIC );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_sq_sum_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        e_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        e_V_ce0 : OUT STD_LOGIC;
        e_V_q0 : IN STD_LOGIC_VECTOR (176 downto 0);
        p_Val2_21_out : OUT STD_LOGIC_VECTOR (176 downto 0);
        p_Val2_21_out_ap_vld : OUT STD_LOGIC;
        grp_macply_fu_959_p_din1 : OUT STD_LOGIC_VECTOR (176 downto 0);
        grp_macply_fu_959_p_din2 : OUT STD_LOGIC_VECTOR (84 downto 0);
        grp_macply_fu_959_p_din3 : OUT STD_LOGIC_VECTOR (84 downto 0);
        grp_macply_fu_959_p_dout0 : IN STD_LOGIC_VECTOR (176 downto 0);
        grp_macply_fu_959_p_ready : IN STD_LOGIC );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_sqrt_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln449 : IN STD_LOGIC_VECTOR (176 downto 0);
        Q_V_5_out : OUT STD_LOGIC_VECTOR (88 downto 0);
        Q_V_5_out_ap_vld : OUT STD_LOGIC );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_update_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln85931 : IN STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce0 : OUT STD_LOGIC;
        yy_loc_V_we0 : OUT STD_LOGIC;
        yy_loc_V_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        yy_loc_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce1 : OUT STD_LOGIC;
        yy_loc_V_q1 : IN STD_LOGIC_VECTOR (84 downto 0);
        sub_ln220 : IN STD_LOGIC_VECTOR (14 downto 0);
        c_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_V_ce0 : OUT STD_LOGIC;
        c_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_update_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln85931 : IN STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce0 : OUT STD_LOGIC;
        yy_loc_V_we0 : OUT STD_LOGIC;
        yy_loc_V_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        yy_loc_V_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce1 : OUT STD_LOGIC;
        yy_loc_V_q1 : IN STD_LOGIC_VECTOR (84 downto 0);
        sub_ln231 : IN STD_LOGIC_VECTOR (14 downto 0);
        c_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        c_V_ce0 : OUT STD_LOGIC;
        c_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_last_axi_write_yy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_X_BUS_AWVALID : OUT STD_LOGIC;
        m_axi_X_BUS_AWREADY : IN STD_LOGIC;
        m_axi_X_BUS_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WVALID : OUT STD_LOGIC;
        m_axi_X_BUS_WREADY : IN STD_LOGIC;
        m_axi_X_BUS_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_X_BUS_WLAST : OUT STD_LOGIC;
        m_axi_X_BUS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARVALID : OUT STD_LOGIC;
        m_axi_X_BUS_ARREADY : IN STD_LOGIC;
        m_axi_X_BUS_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_X_BUS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_X_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_X_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_X_BUS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RVALID : IN STD_LOGIC;
        m_axi_X_BUS_RREADY : OUT STD_LOGIC;
        m_axi_X_BUS_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_X_BUS_RLAST : IN STD_LOGIC;
        m_axi_X_BUS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RFIFONUM : IN STD_LOGIC_VECTOR (4 downto 0);
        m_axi_X_BUS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BVALID : IN STD_LOGIC;
        m_axi_X_BUS_BREADY : OUT STD_LOGIC;
        m_axi_X_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_X_BUS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_X_BUS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln254 : IN STD_LOGIC_VECTOR (59 downto 0);
        mul389 : IN STD_LOGIC_VECTOR (31 downto 0);
        yy_loc_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        yy_loc_V_ce0 : OUT STD_LOGIC;
        yy_loc_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_runge_kutta_45_Pipeline_last_axi_write_tt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_T_BUS_AWVALID : OUT STD_LOGIC;
        m_axi_T_BUS_AWREADY : IN STD_LOGIC;
        m_axi_T_BUS_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_T_BUS_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_T_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_WVALID : OUT STD_LOGIC;
        m_axi_T_BUS_WREADY : IN STD_LOGIC;
        m_axi_T_BUS_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_T_BUS_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_T_BUS_WLAST : OUT STD_LOGIC;
        m_axi_T_BUS_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_ARVALID : OUT STD_LOGIC;
        m_axi_T_BUS_ARREADY : IN STD_LOGIC;
        m_axi_T_BUS_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_T_BUS_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_T_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_T_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_T_BUS_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RVALID : IN STD_LOGIC;
        m_axi_T_BUS_RREADY : OUT STD_LOGIC;
        m_axi_T_BUS_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_T_BUS_RLAST : IN STD_LOGIC;
        m_axi_T_BUS_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RFIFONUM : IN STD_LOGIC_VECTOR (4 downto 0);
        m_axi_T_BUS_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_BVALID : IN STD_LOGIC;
        m_axi_T_BUS_BREADY : OUT STD_LOGIC;
        m_axi_T_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_T_BUS_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_T_BUS_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        add405 : IN STD_LOGIC_VECTOR (31 downto 0);
        tt_loc_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tt_loc_V_ce0 : OUT STD_LOGIC;
        tt_loc_V_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
        tt : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln257 : IN STD_LOGIC_VECTOR (34 downto 0);
        trunc_ln14 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component runge_kutta_45_k_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (84 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_yy_loc_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (84 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_tt_loc_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (84 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_c_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (84 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_e_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (176 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (176 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (176 downto 0) );
    end component;


    component runge_kutta_45_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        yy : OUT STD_LOGIC_VECTOR (63 downto 0);
        tt : OUT STD_LOGIC_VECTOR (63 downto 0);
        tf : OUT STD_LOGIC_VECTOR (63 downto 0);
        h0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        atol : OUT STD_LOGIC_VECTOR (63 downto 0);
        h_max : OUT STD_LOGIC_VECTOR (63 downto 0);
        h_min : OUT STD_LOGIC_VECTOR (63 downto 0);
        mu : OUT STD_LOGIC_VECTOR (63 downto 0);
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        size_ap_vld : IN STD_LOGIC;
        flag : IN STD_LOGIC;
        flag_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component runge_kutta_45_T_BUS_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (4 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component runge_kutta_45_X_BUS_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (4 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    k_V_U : component runge_kutta_45_k_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 85,
        AddressRange => 42,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => k_V_address0,
        ce0 => k_V_ce0,
        we0 => k_V_we0,
        d0 => grp_ode_fpga_fu_1163_out_r_d0,
        q0 => k_V_q0,
        address1 => k_V_address1,
        ce1 => k_V_ce1,
        q1 => k_V_q1);

    yy_loc_V_U : component runge_kutta_45_yy_loc_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 85,
        AddressRange => 24576,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => yy_loc_V_address0,
        ce0 => yy_loc_V_ce0,
        we0 => yy_loc_V_we0,
        d0 => yy_loc_V_d0,
        q0 => yy_loc_V_q0,
        address1 => yy_loc_V_address1,
        ce1 => yy_loc_V_ce1,
        q1 => yy_loc_V_q1);

    tt_loc_V_U : component runge_kutta_45_tt_loc_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 85,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tt_loc_V_address0,
        ce0 => tt_loc_V_ce0,
        we0 => tt_loc_V_we0,
        d0 => tt_loc_V_d0,
        q0 => tt_loc_V_q0);

    c_V_U : component runge_kutta_45_c_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 85,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c_V_address0,
        ce0 => c_V_ce0,
        we0 => c_V_we0,
        d0 => c_V_d0,
        q0 => c_V_q0,
        address1 => c_V_address1,
        ce1 => c_V_ce1,
        we1 => c_V_we1,
        d1 => c_V_d1);

    e_V_U : component runge_kutta_45_e_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 177,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => e_V_address0,
        ce0 => e_V_ce0,
        we0 => e_V_we0,
        d0 => ap_const_lv177_lc_1,
        q0 => e_V_q0,
        address1 => e_V_address1,
        ce1 => e_V_ce1,
        we1 => e_V_we1,
        d1 => e_V_d1);

    grp_macply_fu_959 : component runge_kutta_45_macply
    port map (
        ap_ready => grp_macply_fu_959_ap_ready,
        result_V_read => grp_macply_fu_959_result_V_read,
        x_V_read => grp_macply_fu_959_x_V_read,
        y_V_read => grp_macply_fu_959_y_V_read,
        ap_return => grp_macply_fu_959_ap_return);

    grp_multiply_fu_1093 : component runge_kutta_45_multiply
    port map (
        ap_ready => grp_multiply_fu_1093_ap_ready,
        x_V_read => sext_ln160_reg_3180,
        y_V_read => grp_multiply_fu_1093_y_V_read,
        ap_return => grp_multiply_fu_1093_ap_return);

    grp_ap_fixed_base_fu_1123 : component runge_kutta_45_ap_fixed_base
    port map (
        ap_ready => grp_ap_fixed_base_fu_1123_ap_ready,
        d => grp_ap_fixed_base_fu_1123_d,
        ap_return => grp_ap_fixed_base_fu_1123_ap_return);

    atol_loc_V_ap_fixed_base_fu_1128 : component runge_kutta_45_ap_fixed_base
    port map (
        ap_ready => atol_loc_V_ap_fixed_base_fu_1128_ap_ready,
        d => atol_loc_V_ap_fixed_base_fu_1128_d,
        ap_return => atol_loc_V_ap_fixed_base_fu_1128_ap_return);

    tf_loc_V_ap_fixed_base_fu_1133 : component runge_kutta_45_ap_fixed_base
    port map (
        ap_ready => tf_loc_V_ap_fixed_base_fu_1133_ap_ready,
        d => tf_read_reg_2937,
        ap_return => tf_loc_V_ap_fixed_base_fu_1133_ap_return);

    grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139 : component runge_kutta_45_runge_kutta_45_Pipeline_VITIS_LOOP_119_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_ready,
        m_axi_X_BUS_AWVALID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWVALID,
        m_axi_X_BUS_AWREADY => ap_const_logic_0,
        m_axi_X_BUS_AWADDR => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWADDR,
        m_axi_X_BUS_AWID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWID,
        m_axi_X_BUS_AWLEN => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWLEN,
        m_axi_X_BUS_AWSIZE => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWSIZE,
        m_axi_X_BUS_AWBURST => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWBURST,
        m_axi_X_BUS_AWLOCK => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWLOCK,
        m_axi_X_BUS_AWCACHE => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWCACHE,
        m_axi_X_BUS_AWPROT => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWPROT,
        m_axi_X_BUS_AWQOS => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWQOS,
        m_axi_X_BUS_AWREGION => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWREGION,
        m_axi_X_BUS_AWUSER => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_AWUSER,
        m_axi_X_BUS_WVALID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WVALID,
        m_axi_X_BUS_WREADY => ap_const_logic_0,
        m_axi_X_BUS_WDATA => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WDATA,
        m_axi_X_BUS_WSTRB => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WSTRB,
        m_axi_X_BUS_WLAST => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WLAST,
        m_axi_X_BUS_WID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WID,
        m_axi_X_BUS_WUSER => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_WUSER,
        m_axi_X_BUS_ARVALID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARVALID,
        m_axi_X_BUS_ARREADY => X_BUS_ARREADY,
        m_axi_X_BUS_ARADDR => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARADDR,
        m_axi_X_BUS_ARID => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARID,
        m_axi_X_BUS_ARLEN => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLEN,
        m_axi_X_BUS_ARSIZE => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARSIZE,
        m_axi_X_BUS_ARBURST => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARBURST,
        m_axi_X_BUS_ARLOCK => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLOCK,
        m_axi_X_BUS_ARCACHE => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARCACHE,
        m_axi_X_BUS_ARPROT => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARPROT,
        m_axi_X_BUS_ARQOS => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARQOS,
        m_axi_X_BUS_ARREGION => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARREGION,
        m_axi_X_BUS_ARUSER => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARUSER,
        m_axi_X_BUS_RVALID => X_BUS_RVALID,
        m_axi_X_BUS_RREADY => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_RREADY,
        m_axi_X_BUS_RDATA => X_BUS_RDATA,
        m_axi_X_BUS_RLAST => ap_const_logic_0,
        m_axi_X_BUS_RID => ap_const_lv1_0,
        m_axi_X_BUS_RFIFONUM => X_BUS_RFIFONUM,
        m_axi_X_BUS_RUSER => ap_const_lv1_0,
        m_axi_X_BUS_RRESP => ap_const_lv2_0,
        m_axi_X_BUS_BVALID => ap_const_logic_0,
        m_axi_X_BUS_BREADY => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_BREADY,
        m_axi_X_BUS_BRESP => ap_const_lv2_0,
        m_axi_X_BUS_BID => ap_const_lv1_0,
        m_axi_X_BUS_BUSER => ap_const_lv1_0,
        sext_ln119 => trunc_ln3_reg_2973,
        yy_loc_V_address0 => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_address0,
        yy_loc_V_ce0 => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_ce0,
        yy_loc_V_we0 => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_we0,
        yy_loc_V_d0 => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_d0,
        atol_loc_V_ap_fixed_base_fu_1128_p_din1 => grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_atol_loc_V_ap_fixed_base_fu_1128_p_din1,
        atol_loc_V_ap_fixed_base_fu_1128_p_dout0 => atol_loc_V_ap_fixed_base_fu_1128_ap_return,
        atol_loc_V_ap_fixed_base_fu_1128_p_ready => atol_loc_V_ap_fixed_base_fu_1128_ap_ready);

    grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147 : component runge_kutta_45_runge_kutta_45_Pipeline_axi_write_yy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_ready,
        m_axi_X_BUS_AWVALID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWVALID,
        m_axi_X_BUS_AWREADY => X_BUS_AWREADY,
        m_axi_X_BUS_AWADDR => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWADDR,
        m_axi_X_BUS_AWID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWID,
        m_axi_X_BUS_AWLEN => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLEN,
        m_axi_X_BUS_AWSIZE => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWSIZE,
        m_axi_X_BUS_AWBURST => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWBURST,
        m_axi_X_BUS_AWLOCK => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLOCK,
        m_axi_X_BUS_AWCACHE => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWCACHE,
        m_axi_X_BUS_AWPROT => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWPROT,
        m_axi_X_BUS_AWQOS => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWQOS,
        m_axi_X_BUS_AWREGION => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWREGION,
        m_axi_X_BUS_AWUSER => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWUSER,
        m_axi_X_BUS_WVALID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WVALID,
        m_axi_X_BUS_WREADY => X_BUS_WREADY,
        m_axi_X_BUS_WDATA => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WDATA,
        m_axi_X_BUS_WSTRB => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WSTRB,
        m_axi_X_BUS_WLAST => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WLAST,
        m_axi_X_BUS_WID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WID,
        m_axi_X_BUS_WUSER => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WUSER,
        m_axi_X_BUS_ARVALID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARVALID,
        m_axi_X_BUS_ARREADY => ap_const_logic_0,
        m_axi_X_BUS_ARADDR => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARADDR,
        m_axi_X_BUS_ARID => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARID,
        m_axi_X_BUS_ARLEN => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARLEN,
        m_axi_X_BUS_ARSIZE => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARSIZE,
        m_axi_X_BUS_ARBURST => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARBURST,
        m_axi_X_BUS_ARLOCK => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARLOCK,
        m_axi_X_BUS_ARCACHE => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARCACHE,
        m_axi_X_BUS_ARPROT => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARPROT,
        m_axi_X_BUS_ARQOS => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARQOS,
        m_axi_X_BUS_ARREGION => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARREGION,
        m_axi_X_BUS_ARUSER => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_ARUSER,
        m_axi_X_BUS_RVALID => ap_const_logic_0,
        m_axi_X_BUS_RREADY => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_RREADY,
        m_axi_X_BUS_RDATA => ap_const_lv128_lc_1,
        m_axi_X_BUS_RLAST => ap_const_logic_0,
        m_axi_X_BUS_RID => ap_const_lv1_0,
        m_axi_X_BUS_RFIFONUM => ap_const_lv5_0,
        m_axi_X_BUS_RUSER => ap_const_lv1_0,
        m_axi_X_BUS_RRESP => ap_const_lv2_0,
        m_axi_X_BUS_BVALID => X_BUS_BVALID,
        m_axi_X_BUS_BREADY => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_BREADY,
        m_axi_X_BUS_BRESP => ap_const_lv2_0,
        m_axi_X_BUS_BID => ap_const_lv1_0,
        m_axi_X_BUS_BUSER => ap_const_lv1_0,
        sext_ln137 => trunc_ln8_reg_3129,
        yy_loc_V_address0 => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_address0,
        yy_loc_V_ce0 => grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_ce0,
        yy_loc_V_q0 => yy_loc_V_q0);

    grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155 : component runge_kutta_45_runge_kutta_45_Pipeline_axi_write_tt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_ready,
        m_axi_T_BUS_AWVALID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWVALID,
        m_axi_T_BUS_AWREADY => T_BUS_AWREADY,
        m_axi_T_BUS_AWADDR => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWADDR,
        m_axi_T_BUS_AWID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWID,
        m_axi_T_BUS_AWLEN => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLEN,
        m_axi_T_BUS_AWSIZE => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWSIZE,
        m_axi_T_BUS_AWBURST => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWBURST,
        m_axi_T_BUS_AWLOCK => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLOCK,
        m_axi_T_BUS_AWCACHE => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWCACHE,
        m_axi_T_BUS_AWPROT => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWPROT,
        m_axi_T_BUS_AWQOS => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWQOS,
        m_axi_T_BUS_AWREGION => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWREGION,
        m_axi_T_BUS_AWUSER => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWUSER,
        m_axi_T_BUS_WVALID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WVALID,
        m_axi_T_BUS_WREADY => T_BUS_WREADY,
        m_axi_T_BUS_WDATA => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WDATA,
        m_axi_T_BUS_WSTRB => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WSTRB,
        m_axi_T_BUS_WLAST => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WLAST,
        m_axi_T_BUS_WID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WID,
        m_axi_T_BUS_WUSER => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WUSER,
        m_axi_T_BUS_ARVALID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARVALID,
        m_axi_T_BUS_ARREADY => ap_const_logic_0,
        m_axi_T_BUS_ARADDR => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARADDR,
        m_axi_T_BUS_ARID => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARID,
        m_axi_T_BUS_ARLEN => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARLEN,
        m_axi_T_BUS_ARSIZE => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARSIZE,
        m_axi_T_BUS_ARBURST => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARBURST,
        m_axi_T_BUS_ARLOCK => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARLOCK,
        m_axi_T_BUS_ARCACHE => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARCACHE,
        m_axi_T_BUS_ARPROT => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARPROT,
        m_axi_T_BUS_ARQOS => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARQOS,
        m_axi_T_BUS_ARREGION => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARREGION,
        m_axi_T_BUS_ARUSER => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_ARUSER,
        m_axi_T_BUS_RVALID => ap_const_logic_0,
        m_axi_T_BUS_RREADY => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_RREADY,
        m_axi_T_BUS_RDATA => ap_const_lv128_lc_1,
        m_axi_T_BUS_RLAST => ap_const_logic_0,
        m_axi_T_BUS_RID => ap_const_lv1_0,
        m_axi_T_BUS_RFIFONUM => ap_const_lv5_0,
        m_axi_T_BUS_RUSER => ap_const_lv1_0,
        m_axi_T_BUS_RRESP => ap_const_lv2_0,
        m_axi_T_BUS_BVALID => T_BUS_BVALID,
        m_axi_T_BUS_BREADY => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_BREADY,
        m_axi_T_BUS_BRESP => ap_const_lv2_0,
        m_axi_T_BUS_BID => ap_const_lv1_0,
        m_axi_T_BUS_BUSER => ap_const_lv1_0,
        sext_ln140 => trunc_ln_reg_3135,
        tt_loc_V_address0 => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_address0,
        tt_loc_V_ce0 => grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_ce0,
        tt_loc_V_q0 => tt_loc_V_q0);

    grp_ode_fpga_fu_1163 : component runge_kutta_45_ode_fpga
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_ode_fpga_fu_1163_ap_start,
        ap_done => grp_ode_fpga_fu_1163_ap_done,
        ap_idle => grp_ode_fpga_fu_1163_ap_idle,
        ap_ready => grp_ode_fpga_fu_1163_ap_ready,
        out_r_address0 => grp_ode_fpga_fu_1163_out_r_address0,
        out_r_ce0 => grp_ode_fpga_fu_1163_out_r_ce0,
        out_r_we0 => grp_ode_fpga_fu_1163_out_r_we0,
        out_r_d0 => grp_ode_fpga_fu_1163_out_r_d0,
        out_offset => grp_ode_fpga_fu_1163_out_offset,
        in_r_address0 => grp_ode_fpga_fu_1163_in_r_address0,
        in_r_ce0 => grp_ode_fpga_fu_1163_in_r_ce0,
        in_r_q0 => yy_loc_V_q0,
        in_offset => trunc_ln1696_reg_3115,
        c_address0 => grp_ode_fpga_fu_1163_c_address0,
        c_ce0 => grp_ode_fpga_fu_1163_c_ce0,
        c_q0 => c_V_q0,
        mu_V_read => mu_loc_V_reg_2995);

    grp_runge_kutta_45_Pipeline_k_inner_fu_1176 : component runge_kutta_45_runge_kutta_45_Pipeline_k_inner
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_ready,
        i_814 => i_814_reg_822,
        add_ln170 => add_ln170_reg_3185,
        n_113 => n_113_reg_834,
        k_V_address0 => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_address0,
        k_V_ce0 => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_ce0,
        k_V_q0 => k_V_q0,
        sum_V_1_0_out => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out,
        sum_V_1_0_out_ap_vld => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out_ap_vld,
        grp_macply_fu_959_p_din1 => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din1,
        grp_macply_fu_959_p_din2 => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din2,
        grp_macply_fu_959_p_din3 => grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din3,
        grp_macply_fu_959_p_dout0 => grp_macply_fu_959_ap_return,
        grp_macply_fu_959_p_ready => grp_macply_fu_959_ap_ready);

    grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189 : component runge_kutta_45_runge_kutta_45_Pipeline_sq_sum_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_ready,
        e_V_address0 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_address0,
        e_V_ce0 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_ce0,
        e_V_q0 => e_V_q0,
        p_Val2_21_out => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_p_Val2_21_out,
        p_Val2_21_out_ap_vld => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_p_Val2_21_out_ap_vld,
        grp_macply_fu_959_p_din1 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din1,
        grp_macply_fu_959_p_din2 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din2,
        grp_macply_fu_959_p_din3 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din3,
        grp_macply_fu_959_p_dout0 => grp_macply_fu_959_ap_return,
        grp_macply_fu_959_p_ready => grp_macply_fu_959_ap_ready);

    grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195 : component runge_kutta_45_runge_kutta_45_Pipeline_sqrt_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_ready,
        zext_ln449 => grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_p_Val2_21_out,
        Q_V_5_out => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_Q_V_5_out,
        Q_V_5_out_ap_vld => grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_Q_V_5_out_ap_vld);

    grp_runge_kutta_45_Pipeline_update_1_fu_1201 : component runge_kutta_45_runge_kutta_45_Pipeline_update_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_ready,
        sub_ln85931 => sub_ln85931_reg_728,
        yy_loc_V_address0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address0,
        yy_loc_V_ce0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce0,
        yy_loc_V_we0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_we0,
        yy_loc_V_d0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_d0,
        yy_loc_V_address1 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address1,
        yy_loc_V_ce1 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce1,
        yy_loc_V_q1 => yy_loc_V_q1,
        sub_ln220 => sub_ln220_reg_3323,
        c_V_address0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_address0,
        c_V_ce0 => grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_ce0,
        c_V_q0 => c_V_q0);

    grp_runge_kutta_45_Pipeline_update_2_fu_1210 : component runge_kutta_45_runge_kutta_45_Pipeline_update_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_ready,
        sub_ln85931 => sub_ln85931_reg_728,
        yy_loc_V_address0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address0,
        yy_loc_V_ce0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce0,
        yy_loc_V_we0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_we0,
        yy_loc_V_d0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_d0,
        yy_loc_V_address1 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address1,
        yy_loc_V_ce1 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce1,
        yy_loc_V_q1 => yy_loc_V_q1,
        sub_ln231 => sub_ln231_reg_3332,
        c_V_address0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_address0,
        c_V_ce0 => grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_ce0,
        c_V_q0 => c_V_q0);

    grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219 : component runge_kutta_45_runge_kutta_45_Pipeline_last_axi_write_yy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_ready,
        m_axi_X_BUS_AWVALID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWVALID,
        m_axi_X_BUS_AWREADY => X_BUS_AWREADY,
        m_axi_X_BUS_AWADDR => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWADDR,
        m_axi_X_BUS_AWID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWID,
        m_axi_X_BUS_AWLEN => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLEN,
        m_axi_X_BUS_AWSIZE => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWSIZE,
        m_axi_X_BUS_AWBURST => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWBURST,
        m_axi_X_BUS_AWLOCK => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLOCK,
        m_axi_X_BUS_AWCACHE => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWCACHE,
        m_axi_X_BUS_AWPROT => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWPROT,
        m_axi_X_BUS_AWQOS => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWQOS,
        m_axi_X_BUS_AWREGION => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWREGION,
        m_axi_X_BUS_AWUSER => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWUSER,
        m_axi_X_BUS_WVALID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WVALID,
        m_axi_X_BUS_WREADY => X_BUS_WREADY,
        m_axi_X_BUS_WDATA => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WDATA,
        m_axi_X_BUS_WSTRB => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WSTRB,
        m_axi_X_BUS_WLAST => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WLAST,
        m_axi_X_BUS_WID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WID,
        m_axi_X_BUS_WUSER => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WUSER,
        m_axi_X_BUS_ARVALID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARVALID,
        m_axi_X_BUS_ARREADY => ap_const_logic_0,
        m_axi_X_BUS_ARADDR => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARADDR,
        m_axi_X_BUS_ARID => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARID,
        m_axi_X_BUS_ARLEN => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARLEN,
        m_axi_X_BUS_ARSIZE => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARSIZE,
        m_axi_X_BUS_ARBURST => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARBURST,
        m_axi_X_BUS_ARLOCK => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARLOCK,
        m_axi_X_BUS_ARCACHE => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARCACHE,
        m_axi_X_BUS_ARPROT => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARPROT,
        m_axi_X_BUS_ARQOS => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARQOS,
        m_axi_X_BUS_ARREGION => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARREGION,
        m_axi_X_BUS_ARUSER => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_ARUSER,
        m_axi_X_BUS_RVALID => ap_const_logic_0,
        m_axi_X_BUS_RREADY => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_RREADY,
        m_axi_X_BUS_RDATA => ap_const_lv128_lc_1,
        m_axi_X_BUS_RLAST => ap_const_logic_0,
        m_axi_X_BUS_RID => ap_const_lv1_0,
        m_axi_X_BUS_RFIFONUM => ap_const_lv5_0,
        m_axi_X_BUS_RUSER => ap_const_lv1_0,
        m_axi_X_BUS_RRESP => ap_const_lv2_0,
        m_axi_X_BUS_BVALID => X_BUS_BVALID,
        m_axi_X_BUS_BREADY => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_BREADY,
        m_axi_X_BUS_BRESP => ap_const_lv2_0,
        m_axi_X_BUS_BID => ap_const_lv1_0,
        m_axi_X_BUS_BUSER => ap_const_lv1_0,
        sext_ln254 => trunc_ln9_reg_3375,
        mul389 => mul389_reg_3365,
        yy_loc_V_address0 => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_address0,
        yy_loc_V_ce0 => grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_ce0,
        yy_loc_V_q0 => yy_loc_V_q0);

    grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228 : component runge_kutta_45_runge_kutta_45_Pipeline_last_axi_write_tt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start,
        ap_done => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done,
        ap_idle => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_idle,
        ap_ready => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_ready,
        m_axi_T_BUS_AWVALID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWVALID,
        m_axi_T_BUS_AWREADY => T_BUS_AWREADY,
        m_axi_T_BUS_AWADDR => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWADDR,
        m_axi_T_BUS_AWID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWID,
        m_axi_T_BUS_AWLEN => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLEN,
        m_axi_T_BUS_AWSIZE => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWSIZE,
        m_axi_T_BUS_AWBURST => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWBURST,
        m_axi_T_BUS_AWLOCK => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLOCK,
        m_axi_T_BUS_AWCACHE => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWCACHE,
        m_axi_T_BUS_AWPROT => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWPROT,
        m_axi_T_BUS_AWQOS => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWQOS,
        m_axi_T_BUS_AWREGION => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWREGION,
        m_axi_T_BUS_AWUSER => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWUSER,
        m_axi_T_BUS_WVALID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WVALID,
        m_axi_T_BUS_WREADY => T_BUS_WREADY,
        m_axi_T_BUS_WDATA => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WDATA,
        m_axi_T_BUS_WSTRB => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WSTRB,
        m_axi_T_BUS_WLAST => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WLAST,
        m_axi_T_BUS_WID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WID,
        m_axi_T_BUS_WUSER => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WUSER,
        m_axi_T_BUS_ARVALID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARVALID,
        m_axi_T_BUS_ARREADY => ap_const_logic_0,
        m_axi_T_BUS_ARADDR => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARADDR,
        m_axi_T_BUS_ARID => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARID,
        m_axi_T_BUS_ARLEN => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARLEN,
        m_axi_T_BUS_ARSIZE => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARSIZE,
        m_axi_T_BUS_ARBURST => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARBURST,
        m_axi_T_BUS_ARLOCK => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARLOCK,
        m_axi_T_BUS_ARCACHE => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARCACHE,
        m_axi_T_BUS_ARPROT => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARPROT,
        m_axi_T_BUS_ARQOS => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARQOS,
        m_axi_T_BUS_ARREGION => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARREGION,
        m_axi_T_BUS_ARUSER => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_ARUSER,
        m_axi_T_BUS_RVALID => ap_const_logic_0,
        m_axi_T_BUS_RREADY => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_RREADY,
        m_axi_T_BUS_RDATA => ap_const_lv128_lc_1,
        m_axi_T_BUS_RLAST => ap_const_logic_0,
        m_axi_T_BUS_RID => ap_const_lv1_0,
        m_axi_T_BUS_RFIFONUM => ap_const_lv5_0,
        m_axi_T_BUS_RUSER => ap_const_lv1_0,
        m_axi_T_BUS_RRESP => ap_const_lv2_0,
        m_axi_T_BUS_BVALID => T_BUS_BVALID,
        m_axi_T_BUS_BREADY => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_BREADY,
        m_axi_T_BUS_BRESP => ap_const_lv2_0,
        m_axi_T_BUS_BID => ap_const_lv1_0,
        m_axi_T_BUS_BUSER => ap_const_lv1_0,
        add405 => add405_reg_3386,
        tt_loc_V_address0 => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_address0,
        tt_loc_V_ce0 => grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_ce0,
        tt_loc_V_q0 => tt_loc_V_q0,
        tt => tt_read_reg_2942,
        zext_ln257 => shl_ln6_reg_3391,
        trunc_ln14 => trunc_ln257_reg_3396);

    control_s_axi_U : component runge_kutta_45_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        yy => yy,
        tt => tt,
        tf => tf,
        h0 => h0,
        atol => atol,
        h_max => h_max,
        h_min => h_min,
        mu => mu,
        size => size,
        size_ap_vld => size_ap_vld,
        flag => flag,
        flag_ap_vld => flag_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    T_BUS_m_axi_U : component runge_kutta_45_T_BUS_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 8,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_T_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_T_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_T_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_T_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_T_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_T_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_T_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_T_BUS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_T_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_T_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_T_BUS_CACHE_VALUE,
        USER_DW => 128,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_T_BUS_AWVALID,
        AWREADY => m_axi_T_BUS_AWREADY,
        AWADDR => m_axi_T_BUS_AWADDR,
        AWID => m_axi_T_BUS_AWID,
        AWLEN => m_axi_T_BUS_AWLEN,
        AWSIZE => m_axi_T_BUS_AWSIZE,
        AWBURST => m_axi_T_BUS_AWBURST,
        AWLOCK => m_axi_T_BUS_AWLOCK,
        AWCACHE => m_axi_T_BUS_AWCACHE,
        AWPROT => m_axi_T_BUS_AWPROT,
        AWQOS => m_axi_T_BUS_AWQOS,
        AWREGION => m_axi_T_BUS_AWREGION,
        AWUSER => m_axi_T_BUS_AWUSER,
        WVALID => m_axi_T_BUS_WVALID,
        WREADY => m_axi_T_BUS_WREADY,
        WDATA => m_axi_T_BUS_WDATA,
        WSTRB => m_axi_T_BUS_WSTRB,
        WLAST => m_axi_T_BUS_WLAST,
        WID => m_axi_T_BUS_WID,
        WUSER => m_axi_T_BUS_WUSER,
        ARVALID => m_axi_T_BUS_ARVALID,
        ARREADY => m_axi_T_BUS_ARREADY,
        ARADDR => m_axi_T_BUS_ARADDR,
        ARID => m_axi_T_BUS_ARID,
        ARLEN => m_axi_T_BUS_ARLEN,
        ARSIZE => m_axi_T_BUS_ARSIZE,
        ARBURST => m_axi_T_BUS_ARBURST,
        ARLOCK => m_axi_T_BUS_ARLOCK,
        ARCACHE => m_axi_T_BUS_ARCACHE,
        ARPROT => m_axi_T_BUS_ARPROT,
        ARQOS => m_axi_T_BUS_ARQOS,
        ARREGION => m_axi_T_BUS_ARREGION,
        ARUSER => m_axi_T_BUS_ARUSER,
        RVALID => m_axi_T_BUS_RVALID,
        RREADY => m_axi_T_BUS_RREADY,
        RDATA => m_axi_T_BUS_RDATA,
        RLAST => m_axi_T_BUS_RLAST,
        RID => m_axi_T_BUS_RID,
        RUSER => m_axi_T_BUS_RUSER,
        RRESP => m_axi_T_BUS_RRESP,
        BVALID => m_axi_T_BUS_BVALID,
        BREADY => m_axi_T_BUS_BREADY,
        BRESP => m_axi_T_BUS_BRESP,
        BID => m_axi_T_BUS_BID,
        BUSER => m_axi_T_BUS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => T_BUS_ARVALID,
        I_ARREADY => T_BUS_ARREADY,
        I_ARADDR => sext_ln122_fu_1305_p1,
        I_ARLEN => ap_const_lv32_1,
        I_RVALID => T_BUS_RVALID,
        I_RREADY => T_BUS_RREADY,
        I_RDATA => T_BUS_RDATA,
        I_RFIFONUM => T_BUS_RFIFONUM,
        I_AWVALID => T_BUS_AWVALID,
        I_AWREADY => T_BUS_AWREADY,
        I_AWADDR => T_BUS_AWADDR,
        I_AWLEN => T_BUS_AWLEN,
        I_WVALID => T_BUS_WVALID,
        I_WREADY => T_BUS_WREADY,
        I_WDATA => T_BUS_WDATA,
        I_WSTRB => T_BUS_WSTRB,
        I_BVALID => T_BUS_BVALID,
        I_BREADY => T_BUS_BREADY);

    X_BUS_m_axi_U : component runge_kutta_45_X_BUS_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 8,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 5,
        C_M_AXI_ID_WIDTH => C_M_AXI_X_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_X_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_X_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_X_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_X_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_X_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_X_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_X_BUS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_X_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_X_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_X_BUS_CACHE_VALUE,
        USER_DW => 128,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_X_BUS_AWVALID,
        AWREADY => m_axi_X_BUS_AWREADY,
        AWADDR => m_axi_X_BUS_AWADDR,
        AWID => m_axi_X_BUS_AWID,
        AWLEN => m_axi_X_BUS_AWLEN,
        AWSIZE => m_axi_X_BUS_AWSIZE,
        AWBURST => m_axi_X_BUS_AWBURST,
        AWLOCK => m_axi_X_BUS_AWLOCK,
        AWCACHE => m_axi_X_BUS_AWCACHE,
        AWPROT => m_axi_X_BUS_AWPROT,
        AWQOS => m_axi_X_BUS_AWQOS,
        AWREGION => m_axi_X_BUS_AWREGION,
        AWUSER => m_axi_X_BUS_AWUSER,
        WVALID => m_axi_X_BUS_WVALID,
        WREADY => m_axi_X_BUS_WREADY,
        WDATA => m_axi_X_BUS_WDATA,
        WSTRB => m_axi_X_BUS_WSTRB,
        WLAST => m_axi_X_BUS_WLAST,
        WID => m_axi_X_BUS_WID,
        WUSER => m_axi_X_BUS_WUSER,
        ARVALID => m_axi_X_BUS_ARVALID,
        ARREADY => m_axi_X_BUS_ARREADY,
        ARADDR => m_axi_X_BUS_ARADDR,
        ARID => m_axi_X_BUS_ARID,
        ARLEN => m_axi_X_BUS_ARLEN,
        ARSIZE => m_axi_X_BUS_ARSIZE,
        ARBURST => m_axi_X_BUS_ARBURST,
        ARLOCK => m_axi_X_BUS_ARLOCK,
        ARCACHE => m_axi_X_BUS_ARCACHE,
        ARPROT => m_axi_X_BUS_ARPROT,
        ARQOS => m_axi_X_BUS_ARQOS,
        ARREGION => m_axi_X_BUS_ARREGION,
        ARUSER => m_axi_X_BUS_ARUSER,
        RVALID => m_axi_X_BUS_RVALID,
        RREADY => m_axi_X_BUS_RREADY,
        RDATA => m_axi_X_BUS_RDATA,
        RLAST => m_axi_X_BUS_RLAST,
        RID => m_axi_X_BUS_RID,
        RUSER => m_axi_X_BUS_RUSER,
        RRESP => m_axi_X_BUS_RRESP,
        BVALID => m_axi_X_BUS_BVALID,
        BREADY => m_axi_X_BUS_BREADY,
        BRESP => m_axi_X_BUS_BRESP,
        BID => m_axi_X_BUS_BID,
        BUSER => m_axi_X_BUS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => X_BUS_ARVALID,
        I_ARREADY => X_BUS_ARREADY,
        I_ARADDR => X_BUS_ARADDR,
        I_ARLEN => X_BUS_ARLEN,
        I_RVALID => X_BUS_RVALID,
        I_RREADY => X_BUS_RREADY,
        I_RDATA => X_BUS_RDATA,
        I_RFIFONUM => X_BUS_RFIFONUM,
        I_AWVALID => X_BUS_AWVALID,
        I_AWREADY => X_BUS_AWREADY,
        I_AWADDR => X_BUS_AWADDR,
        I_AWLEN => X_BUS_AWLEN,
        I_WVALID => X_BUS_WVALID,
        I_WREADY => X_BUS_WREADY,
        I_WDATA => X_BUS_WDATA,
        I_WSTRB => X_BUS_WSTRB,
        I_BVALID => X_BUS_BVALID,
        I_BREADY => X_BUS_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (icmp_ln160_reg_3203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (icmp_ln160_reg_3203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ode_fpga_fu_1163_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_ode_fpga_fu_1163_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    grp_ode_fpga_fu_1163_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ode_fpga_fu_1163_ap_ready = ap_const_logic_1)) then 
                    grp_ode_fpga_fu_1163_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = T_BUS_RVALID))) then 
                    grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                    grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                    grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                    grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                    grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                    grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                    grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_ready = ap_const_logic_1)) then 
                    grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cycles26_reg_933_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                cycles26_reg_933 <= trunc_ln125_reg_3163;
            elsif (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                cycles26_reg_933 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;

    cycles27_reg_763_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                cycles27_reg_763 <= ap_const_lv32_0;
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                cycles27_reg_763 <= cycles_reg_797;
            end if; 
        end if;
    end process;

    cycles_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln132_fu_2187_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                cycles_reg_797 <= cycles27_reg_763;
            elsif ((not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                cycles_reg_797 <= cycles_1_fu_2309_p2;
            end if; 
        end if;
    end process;

    flag_loc_V24_reg_775_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                flag_loc_V24_reg_775 <= ap_const_lv1_1;
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                flag_loc_V24_reg_775 <= flag_loc_V_reg_903;
            end if; 
        end if;
    end process;

    flag_loc_V25_reg_945_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                flag_loc_V25_reg_945 <= flag_loc_V_reg_903;
            elsif (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                flag_loc_V25_reg_945 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    flag_loc_V_reg_903_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_1) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
                flag_loc_V_reg_903 <= flag_loc_V24_reg_775;
            elsif (((icmp_ln1698_1_reg_3328 = ap_const_lv1_0) and (icmp_ln1698_reg_3319 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                flag_loc_V_reg_903 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_814_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1)) then
                if (((icmp_ln160_reg_3203 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    i_814_reg_822 <= i_reg_3198;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    i_814_reg_822 <= ap_const_lv3_1;
                end if;
            end if; 
        end if;
    end process;

    lhs_V32_reg_718_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                lhs_V32_reg_718 <= grp_ap_fixed_base_fu_1123_ap_return;
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                lhs_V32_reg_718 <= tt_loc_V_q0;
            end if; 
        end if;
    end process;

    n12_reg_846_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (icmp_ln160_reg_3203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                n12_reg_846 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln180_reg_3247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                n12_reg_846 <= n_3_reg_3256;
            end if; 
        end if;
    end process;

    n_113_reg_834_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln162_fu_2403_p2 = ap_const_lv1_0))) then 
                n_113_reg_834 <= n_reg_3190;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                n_113_reg_834 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    n_211_reg_858_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln195_reg_3302 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                n_211_reg_858 <= n_4_reg_3311;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                n_211_reg_858 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    reg_1257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_1257 <= k_V_q1;
            elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                reg_1257 <= k_V_q0;
            end if; 
        end if;
    end process;

    reg_1263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)))) then 
                reg_1263 <= k_V_q1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_1263 <= k_V_q0;
            end if; 
        end if;
    end process;

    reg_1269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then 
                reg_1269 <= k_V_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_1269 <= k_V_q0;
            end if; 
        end if;
    end process;

    reg_787_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                reg_787 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_loc_5_fu_2148_p3),177));
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                reg_787 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_loc_8_fu_2755_p3),177));
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                reg_787 <= grp_macply_fu_959_ap_return;
            end if; 
        end if;
    end process;

    scale_V_1_reg_886_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_1) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                scale_V_1_reg_886(3) <= '1';
                scale_V_1_reg_886(4) <= '1';
                scale_V_1_reg_886(5) <= '1';
                scale_V_1_reg_886(7) <= '1';
                scale_V_1_reg_886(9) <= '1';
                scale_V_1_reg_886(10) <= '1';
                scale_V_1_reg_886(11) <= '1';
                scale_V_1_reg_886(12) <= '1';
                scale_V_1_reg_886(13) <= '0';
                scale_V_1_reg_886(15) <= '0';
                scale_V_1_reg_886(16) <= '1';
                scale_V_1_reg_886(17) <= '0';
                scale_V_1_reg_886(18) <= '1';
                scale_V_1_reg_886(22) <= '0';
                scale_V_1_reg_886(23) <= '1';
                scale_V_1_reg_886(24) <= '1';
                scale_V_1_reg_886(25) <= '1';
                scale_V_1_reg_886(27) <= '1';
                scale_V_1_reg_886(29) <= '1';
                scale_V_1_reg_886(30) <= '1';
                scale_V_1_reg_886(31) <= '1';
                scale_V_1_reg_886(32) <= '1';
                scale_V_1_reg_886(33) <= '0';
                scale_V_1_reg_886(35) <= '0';
                scale_V_1_reg_886(36) <= '1';
                scale_V_1_reg_886(37) <= '0';
                scale_V_1_reg_886(38) <= '1';
                scale_V_1_reg_886(42) <= '0';
                scale_V_1_reg_886(43) <= '1';
                scale_V_1_reg_886(44) <= '1';
                scale_V_1_reg_886(45) <= '1';
                scale_V_1_reg_886(47) <= '1';
                scale_V_1_reg_886(49) <= '1';
                scale_V_1_reg_886(50) <= '1';
                scale_V_1_reg_886(51) <= '1';
                scale_V_1_reg_886(52) <= '1';
                scale_V_1_reg_886(53) <= '1';
                scale_V_1_reg_886(54) <= '1';
                scale_V_1_reg_886(55) <= '0';
            elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                scale_V_1_reg_886(3) <= '1';
                scale_V_1_reg_886(4) <= '1';
                scale_V_1_reg_886(5) <= '0';
                scale_V_1_reg_886(7) <= '0';
                scale_V_1_reg_886(9) <= '1';
                scale_V_1_reg_886(10) <= '1';
                scale_V_1_reg_886(11) <= '1';
                scale_V_1_reg_886(12) <= '0';
                scale_V_1_reg_886(13) <= '1';
                scale_V_1_reg_886(15) <= '1';
                scale_V_1_reg_886(16) <= '1';
                scale_V_1_reg_886(17) <= '1';
                scale_V_1_reg_886(18) <= '1';
                scale_V_1_reg_886(22) <= '1';
                scale_V_1_reg_886(23) <= '0';
                scale_V_1_reg_886(24) <= '1';
                scale_V_1_reg_886(25) <= '0';
                scale_V_1_reg_886(27) <= '0';
                scale_V_1_reg_886(29) <= '1';
                scale_V_1_reg_886(30) <= '1';
                scale_V_1_reg_886(31) <= '1';
                scale_V_1_reg_886(32) <= '0';
                scale_V_1_reg_886(33) <= '1';
                scale_V_1_reg_886(35) <= '1';
                scale_V_1_reg_886(36) <= '1';
                scale_V_1_reg_886(37) <= '1';
                scale_V_1_reg_886(38) <= '1';
                scale_V_1_reg_886(42) <= '1';
                scale_V_1_reg_886(43) <= '0';
                scale_V_1_reg_886(44) <= '1';
                scale_V_1_reg_886(45) <= '0';
                scale_V_1_reg_886(47) <= '0';
                scale_V_1_reg_886(49) <= '1';
                scale_V_1_reg_886(50) <= '1';
                scale_V_1_reg_886(51) <= '1';
                scale_V_1_reg_886(52) <= '0';
                scale_V_1_reg_886(53) <= '0';
                scale_V_1_reg_886(54) <= '0';
                scale_V_1_reg_886(55) <= '1';
            elsif (((icmp_ln1698_1_reg_3328 = ap_const_lv1_0) and (icmp_ln1698_reg_3319 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                scale_V_1_reg_886(3) <= '0';
                scale_V_1_reg_886(4) <= '0';
                scale_V_1_reg_886(5) <= '0';
                scale_V_1_reg_886(7) <= '0';
                scale_V_1_reg_886(9) <= '0';
                scale_V_1_reg_886(10) <= '0';
                scale_V_1_reg_886(11) <= '0';
                scale_V_1_reg_886(12) <= '0';
                scale_V_1_reg_886(13) <= '0';
                scale_V_1_reg_886(15) <= '0';
                scale_V_1_reg_886(16) <= '0';
                scale_V_1_reg_886(17) <= '0';
                scale_V_1_reg_886(18) <= '0';
                scale_V_1_reg_886(22) <= '0';
                scale_V_1_reg_886(23) <= '0';
                scale_V_1_reg_886(24) <= '0';
                scale_V_1_reg_886(25) <= '0';
                scale_V_1_reg_886(27) <= '0';
                scale_V_1_reg_886(29) <= '0';
                scale_V_1_reg_886(30) <= '0';
                scale_V_1_reg_886(31) <= '0';
                scale_V_1_reg_886(32) <= '0';
                scale_V_1_reg_886(33) <= '0';
                scale_V_1_reg_886(35) <= '0';
                scale_V_1_reg_886(36) <= '0';
                scale_V_1_reg_886(37) <= '0';
                scale_V_1_reg_886(38) <= '0';
                scale_V_1_reg_886(42) <= '0';
                scale_V_1_reg_886(43) <= '0';
                scale_V_1_reg_886(44) <= '0';
                scale_V_1_reg_886(45) <= '0';
                scale_V_1_reg_886(47) <= '0';
                scale_V_1_reg_886(49) <= '0';
                scale_V_1_reg_886(50) <= '0';
                scale_V_1_reg_886(51) <= '0';
                scale_V_1_reg_886(52) <= '0';
                scale_V_1_reg_886(53) <= '0';
                scale_V_1_reg_886(54) <= '0';
                scale_V_1_reg_886(55) <= '1';
            end if; 
        end if;
    end process;

    sub_ln85931_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                sub_ln85931_reg_728(1) <= '0';
                sub_ln85931_reg_728(2) <= '0';
                sub_ln85931_reg_728(3) <= '0';
                sub_ln85931_reg_728(4) <= '0';
                sub_ln85931_reg_728(5) <= '0';
                sub_ln85931_reg_728(6) <= '0';
                sub_ln85931_reg_728(7) <= '0';
                sub_ln85931_reg_728(8) <= '0';
                sub_ln85931_reg_728(9) <= '0';
                sub_ln85931_reg_728(10) <= '0';
                sub_ln85931_reg_728(11) <= '0';
                sub_ln85931_reg_728(12) <= '0';
                sub_ln85931_reg_728(13) <= '0';
                sub_ln85931_reg_728(14) <= '0';
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                                sub_ln85931_reg_728(14 downto 1) <= sub_ln859_reg_3337(14 downto 1);
            end if; 
        end if;
    end process;

    tk_next28_reg_920_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                tk_next28_reg_920 <= tk_next_reg_809;
            elsif (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                tk_next28_reg_920 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tk_next29_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                tk_next29_reg_752 <= ap_const_lv32_0;
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                tk_next29_reg_752 <= tk_next_reg_809;
            end if; 
        end if;
    end process;

    tk_next_reg_809_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln132_fu_2187_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tk_next_reg_809 <= tk_next_1_fu_2205_p3;
            elsif ((not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                tk_next_reg_809 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tk_prev30_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                tk_prev30_reg_740 <= ap_const_lv32_0;
            elsif (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                tk_prev30_reg_740 <= tk_prev_reg_870;
            end if; 
        end if;
    end process;

    tk_prev_reg_870_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_1) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                tk_prev_reg_870 <= tk_prev30_reg_740;
            elsif ((((icmp_ln1698_1_reg_3328 = ap_const_lv1_0) and (icmp_ln1698_reg_3319 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
                tk_prev_reg_870 <= tk_next_reg_809;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                add405_reg_3386 <= add405_fu_2886_p2;
                    shl_ln6_reg_3391(34 downto 15) <= shl_ln6_fu_2893_p3(34 downto 15);
                trunc_ln257_reg_3396 <= trunc_ln257_fu_2902_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln170_reg_3185 <= add_ln170_fu_2382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                and_ln132_reg_3120 <= and_ln132_fu_2187_p2;
                trunc_ln1696_reg_3115 <= trunc_ln1696_fu_2171_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                atol_loc_V_reg_3000 <= atol_loc_V_ap_fixed_base_fu_1128_ap_return;
                mu_loc_V_reg_2995 <= grp_ap_fixed_base_fu_1123_ap_return;
                tf_loc_V_reg_3005 <= tf_loc_V_ap_fixed_base_fu_1133_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                atol_read_reg_2927 <= atol;
                h0_read_reg_2932 <= h0;
                h_max_read_reg_2922 <= h_max;
                h_min_read_reg_2917 <= h_min;
                mu_read_reg_2912 <= mu;
                tf_read_reg_2937 <= tf;
                trunc_ln122_1_reg_2979 <= tt(63 downto 4);
                trunc_ln3_reg_2973 <= yy(63 downto 4);
                tt_read_reg_2942 <= tt;
                yy_read_reg_2949 <= yy;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                conv_i602_reg_3106 <= conv_i602_fu_2163_p1;
                h_max_loc_7_reg_3018 <= h_max_loc_7_fu_1584_p3;
                h_min_loc_7_reg_3024 <= h_min_loc_7_fu_1857_p3;
                icmp_ln1696_2_reg_3111 <= icmp_ln1696_2_fu_2166_p2;
                lhs_V_1_reg_3041 <= lhs_V_1_fu_2160_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                e_V_addr_reg_3271 <= zext_ln195_fu_2521_p1(3 - 1 downto 0);
                e_V_addr_reg_3271_pp1_iter1_reg <= e_V_addr_reg_3271;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                h_loc_7_reg_3156 <= h_loc_7_fu_2339_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                i_reg_3198 <= i_fu_2409_p2;
                icmp_ln160_reg_3203 <= icmp_ln160_fu_2415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                icmp_ln1698_1_reg_3328 <= icmp_ln1698_1_fu_2660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                icmp_ln1698_reg_3319 <= icmp_ln1698_fu_2629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                icmp_ln180_reg_3247 <= icmp_ln180_fu_2499_p2;
                    zext_ln187_reg_3232(2 downto 0) <= zext_ln187_fu_2467_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                icmp_ln195_reg_3302 <= icmp_ln195_fu_2600_p2;
                    zext_ln201_reg_3287(2 downto 0) <= zext_ln201_fu_2568_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and ((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) or (icmp_ln1696_2_reg_3111 = ap_const_lv1_0)))) then
                icmp_ln254_reg_3371 <= icmp_ln254_fu_2829_p2;
                    mul389_reg_3365(31 downto 1) <= mul389_fu_2823_p2(31 downto 1);
                    t_gap_reg_3360(31 downto 12) <= t_gap_fu_2767_p3(31 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                n_3_reg_3256 <= n_3_fu_2515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                n_4_reg_3311 <= n_4_fu_2616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                n_reg_3190 <= n_fu_2388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then
                reg_1028 <= grp_macply_fu_959_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    sext_ln160_reg_3180(176 downto 55) <= sext_ln160_fu_2366_p1(176 downto 55);
                trunc_ln125_1_reg_3168 <= trunc_ln125_1_fu_2351_p1;
                trunc_ln125_2_reg_3174 <= trunc_ln125_2_fu_2355_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    sub_ln220_reg_3323(14 downto 1) <= sub_ln220_fu_2653_p2(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    sub_ln231_reg_3332(14 downto 1) <= sub_ln231_fu_2683_p2(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                    sub_ln859_reg_3337(14 downto 1) <= sub_ln859_fu_2719_p2(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                trunc_ln122_reg_3013 <= trunc_ln122_fu_1315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                trunc_ln125_reg_3163 <= trunc_ln125_fu_2347_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln132_fu_2187_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                trunc_ln8_reg_3129 <= add_ln137_fu_2247_p2(63 downto 4);
                trunc_ln_reg_3135 <= add_ln140_fu_2274_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (((icmp_ln254_fu_2829_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_0)) or ((icmp_ln254_fu_2829_p2 = ap_const_lv1_0) and (icmp_ln1696_fu_2762_p2 = ap_const_lv1_0))))) then
                trunc_ln9_reg_3375 <= add_ln254_fu_2847_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln180_reg_3207(2 downto 0) <= zext_ln180_fu_2421_p1(2 downto 0);
            end if;
        end if;
    end process;
    sext_ln160_reg_3180(54 downto 0) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln180_reg_3207(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln187_reg_3232(5 downto 3) <= "000";
    zext_ln201_reg_3287(5 downto 3) <= "000";
    sub_ln220_reg_3323(0) <= '0';
    sub_ln231_reg_3332(0) <= '0';
    sub_ln859_reg_3337(0) <= '0';
    t_gap_reg_3360(11 downto 0) <= "000000000000";
    mul389_reg_3365(0) <= '0';
    shl_ln6_reg_3391(14 downto 0) <= "000000000000000";
    sub_ln85931_reg_728(0) <= '0';
    scale_V_1_reg_886(2 downto 0) <= "000";
    scale_V_1_reg_886(6 downto 6) <= "0";
    scale_V_1_reg_886(8 downto 8) <= "0";
    scale_V_1_reg_886(14 downto 14) <= "0";
    scale_V_1_reg_886(21 downto 19) <= "000";
    scale_V_1_reg_886(26 downto 26) <= "0";
    scale_V_1_reg_886(28 downto 28) <= "0";
    scale_V_1_reg_886(34 downto 34) <= "0";
    scale_V_1_reg_886(41 downto 39) <= "000";
    scale_V_1_reg_886(46 downto 46) <= "0";
    scale_V_1_reg_886(48) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state58, ap_CS_fsm_state65, icmp_ln254_reg_3371, ap_CS_fsm_state9, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state11, icmp_ln1696_2_fu_2166_p2, icmp_ln1696_2_reg_3111, ap_CS_fsm_state12, and_ln132_fu_2187_p2, ap_CS_fsm_state24, icmp_ln160_reg_3203, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state56, ap_CS_fsm_state57, icmp_ln1696_fu_2762_p2, icmp_ln254_fu_2829_p2, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_ap_done, ap_block_pp0_stage6_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp1_stage6_subdone, ap_block_pp1_stage1_subdone, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done, grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done, T_BUS_RVALID, T_BUS_BVALID, X_BUS_AWREADY, X_BUS_BVALID, ap_CS_fsm_state28, icmp_ln162_fu_2403_p2, ap_block_state56_on_subcall_done, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state27, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state60, ap_CS_fsm_state66, ap_block_state2_io, ap_block_state13_io, ap_block_state15_on_subcall_done, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp1_stage0_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = T_BUS_RVALID))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln1696_2_fu_2166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_lv1_0 = and_ln132_fu_2187_p2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if ((not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln162_fu_2403_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (icmp_ln160_reg_3203 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (icmp_ln160_reg_3203 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (((icmp_ln254_fu_2829_p2 = ap_const_lv1_1) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_0)) or ((icmp_ln254_fu_2829_p2 = ap_const_lv1_1) and (icmp_ln1696_fu_2762_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state57) and (((icmp_ln254_fu_2829_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_0)) or ((icmp_ln254_fu_2829_p2 = ap_const_lv1_0) and (icmp_ln1696_fu_2762_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_logic_1 = X_BUS_AWREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                if ((not(((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state66) and (grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1657_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_1_fu_1617_p1));
    F2_2_fu_1930_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_2_fu_1890_p1));
    F2_fu_1384_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_1344_p1));

    T_BUS_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            T_BUS_ARVALID <= ap_const_logic_1;
        else 
            T_BUS_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    T_BUS_AWADDR_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWADDR, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWADDR, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66, sext_ln140_fu_2299_p1, ap_block_state13_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            T_BUS_AWADDR <= sext_ln140_fu_2299_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_AWADDR <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_AWADDR <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWADDR;
        else 
            T_BUS_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    T_BUS_AWLEN_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLEN, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLEN, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66, ap_block_state13_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            T_BUS_AWLEN <= ap_const_lv32_800;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_AWLEN <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_AWLEN <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWLEN;
        else 
            T_BUS_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    T_BUS_AWVALID_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWVALID, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66, ap_block_state13_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            T_BUS_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_AWVALID <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_AWVALID <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_AWVALID;
        else 
            T_BUS_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    T_BUS_BREADY_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_BREADY, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_BREADY, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66)
    begin
        if ((not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            T_BUS_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_BREADY <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_BREADY <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_BREADY;
        else 
            T_BUS_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    T_BUS_RREADY_assign_proc : process(ap_CS_fsm_state9, T_BUS_RVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = T_BUS_RVALID))) then 
            T_BUS_RREADY <= ap_const_logic_1;
        else 
            T_BUS_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    T_BUS_WDATA_assign_proc : process(ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WDATA, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WDATA, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_WDATA <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_WDATA <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WDATA;
        else 
            T_BUS_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    T_BUS_WSTRB_assign_proc : process(ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WSTRB, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WSTRB, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_WSTRB <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_WSTRB <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WSTRB;
        else 
            T_BUS_WSTRB <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    T_BUS_WVALID_assign_proc : process(ap_CS_fsm_state65, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WVALID, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            T_BUS_WVALID <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_m_axi_T_BUS_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            T_BUS_WVALID <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_m_axi_T_BUS_WVALID;
        else 
            T_BUS_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    T_BUS_blk_n_AR_assign_proc : process(m_axi_T_BUS_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            T_BUS_blk_n_AR <= m_axi_T_BUS_ARREADY;
        else 
            T_BUS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    T_BUS_blk_n_AW_assign_proc : process(m_axi_T_BUS_AWREADY, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            T_BUS_blk_n_AW <= m_axi_T_BUS_AWREADY;
        else 
            T_BUS_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    T_BUS_blk_n_B_assign_proc : process(m_axi_T_BUS_BVALID, ap_CS_fsm_state20, and_ln132_reg_3120)
    begin
        if (((ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            T_BUS_blk_n_B <= m_axi_T_BUS_BVALID;
        else 
            T_BUS_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    T_BUS_blk_n_R_assign_proc : process(m_axi_T_BUS_RVALID, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            T_BUS_blk_n_R <= m_axi_T_BUS_RVALID;
        else 
            T_BUS_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    X_BUS_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARADDR, ap_CS_fsm_state10, sext_ln119_fu_1295_p1, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            X_BUS_ARADDR <= sext_ln119_fu_1295_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            X_BUS_ARADDR <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARADDR;
        else 
            X_BUS_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLEN, ap_CS_fsm_state10, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            X_BUS_ARLEN <= ap_const_lv32_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            X_BUS_ARLEN <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARLEN;
        else 
            X_BUS_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARVALID, ap_CS_fsm_state10, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            X_BUS_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            X_BUS_ARVALID <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_ARVALID;
        else 
            X_BUS_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    X_BUS_AWADDR_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state58, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWADDR, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWADDR, X_BUS_AWREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60, sext_ln137_fu_2289_p1, sext_ln254_fu_2876_p1, ap_block_state13_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_logic_1 = X_BUS_AWREADY))) then 
            X_BUS_AWADDR <= sext_ln254_fu_2876_p1;
        elsif (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            X_BUS_AWADDR <= sext_ln137_fu_2289_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_AWADDR <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_AWADDR <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWADDR;
        else 
            X_BUS_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_AWLEN_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state58, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLEN, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLEN, X_BUS_AWREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_block_state13_io, zext_ln254_1_fu_2871_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_logic_1 = X_BUS_AWREADY))) then 
            X_BUS_AWLEN <= zext_ln254_1_fu_2871_p1;
        elsif (((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            X_BUS_AWLEN <= ap_const_lv32_3000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_AWLEN <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_AWLEN <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWLEN;
        else 
            X_BUS_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_AWVALID_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state58, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWVALID, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWVALID, X_BUS_AWREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_block_state13_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_logic_1 = X_BUS_AWREADY)) or ((ap_const_boolean_0 = ap_block_state13_io) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            X_BUS_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_AWVALID <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_AWVALID <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_AWVALID;
        else 
            X_BUS_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    X_BUS_BREADY_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state65, icmp_ln254_reg_3371, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_BREADY, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_BREADY, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60)
    begin
        if (((not(((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) and (icmp_ln254_reg_3371 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65)) or (not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            X_BUS_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_BREADY <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_BREADY <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_BREADY;
        else 
            X_BUS_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    X_BUS_RREADY_assign_proc : process(ap_CS_fsm_state9, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_RREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            X_BUS_RREADY <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_m_axi_X_BUS_RREADY;
        else 
            X_BUS_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    X_BUS_WDATA_assign_proc : process(grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WDATA, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WDATA, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_WDATA <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_WDATA <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WDATA;
        else 
            X_BUS_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_WSTRB_assign_proc : process(grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WSTRB, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WSTRB, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_WSTRB <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_WSTRB <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WSTRB;
        else 
            X_BUS_WSTRB <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_BUS_WVALID_assign_proc : process(grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WVALID, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state59, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            X_BUS_WVALID <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_m_axi_X_BUS_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            X_BUS_WVALID <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_m_axi_X_BUS_WVALID;
        else 
            X_BUS_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    X_BUS_blk_n_AR_assign_proc : process(m_axi_X_BUS_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            X_BUS_blk_n_AR <= m_axi_X_BUS_ARREADY;
        else 
            X_BUS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    X_BUS_blk_n_AW_assign_proc : process(m_axi_X_BUS_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            X_BUS_blk_n_AW <= m_axi_X_BUS_AWREADY;
        else 
            X_BUS_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    X_BUS_blk_n_B_assign_proc : process(m_axi_X_BUS_BVALID, ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state65, icmp_ln254_reg_3371)
    begin
        if ((((icmp_ln254_reg_3371 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((ap_const_lv1_1 = and_ln132_reg_3120) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            X_BUS_blk_n_B <= m_axi_X_BUS_BVALID;
        else 
            X_BUS_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    add405_fu_2886_p2 <= std_logic_vector(unsigned(tk_next28_reg_920) + unsigned(ap_const_lv32_1));
    add_ln137_fu_2247_p2 <= std_logic_vector(unsigned(zext_ln137_fu_2243_p1) + unsigned(yy_read_reg_2949));
    add_ln140_fu_2274_p2 <= std_logic_vector(unsigned(zext_ln140_fu_2270_p1) + unsigned(tt_read_reg_2942));
    add_ln149_fu_2199_p2 <= std_logic_vector(unsigned(tk_prev30_reg_740) + unsigned(ap_const_lv32_1));
    add_ln170_fu_2382_p2 <= std_logic_vector(unsigned(tmp_s_fu_2374_p3) + unsigned(zext_ln170_fu_2370_p1));
    add_ln187_1_fu_2445_p2 <= std_logic_vector(unsigned(zext_ln187_1_fu_2441_p1) + unsigned(ap_const_lv5_C));
    add_ln187_2_fu_2456_p2 <= std_logic_vector(unsigned(zext_ln187_1_fu_2441_p1) + unsigned(ap_const_lv5_12));
    add_ln187_3_fu_2488_p2 <= std_logic_vector(unsigned(zext_ln187_fu_2467_p1) + unsigned(ap_const_lv6_1E));
    add_ln187_4_fu_2505_p2 <= std_logic_vector(unsigned(zext_ln187_reg_3232) + unsigned(ap_const_lv6_24));
    add_ln187_fu_2430_p2 <= std_logic_vector(unsigned(zext_ln187_2_fu_2426_p1) + unsigned(ap_const_lv4_6));
    add_ln201_1_fu_2546_p2 <= std_logic_vector(unsigned(zext_ln201_1_fu_2542_p1) + unsigned(ap_const_lv5_C));
    add_ln201_2_fu_2557_p2 <= std_logic_vector(unsigned(zext_ln201_1_fu_2542_p1) + unsigned(ap_const_lv5_12));
    add_ln201_3_fu_2589_p2 <= std_logic_vector(unsigned(zext_ln201_fu_2568_p1) + unsigned(ap_const_lv6_1E));
    add_ln201_4_fu_2606_p2 <= std_logic_vector(unsigned(zext_ln201_reg_3287) + unsigned(ap_const_lv6_24));
    add_ln201_fu_2531_p2 <= std_logic_vector(unsigned(zext_ln201_2_fu_2527_p1) + unsigned(ap_const_lv4_6));
    add_ln254_fu_2847_p2 <= std_logic_vector(unsigned(zext_ln254_fu_2843_p1) + unsigned(yy_read_reg_2949));
    add_ln616_1_fu_1669_p2 <= std_logic_vector(unsigned(F2_1_fu_1657_p2) + unsigned(ap_const_lv12_FC9));
    add_ln616_2_fu_1942_p2 <= std_logic_vector(unsigned(F2_2_fu_1930_p2) + unsigned(ap_const_lv12_FC9));
    add_ln616_fu_1396_p2 <= std_logic_vector(unsigned(F2_fu_1384_p2) + unsigned(ap_const_lv12_FC9));
    and_ln132_fu_2187_p2 <= (icmp_ln132_fu_2175_p2 and icmp_ln132_1_fu_2181_p2);
    and_ln617_1_fu_1757_p2 <= (xor_ln606_1_fu_1751_p2 and icmp_ln617_1_fu_1689_p2);
    and_ln617_2_fu_2030_p2 <= (xor_ln606_2_fu_2024_p2 and icmp_ln617_2_fu_1962_p2);
    and_ln617_fu_1484_p2 <= (xor_ln606_fu_1478_p2 and icmp_ln617_fu_1416_p2);
    and_ln620_1_fu_1516_p2 <= (icmp_ln616_fu_1390_p2 and and_ln620_fu_1510_p2);
    and_ln620_2_fu_1783_p2 <= (xor_ln617_1_fu_1777_p2 and icmp_ln620_1_fu_1699_p2);
    and_ln620_3_fu_1789_p2 <= (icmp_ln616_1_fu_1663_p2 and and_ln620_2_fu_1783_p2);
    and_ln620_4_fu_2048_p2 <= (xor_ln617_2_fu_2042_p2 and icmp_ln620_2_fu_1972_p2);
    and_ln620_5_fu_2054_p2 <= (icmp_ln616_2_fu_1936_p2 and and_ln620_4_fu_2048_p2);
    and_ln620_fu_1510_p2 <= (xor_ln617_fu_1504_p2 and icmp_ln620_fu_1426_p2);
    and_ln638_1_fu_1572_p2 <= (xor_ln638_fu_1566_p2 and icmp_ln616_3_fu_1560_p2);
    and_ln638_2_fu_1819_p2 <= (xor_ln616_1_fu_1813_p2 and icmp_ln638_1_fu_1705_p2);
    and_ln638_3_fu_1845_p2 <= (xor_ln638_1_fu_1839_p2 and icmp_ln616_4_fu_1833_p2);
    and_ln638_4_fu_2072_p2 <= (xor_ln616_2_fu_2066_p2 and icmp_ln638_2_fu_1978_p2);
    and_ln638_5_fu_2090_p2 <= (xor_ln638_2_fu_2084_p2 and icmp_ln616_5_fu_2078_p2);
    and_ln638_fu_1546_p2 <= (xor_ln616_fu_1540_p2 and icmp_ln638_fu_1432_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(36);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(40);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(41);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(42);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(43);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(44);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(45);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(46);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state39 <= ap_CS_fsm(37);
    ap_CS_fsm_state40 <= ap_CS_fsm(38);
    ap_CS_fsm_state41 <= ap_CS_fsm(39);
    ap_CS_fsm_state51 <= ap_CS_fsm(47);
    ap_CS_fsm_state52 <= ap_CS_fsm(48);
    ap_CS_fsm_state53 <= ap_CS_fsm(49);
    ap_CS_fsm_state54 <= ap_CS_fsm(50);
    ap_CS_fsm_state55 <= ap_CS_fsm(51);
    ap_CS_fsm_state56 <= ap_CS_fsm(52);
    ap_CS_fsm_state57 <= ap_CS_fsm(53);
    ap_CS_fsm_state58 <= ap_CS_fsm(54);
    ap_CS_fsm_state59 <= ap_CS_fsm(55);
    ap_CS_fsm_state60 <= ap_CS_fsm(56);
    ap_CS_fsm_state65 <= ap_CS_fsm(61);
    ap_CS_fsm_state66 <= ap_CS_fsm(62);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(ap_block_state13_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state13_io)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(ap_block_state15_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state15_on_subcall_done)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(and_ln132_reg_3120, T_BUS_BVALID, X_BUS_BVALID)
    begin
        if ((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_ode_fpga_fu_1163_ap_done)
    begin
        if ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_io)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state30_blk_assign_proc : process(grp_ode_fpga_fu_1163_ap_done)
    begin
        if ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(grp_ode_fpga_fu_1163_ap_done)
    begin
        if ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state55_blk <= ap_const_logic_0;

    ap_ST_fsm_state56_blk_assign_proc : process(ap_block_state56_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state56_on_subcall_done)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(X_BUS_AWREADY)
    begin
        if ((ap_const_logic_0 = X_BUS_AWREADY)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state60_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;

    ap_ST_fsm_state65_blk_assign_proc : process(icmp_ln254_reg_3371, X_BUS_BVALID)
    begin
        if (((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) then 
            ap_ST_fsm_state65_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state65_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state66_blk_assign_proc : process(grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done)
    begin
        if ((grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state66_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state66_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(T_BUS_RVALID)
    begin
        if ((ap_const_logic_0 = T_BUS_RVALID)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(T_BUS_AWREADY, X_BUS_AWREADY)
    begin
                ap_block_state13_io <= ((ap_const_logic_0 = X_BUS_AWREADY) or (ap_const_logic_0 = T_BUS_AWREADY));
    end process;


    ap_block_state15_on_subcall_done_assign_proc : process(grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_done, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_done = ap_const_logic_0) or (grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_done = ap_const_logic_0));
    end process;


    ap_block_state20_assign_proc : process(and_ln132_reg_3120, T_BUS_BVALID, X_BUS_BVALID)
    begin
                ap_block_state20 <= (((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)));
    end process;


    ap_block_state2_io_assign_proc : process(T_BUS_ARREADY, X_BUS_ARREADY)
    begin
                ap_block_state2_io <= ((ap_const_logic_0 = X_BUS_ARREADY) or (ap_const_logic_0 = T_BUS_ARREADY));
    end process;

        ap_block_state31_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state56_on_subcall_done_assign_proc : process(icmp_ln1698_reg_3319, grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_done, grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_done, ap_predicate_op557_call_state56)
    begin
                ap_block_state56_on_subcall_done <= (((ap_predicate_op557_call_state56 = ap_const_boolean_1) and (grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_done = ap_const_logic_0)) or ((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state65_assign_proc : process(icmp_ln254_reg_3371, X_BUS_BVALID)
    begin
                ap_block_state65 <= ((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0));
    end process;


    ap_block_state65_ignore_call3_assign_proc : process(icmp_ln254_reg_3371, X_BUS_BVALID)
    begin
                ap_block_state65_ignore_call3 <= ((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage6, icmp_ln180_reg_3247, ap_block_pp0_stage6_subdone)
    begin
        if (((icmp_ln180_reg_3247 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage6, icmp_ln195_reg_3302, ap_block_pp1_stage6_subdone)
    begin
        if (((icmp_ln195_reg_3302 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) and (grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_cycles26_phi_fu_937_p4_assign_proc : process(icmp_ln1696_2_reg_3111, trunc_ln125_reg_3163, ap_CS_fsm_state57, icmp_ln1696_fu_2762_p2, cycles26_reg_933)
    begin
        if (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            ap_phi_mux_cycles26_phi_fu_937_p4 <= trunc_ln125_reg_3163;
        else 
            ap_phi_mux_cycles26_phi_fu_937_p4 <= cycles26_reg_933;
        end if; 
    end process;


    ap_phi_mux_n12_phi_fu_850_p4_assign_proc : process(n12_reg_846, ap_CS_fsm_pp0_stage0, icmp_ln180_reg_3247, n_3_reg_3256, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln180_reg_3247 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_n12_phi_fu_850_p4 <= n_3_reg_3256;
        else 
            ap_phi_mux_n12_phi_fu_850_p4 <= n12_reg_846;
        end if; 
    end process;


    ap_phi_mux_n_211_phi_fu_862_p4_assign_proc : process(n_211_reg_858, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln195_reg_3302, n_4_reg_3311, ap_block_pp1_stage0)
    begin
        if (((icmp_ln195_reg_3302 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_n_211_phi_fu_862_p4 <= n_4_reg_3311;
        else 
            ap_phi_mux_n_211_phi_fu_862_p4 <= n_211_reg_858;
        end if; 
    end process;


    ap_phi_mux_tk_next28_phi_fu_924_p4_assign_proc : process(icmp_ln1696_2_reg_3111, ap_CS_fsm_state57, icmp_ln1696_fu_2762_p2, tk_next_reg_809, tk_next28_reg_920)
    begin
        if (((icmp_ln1696_fu_2762_p2 = ap_const_lv1_0) and (icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            ap_phi_mux_tk_next28_phi_fu_924_p4 <= tk_next_reg_809;
        else 
            ap_phi_mux_tk_next28_phi_fu_924_p4 <= tk_next28_reg_920;
        end if; 
    end process;


    ap_phi_mux_tk_prev_phi_fu_874_p6_assign_proc : process(icmp_ln1698_reg_3319, icmp_ln1698_1_reg_3328, ap_CS_fsm_state56, tk_prev_reg_870, tk_next_reg_809)
    begin
        if ((((icmp_ln1698_1_reg_3328 = ap_const_lv1_0) and (icmp_ln1698_reg_3319 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            ap_phi_mux_tk_prev_phi_fu_874_p6 <= tk_next_reg_809;
        else 
            ap_phi_mux_tk_prev_phi_fu_874_p6 <= tk_prev_reg_870;
        end if; 
    end process;


    ap_predicate_op557_call_state56_assign_proc : process(icmp_ln1698_reg_3319, icmp_ln1698_1_reg_3328)
    begin
                ap_predicate_op557_call_state56 <= ((icmp_ln1698_1_reg_3328 = ap_const_lv1_0) and (icmp_ln1698_reg_3319 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) and (grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    atol_loc_V_ap_fixed_base_fu_1128_d_assign_proc : process(atol_read_reg_2927, ap_CS_fsm_state8, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_atol_loc_V_ap_fixed_base_fu_1128_p_din1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            atol_loc_V_ap_fixed_base_fu_1128_d <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_atol_loc_V_ap_fixed_base_fu_1128_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            atol_loc_V_ap_fixed_base_fu_1128_d <= atol_read_reg_2927;
        else 
            atol_loc_V_ap_fixed_base_fu_1128_d <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bitcast_ln122_fu_2156_p1 <= trunc_ln122_reg_3013;

    c_V_address0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state24, icmp_ln1698_reg_3319, ap_CS_fsm_state56, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_c_address0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_address0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_address0, ap_CS_fsm_state28, ap_predicate_op557_call_state56, ap_CS_fsm_state40, zext_ln162_fu_2398_p1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_V_address0 <= zext_ln162_fu_2398_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            c_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            c_V_address0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_address0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            c_V_address0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            c_V_address0 <= grp_ode_fpga_fu_1163_c_address0;
        else 
            c_V_address0 <= "XXX";
        end if; 
    end process;


    c_V_address1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, zext_ln180_reg_3207, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state22)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_V_address1 <= zext_ln180_reg_3207(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c_V_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_V_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            c_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            c_V_address1 <= "XXX";
        end if; 
    end process;


    c_V_ce0_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state21, ap_CS_fsm_state24, icmp_ln1698_reg_3319, ap_CS_fsm_state56, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_c_ce0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_ce0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_ce0, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state28, ap_predicate_op557_call_state56, ap_CS_fsm_state40, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state28) or (not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            c_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            c_V_ce0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_c_V_ce0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            c_V_ce0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_c_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            c_V_ce0 <= grp_ode_fpga_fu_1163_c_ce0;
        else 
            c_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_V_ce1_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state21, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            c_V_ce1 <= ap_const_logic_1;
        else 
            c_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    c_V_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, grp_multiply_fu_1093_ap_return, ap_CS_fsm_state28, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_V_d0 <= grp_multiply_fu_1093_ap_return(139 downto 55);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            c_V_d0 <= ap_const_lv85_0;
        else 
            c_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_V_d1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_multiply_fu_1093_ap_return, ap_block_pp0_stage0, ap_CS_fsm_state22)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_V_d1 <= grp_multiply_fu_1093_ap_return(139 downto 55);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            c_V_d1 <= ap_const_lv85_0;
        else 
            c_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_V_we0_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state21, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state28, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state28) or (not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            c_V_we0 <= ap_const_logic_1;
        else 
            c_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c_V_we1_assign_proc : process(ap_CS_fsm_state20, and_ln132_reg_3120, ap_CS_fsm_state21, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, T_BUS_BVALID, X_BUS_BVALID, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((ap_const_logic_0 = T_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)) or ((ap_const_logic_0 = X_BUS_BVALID) and (ap_const_lv1_1 = and_ln132_reg_3120)))) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            c_V_we1 <= ap_const_logic_1;
        else 
            c_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

        conv_i602_fu_2163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(atol_loc_V_reg_3000),89));

    cycles_1_fu_2309_p2 <= std_logic_vector(unsigned(cycles27_reg_763) + unsigned(ap_const_lv32_1));

    e_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state41, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_address0, ap_block_pp1_stage0, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52, zext_ln195_fu_2521_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            e_V_address0 <= zext_ln195_fu_2521_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            e_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            e_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            e_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            e_V_address0 <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_address0;
        else 
            e_V_address0 <= "XXX";
        end if; 
    end process;


    e_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, e_V_addr_reg_3271_pp1_iter1_reg, ap_CS_fsm_state41, ap_block_pp1_stage1, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            e_V_address1 <= e_V_addr_reg_3271_pp1_iter1_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            e_V_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            e_V_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            e_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            e_V_address1 <= "XXX";
        end if; 
    end process;


    e_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, grp_ode_fpga_fu_1163_ap_done, ap_CS_fsm_state41, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_ce0, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state39) or ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            e_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            e_V_ce0 <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_e_V_ce0;
        else 
            e_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    e_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter1, grp_ode_fpga_fu_1163_ap_done, ap_CS_fsm_state41, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state39) or ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            e_V_ce1 <= ap_const_logic_1;
        else 
            e_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    e_V_d1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state41, grp_multiply_fu_1093_ap_return, ap_block_pp1_stage1, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            e_V_d1 <= grp_multiply_fu_1093_ap_return;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            e_V_d1 <= ap_const_lv177_lc_1;
        else 
            e_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    e_V_we0_assign_proc : process(grp_ode_fpga_fu_1163_ap_done, ap_CS_fsm_state41, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state39) or ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            e_V_we0 <= ap_const_logic_1;
        else 
            e_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter1, grp_ode_fpga_fu_1163_ap_done, ap_CS_fsm_state41, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state39) or ((grp_ode_fpga_fu_1163_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            e_V_we1 <= ap_const_logic_1;
        else 
            e_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_65_fu_2805_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_tk_next28_phi_fu_924_p4),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    empty_66_fu_2811_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_tk_next28_phi_fu_924_p4),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    empty_67_fu_2817_p2 <= std_logic_vector(unsigned(empty_65_fu_2805_p2) - unsigned(empty_66_fu_2811_p2));
    exp_tmp_1_fu_1607_p4 <= ireg_1_fu_1592_p1(62 downto 52);
    exp_tmp_2_fu_1880_p4 <= ireg_2_fu_1865_p1(62 downto 52);
    exp_tmp_fu_1334_p4 <= ireg_fu_1319_p1(62 downto 52);
    flag <= flag_loc_V25_reg_945(0);

    flag_ap_vld_assign_proc : process(ap_CS_fsm_state65, icmp_ln254_reg_3371, X_BUS_BVALID)
    begin
        if ((not(((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            flag_ap_vld <= ap_const_logic_1;
        else 
            flag_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_ap_fixed_base_fu_1123_d_assign_proc : process(mu_read_reg_2912, ap_CS_fsm_state8, ap_CS_fsm_state11, bitcast_ln122_fu_2156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_ap_fixed_base_fu_1123_d <= bitcast_ln122_fu_2156_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ap_fixed_base_fu_1123_d <= mu_read_reg_2912;
        else 
            grp_ap_fixed_base_fu_1123_d <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1239_p4 <= grp_multiply_fu_1093_ap_return(139 downto 55);
    grp_fu_1251_p2 <= std_logic_vector(signed(lhs_V32_reg_718) + signed(h_loc_7_reg_3156));

    grp_macply_fu_959_result_V_read_assign_proc : process(reg_787, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, reg_1028, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, e_V_q0, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din1, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp1_stage1, ap_block_pp1_stage2, ap_block_pp1_stage3, ap_block_pp1_stage4, ap_block_pp1_stage5, ap_block_pp1_stage6, ap_CS_fsm_state27, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_macply_fu_959_result_V_read <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_macply_fu_959_result_V_read <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din1;
        elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)))) then 
            grp_macply_fu_959_result_V_read <= reg_1028;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_macply_fu_959_result_V_read <= e_V_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_macply_fu_959_result_V_read <= reg_787;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_macply_fu_959_result_V_read <= ap_const_lv177_lc_1;
        else 
            grp_macply_fu_959_result_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_macply_fu_959_x_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din2, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp1_stage1, ap_block_pp1_stage2, ap_block_pp1_stage3, ap_block_pp1_stage4, ap_block_pp1_stage5, ap_block_pp1_stage6, ap_CS_fsm_state27, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_macply_fu_959_x_V_read <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_macply_fu_959_x_V_read <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din2;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_1FFFFFFFFCCCCCCCCCCCCD;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_55D229EF6BC39;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_1FFFFFFFF97D4B8B4D79EA;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_4BBBBBBBBBBBC;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_1FFFFFFFFF74A52D57AA02;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_28641FDB9753;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_10C30C30C30C31;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_1FFFFFFFD6BC609A90E7DA;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_53555555555554;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_39809334AC0BF6;
        elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_macply_fu_959_x_V_read <= ap_const_lv85_BAAAAAAAAAAAA;
        else 
            grp_macply_fu_959_x_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_macply_fu_959_y_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, k_V_q0, reg_1257, k_V_q1, reg_1263, reg_1269, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din3, grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din3, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp1_stage1, ap_block_pp1_stage2, ap_block_pp1_stage3, ap_block_pp1_stage4, ap_block_pp1_stage5, ap_block_pp1_stage6, ap_CS_fsm_state27, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_macply_fu_959_y_V_read <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_grp_macply_fu_959_p_din3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_macply_fu_959_y_V_read <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_grp_macply_fu_959_p_din3;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_macply_fu_959_y_V_read <= k_V_q0;
        elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_macply_fu_959_y_V_read <= reg_1269;
        elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_macply_fu_959_y_V_read <= reg_1263;
        elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_macply_fu_959_y_V_read <= reg_1257;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_macply_fu_959_y_V_read <= k_V_q1;
        else 
            grp_macply_fu_959_y_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_multiply_fu_1093_y_V_read_assign_proc : process(grp_macply_fu_959_ap_return, reg_1028, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, icmp_ln1696_2_reg_3111, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state57, ap_enable_reg_pp0_iter1, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out, ap_CS_fsm_state28, ap_block_pp0_stage0, ap_block_pp1_stage1, zext_ln243_fu_2733_p1)
    begin
        if (((icmp_ln1696_2_reg_3111 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_multiply_fu_1093_y_V_read <= zext_ln243_fu_2733_p1;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_multiply_fu_1093_y_V_read <= reg_1028;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_multiply_fu_1093_y_V_read <= grp_macply_fu_959_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_multiply_fu_1093_y_V_read <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_sum_V_1_0_out;
        else 
            grp_multiply_fu_1093_y_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_ode_fpga_fu_1163_ap_start <= grp_ode_fpga_fu_1163_ap_start_reg;

    grp_ode_fpga_fu_1163_out_offset_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state30, i_814_reg_822, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_ode_fpga_fu_1163_out_offset <= ap_const_lv3_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ode_fpga_fu_1163_out_offset <= i_814_reg_822;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_ode_fpga_fu_1163_out_offset <= ap_const_lv3_0;
        else 
            grp_ode_fpga_fu_1163_out_offset <= "XXX";
        end if; 
    end process;

    grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_ap_start_reg;
    grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_ap_start_reg;
    grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_ap_start_reg;
    grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_ap_start_reg;
    grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_ap_start_reg;
    grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_ap_start_reg;
    grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start <= grp_runge_kutta_45_Pipeline_sq_sum_loop_fu_1189_ap_start_reg;
    grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start <= grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_ap_start_reg;
    grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_ap_start_reg;
    grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_ap_start_reg;
    h_loc_2_fu_1992_p2 <= std_logic_vector(shift_right(signed(man_V_fu_1916_p3),to_integer(unsigned('0' & zext_ln621_2_fu_1988_p1(31-1 downto 0)))));
    h_loc_3_fu_1998_p3 <= ireg_2_fu_1865_p1(63 downto 63);
    h_loc_4_fu_2018_p2 <= std_logic_vector(shift_left(unsigned(sext_ln618_2_fu_1968_p1),to_integer(unsigned('0' & zext_ln639_2_fu_2014_p1(31-1 downto 0)))));
    h_loc_5_fu_2148_p3 <= 
        select_ln638_2_fu_2134_p3 when (or_ln638_5_fu_2142_p2(0) = '1') else 
        select_ln623_fu_2006_p3;
    h_loc_7_fu_2339_p2 <= reg_787(85 - 1 downto 0);
    h_loc_7_fu_2339_p3 <= 
        h_loc_fu_2334_p2 when (icmp_ln1695_fu_2329_p2(0) = '1') else 
        h_loc_7_fu_2339_p2;
    h_loc_8_fu_2755_p3 <= 
        select_ln244_fu_2743_p3 when (icmp_ln1695_1_fu_2750_p2(0) = '1') else 
        h_min_loc_7_reg_3024;
    h_loc_fu_2334_p2 <= std_logic_vector(signed(tf_loc_V_reg_3005) - signed(lhs_V32_reg_718));
    h_max_loc_1_fu_1446_p2 <= std_logic_vector(shift_right(signed(man_V_9_fu_1370_p3),to_integer(unsigned('0' & zext_ln621_fu_1442_p1(31-1 downto 0)))));
    h_max_loc_2_fu_1452_p3 <= ireg_fu_1319_p1(63 downto 63);
    h_max_loc_3_fu_1472_p2 <= std_logic_vector(shift_left(unsigned(sext_ln618_fu_1422_p1),to_integer(unsigned('0' & zext_ln639_fu_1468_p1(31-1 downto 0)))));
    h_max_loc_4_fu_1490_p3 <= 
        man_V_9_fu_1370_p3 when (and_ln617_fu_1484_p2(0) = '1') else 
        select_ln115_fu_1460_p3;
    h_max_loc_5_fu_1522_p3 <= 
        h_max_loc_1_fu_1446_p2 when (and_ln620_1_fu_1516_p2(0) = '1') else 
        h_max_loc_4_fu_1490_p3;
    h_max_loc_6_fu_1552_p3 <= 
        h_max_loc_3_fu_1472_p2 when (and_ln638_fu_1546_p2(0) = '1') else 
        sext_ln115_fu_1530_p1;
    h_max_loc_7_fu_1584_p3 <= 
        ap_const_lv85_0 when (or_ln638_fu_1578_p2(0) = '1') else 
        h_max_loc_6_fu_1552_p3;
    h_min_loc_1_fu_1719_p2 <= std_logic_vector(shift_right(signed(man_V_10_fu_1643_p3),to_integer(unsigned('0' & zext_ln621_1_fu_1715_p1(31-1 downto 0)))));
    h_min_loc_2_fu_1725_p3 <= ireg_1_fu_1592_p1(63 downto 63);
    h_min_loc_3_fu_1745_p2 <= std_logic_vector(shift_left(unsigned(sext_ln618_1_fu_1695_p1),to_integer(unsigned('0' & zext_ln639_1_fu_1741_p1(31-1 downto 0)))));
    h_min_loc_4_fu_1763_p3 <= 
        man_V_10_fu_1643_p3 when (and_ln617_1_fu_1757_p2(0) = '1') else 
        select_ln115_1_fu_1733_p3;
    h_min_loc_5_fu_1795_p3 <= 
        h_min_loc_1_fu_1719_p2 when (and_ln620_3_fu_1789_p2(0) = '1') else 
        h_min_loc_4_fu_1763_p3;
    h_min_loc_6_fu_1825_p3 <= 
        h_min_loc_3_fu_1745_p2 when (and_ln638_2_fu_1819_p2(0) = '1') else 
        sext_ln115_1_fu_1803_p1;
    h_min_loc_7_fu_1857_p3 <= 
        ap_const_lv85_0 when (or_ln638_1_fu_1851_p2(0) = '1') else 
        h_min_loc_6_fu_1825_p3;
    i_fu_2409_p2 <= std_logic_vector(unsigned(i_814_reg_822) + unsigned(ap_const_lv3_1));
    icmp_ln132_1_fu_2181_p2 <= "0" when (tk_next29_reg_752 = ap_const_lv32_0) else "1";
    icmp_ln132_fu_2175_p2 <= "1" when (tk_prev30_reg_740 = ap_const_lv32_FFF) else "0";
    icmp_ln148_fu_2193_p2 <= "1" when (unsigned(tk_prev30_reg_740) < unsigned(ap_const_lv32_FFF)) else "0";
    icmp_ln160_fu_2415_p2 <= "1" when (i_fu_2409_p2 = ap_const_lv3_6) else "0";
    icmp_ln162_fu_2403_p2 <= "1" when (n_113_reg_834 = ap_const_lv3_5) else "0";
    icmp_ln1695_1_fu_2750_p2 <= "1" when (signed(select_ln244_fu_2743_p3) > signed(h_min_loc_7_reg_3024)) else "0";
    icmp_ln1695_fu_2329_p2 <= "1" when (signed(ret_V_fu_2323_p2) > signed(lhs_V_1_reg_3041)) else "0";
    icmp_ln1696_1_fu_2738_p2 <= "1" when (signed(grp_fu_1239_p4) < signed(h_max_loc_7_reg_3018)) else "0";
    icmp_ln1696_2_fu_2166_p2 <= "1" when (signed(grp_ap_fixed_base_fu_1123_ap_return) < signed(tf_loc_V_reg_3005)) else "0";
    icmp_ln1696_fu_2762_p2 <= "1" when (signed(tt_loc_V_q0) < signed(tf_loc_V_reg_3005)) else "0";
    icmp_ln1698_1_fu_2660_p2 <= "1" when (signed(h_loc_7_reg_3156) > signed(h_min_loc_7_reg_3024)) else "0";
    icmp_ln1698_fu_2629_p2 <= "1" when (unsigned(grp_runge_kutta_45_Pipeline_sqrt_loop_fu_1195_Q_V_5_out) > unsigned(conv_i602_reg_3106)) else "0";
    icmp_ln180_fu_2499_p2 <= "1" when (n12_reg_846 = ap_const_lv3_5) else "0";
    icmp_ln195_fu_2600_p2 <= "1" when (n_211_reg_858 = ap_const_lv3_5) else "0";
    icmp_ln254_fu_2829_p2 <= "1" when (mul389_fu_2823_p2 = ap_const_lv32_0) else "0";
    icmp_ln606_1_fu_1651_p2 <= "1" when (trunc_ln590_1_fu_1595_p1 = ap_const_lv63_0) else "0";
    icmp_ln606_2_fu_1924_p2 <= "1" when (trunc_ln590_2_fu_1868_p1 = ap_const_lv63_0) else "0";
    icmp_ln606_fu_1378_p2 <= "1" when (trunc_ln590_fu_1322_p1 = ap_const_lv63_0) else "0";
    icmp_ln616_1_fu_1663_p2 <= "1" when (signed(F2_1_fu_1657_p2) > signed(ap_const_lv12_37)) else "0";
    icmp_ln616_2_fu_1936_p2 <= "1" when (signed(F2_2_fu_1930_p2) > signed(ap_const_lv12_37)) else "0";
    icmp_ln616_3_fu_1560_p2 <= "1" when (signed(F2_fu_1384_p2) < signed(ap_const_lv12_37)) else "0";
    icmp_ln616_4_fu_1833_p2 <= "1" when (signed(F2_1_fu_1657_p2) < signed(ap_const_lv12_37)) else "0";
    icmp_ln616_5_fu_2078_p2 <= "1" when (signed(F2_2_fu_1930_p2) < signed(ap_const_lv12_37)) else "0";
    icmp_ln616_fu_1390_p2 <= "1" when (signed(F2_fu_1384_p2) > signed(ap_const_lv12_37)) else "0";
    icmp_ln617_1_fu_1689_p2 <= "1" when (F2_1_fu_1657_p2 = ap_const_lv12_37) else "0";
    icmp_ln617_2_fu_1962_p2 <= "1" when (F2_2_fu_1930_p2 = ap_const_lv12_37) else "0";
    icmp_ln617_fu_1416_p2 <= "1" when (F2_fu_1384_p2 = ap_const_lv12_37) else "0";
    icmp_ln620_1_fu_1699_p2 <= "1" when (unsigned(sh_amt_1_fu_1681_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_2_fu_1972_p2 <= "1" when (unsigned(sh_amt_2_fu_1954_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_fu_1426_p2 <= "1" when (unsigned(sh_amt_fu_1408_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln638_1_fu_1705_p2 <= "1" when (unsigned(sh_amt_1_fu_1681_p3) < unsigned(ap_const_lv12_55)) else "0";
    icmp_ln638_2_fu_1978_p2 <= "1" when (unsigned(sh_amt_2_fu_1954_p3) < unsigned(ap_const_lv12_55)) else "0";
    icmp_ln638_fu_1432_p2 <= "1" when (unsigned(sh_amt_fu_1408_p3) < unsigned(ap_const_lv12_55)) else "0";
    idxprom318_fu_2634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tk_next_reg_809),64));
    idxprom348_fu_2664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tk_next_reg_809),64));
    ireg_1_fu_1592_p1 <= h_min_read_reg_2917;
    ireg_2_fu_1865_p1 <= h0_read_reg_2932;
    ireg_fu_1319_p1 <= h_max_read_reg_2922;

    k_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state24, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_out_r_address0, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_address0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp1_stage1, ap_block_pp1_stage2, ap_CS_fsm_state40, ap_CS_fsm_state27, zext_ln187_3_fu_2436_p1, zext_ln187_5_fu_2462_p1, zext_ln187_7_fu_2494_p1, zext_ln187_8_fu_2510_p1, zext_ln195_fu_2521_p1, zext_ln201_4_fu_2552_p1, zext_ln201_6_fu_2584_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
            k_V_address0 <= zext_ln201_6_fu_2584_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            k_V_address0 <= zext_ln201_4_fu_2552_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            k_V_address0 <= zext_ln195_fu_2521_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            k_V_address0 <= zext_ln187_8_fu_2510_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            k_V_address0 <= zext_ln187_7_fu_2494_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            k_V_address0 <= zext_ln187_5_fu_2462_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            k_V_address0 <= zext_ln187_3_fu_2436_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_V_address0 <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            k_V_address0 <= grp_ode_fpga_fu_1163_out_r_address0;
        else 
            k_V_address0 <= "XXXXXX";
        end if; 
    end process;


    k_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage0, zext_ln180_fu_2421_p1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp1_stage1, ap_block_pp1_stage2, ap_block_pp1_stage3, zext_ln187_4_fu_2451_p1, zext_ln187_6_fu_2483_p1, zext_ln201_3_fu_2537_p1, zext_ln201_5_fu_2563_p1, zext_ln201_7_fu_2595_p1, zext_ln201_8_fu_2611_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then 
            k_V_address1 <= zext_ln201_8_fu_2611_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
            k_V_address1 <= zext_ln201_7_fu_2595_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            k_V_address1 <= zext_ln201_5_fu_2563_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            k_V_address1 <= zext_ln201_3_fu_2537_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            k_V_address1 <= zext_ln187_6_fu_2483_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            k_V_address1 <= zext_ln187_4_fu_2451_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            k_V_address1 <= zext_ln180_fu_2421_p1(6 - 1 downto 0);
        else 
            k_V_address1 <= "XXXXXX";
        end if; 
    end process;


    k_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state24, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_out_r_ce0, grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_ce0, ap_CS_fsm_state40, ap_CS_fsm_state27)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            k_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_V_ce0 <= grp_runge_kutta_45_Pipeline_k_inner_fu_1176_k_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            k_V_ce0 <= grp_ode_fpga_fu_1163_out_r_ce0;
        else 
            k_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            k_V_ce1 <= ap_const_logic_1;
        else 
            k_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_V_we0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state30, grp_ode_fpga_fu_1163_out_r_we0, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            k_V_we0 <= grp_ode_fpga_fu_1163_out_r_we0;
        else 
            k_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_1_fu_2160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tf_loc_V_reg_3005),86));

    lshr_ln_fu_2862_p4 <= mul389_reg_3365(31 downto 1);
    man_V_10_fu_1643_p3 <= 
        man_V_6_fu_1637_p2 when (p_Result_31_fu_1599_p3(0) = '1') else 
        zext_ln604_1_fu_1633_p1;
    man_V_2_fu_1364_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_fu_1360_p1));
    man_V_6_fu_1637_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_1_fu_1633_p1));
    man_V_7_fu_1910_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_2_fu_1906_p1));
    man_V_9_fu_1370_p3 <= 
        man_V_2_fu_1364_p2 when (p_Result_s_fu_1326_p3(0) = '1') else 
        zext_ln604_fu_1360_p1;
    man_V_fu_1916_p3 <= 
        man_V_7_fu_1910_p2 when (p_Result_33_fu_1872_p3(0) = '1') else 
        zext_ln604_2_fu_1906_p1;
    mul389_fu_2823_p2 <= std_logic_vector(unsigned(empty_67_fu_2817_p2) + unsigned(ap_const_lv32_6));
    n_3_fu_2515_p2 <= std_logic_vector(unsigned(n12_reg_846) + unsigned(ap_const_lv3_1));
    n_4_fu_2616_p2 <= std_logic_vector(unsigned(n_211_reg_858) + unsigned(ap_const_lv3_1));
    n_fu_2388_p2 <= std_logic_vector(unsigned(n_113_reg_834) + unsigned(ap_const_lv3_1));
    or_ln616_1_fu_1807_p2 <= (or_ln617_1_fu_1771_p2 or icmp_ln616_1_fu_1663_p2);
    or_ln616_2_fu_2060_p2 <= (or_ln617_2_fu_2036_p2 or icmp_ln616_2_fu_1936_p2);
    or_ln616_fu_1534_p2 <= (or_ln617_fu_1498_p2 or icmp_ln616_fu_1390_p2);
    or_ln617_1_fu_1771_p2 <= (icmp_ln617_1_fu_1689_p2 or icmp_ln606_1_fu_1651_p2);
    or_ln617_2_fu_2036_p2 <= (icmp_ln617_2_fu_1962_p2 or icmp_ln606_2_fu_1924_p2);
    or_ln617_fu_1498_p2 <= (icmp_ln617_fu_1416_p2 or icmp_ln606_fu_1378_p2);
    or_ln638_1_fu_1851_p2 <= (icmp_ln606_1_fu_1651_p2 or and_ln638_3_fu_1845_p2);
    or_ln638_2_fu_2096_p2 <= (icmp_ln606_2_fu_1924_p2 or and_ln638_5_fu_2090_p2);
    or_ln638_3_fu_2110_p2 <= (or_ln638_2_fu_2096_p2 or and_ln638_4_fu_2072_p2);
    or_ln638_4_fu_2128_p2 <= (and_ln620_5_fu_2054_p2 or and_ln617_2_fu_2030_p2);
    or_ln638_5_fu_2142_p2 <= (or_ln638_4_fu_2128_p2 or or_ln638_3_fu_2110_p2);
    or_ln638_fu_1578_p2 <= (icmp_ln606_fu_1378_p2 or and_ln638_1_fu_1572_p2);
    p_Result_30_fu_1352_p3 <= (ap_const_lv1_1 & trunc_ln600_fu_1348_p1);
    p_Result_31_fu_1599_p3 <= ireg_1_fu_1592_p1(63 downto 63);
    p_Result_32_fu_1625_p3 <= (ap_const_lv1_1 & trunc_ln600_1_fu_1621_p1);
    p_Result_33_fu_1872_p3 <= ireg_2_fu_1865_p1(63 downto 63);
    p_Result_34_fu_1898_p3 <= (ap_const_lv1_1 & trunc_ln600_2_fu_1894_p1);
    p_Result_s_fu_1326_p3 <= ireg_fu_1319_p1(63 downto 63);
    ref_tmp1_fu_2359_p3 <= (h_loc_7_reg_3156 & ap_const_lv55_0);
    ret_V_fu_2323_p2 <= std_logic_vector(signed(sext_ln859_fu_2315_p1) + signed(sext_ln859_2_fu_2319_p1));
    select_ln115_1_fu_1733_p3 <= 
        ap_const_lv54_3FFFFFFFFFFFFF when (h_min_loc_2_fu_1725_p3(0) = '1') else 
        ap_const_lv54_0;
    select_ln115_fu_1460_p3 <= 
        ap_const_lv54_3FFFFFFFFFFFFF when (h_max_loc_2_fu_1452_p3(0) = '1') else 
        ap_const_lv54_0;
    select_ln244_fu_2743_p3 <= 
        grp_fu_1239_p4 when (icmp_ln1696_1_fu_2738_p2(0) = '1') else 
        h_max_loc_7_reg_3018;
    select_ln623_fu_2006_p3 <= 
        ap_const_lv85_1FFFFFFFFFFFFFFFFFFFFF when (h_loc_3_fu_1998_p3(0) = '1') else 
        ap_const_lv85_0;
    select_ln638_1_fu_2116_p3 <= 
        h_loc_2_fu_1992_p2 when (and_ln620_5_fu_2054_p2(0) = '1') else 
        man_V_fu_1916_p3;
    select_ln638_2_fu_2134_p3 <= 
        select_ln638_fu_2102_p3 when (or_ln638_3_fu_2110_p2(0) = '1') else 
        sext_ln638_fu_2124_p1;
    select_ln638_fu_2102_p3 <= 
        ap_const_lv85_0 when (or_ln638_2_fu_2096_p2(0) = '1') else 
        h_loc_4_fu_2018_p2;
        sext_ln115_1_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_min_loc_5_fu_1795_p3),85));

        sext_ln115_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_max_loc_5_fu_1522_p3),85));

        sext_ln119_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_reg_2973),64));

        sext_ln122_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln122_1_reg_2979),64));

        sext_ln137_fu_2289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_reg_3129),64));

        sext_ln140_fu_2299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_3135),64));

        sext_ln160_fu_2366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ref_tmp1_fu_2359_p3),177));

        sext_ln187_fu_2479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_2471_p3),5));

        sext_ln201_fu_2580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_2572_p3),5));

        sext_ln254_fu_2876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln9_reg_3375),64));

        sext_ln618_1_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(man_V_10_fu_1643_p3),85));

        sext_ln618_2_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(man_V_fu_1916_p3),85));

        sext_ln618_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(man_V_9_fu_1370_p3),85));

        sext_ln621_1_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_fu_1681_p3),32));

        sext_ln621_2_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_fu_1954_p3),32));

        sext_ln621_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1408_p3),32));

        sext_ln638_fu_2124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln638_1_fu_2116_p3),85));

    sext_ln859_2_fu_2319_p0 <= reg_787(85 - 1 downto 0);
        sext_ln859_2_fu_2319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln859_2_fu_2319_p0),86));

        sext_ln859_fu_2315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V32_reg_718),86));

    sh_amt_1_fu_1681_p3 <= 
        add_ln616_1_fu_1669_p2 when (icmp_ln616_1_fu_1663_p2(0) = '1') else 
        sub_ln616_1_fu_1675_p2;
    sh_amt_2_fu_1954_p3 <= 
        add_ln616_2_fu_1942_p2 when (icmp_ln616_2_fu_1936_p2(0) = '1') else 
        sub_ln616_2_fu_1948_p2;
    sh_amt_fu_1408_p3 <= 
        add_ln616_fu_1396_p2 when (icmp_ln616_fu_1390_p2(0) = '1') else 
        sub_ln616_fu_1402_p2;
    shl_ln135_1_fu_2223_p2 <= std_logic_vector(shift_left(unsigned(cycles27_reg_763),to_integer(unsigned('0' & ap_const_lv32_D(31-1 downto 0)))));
    shl_ln135_fu_2217_p2 <= std_logic_vector(shift_left(unsigned(cycles27_reg_763),to_integer(unsigned('0' & ap_const_lv32_F(31-1 downto 0)))));
    shl_ln252_1_fu_2791_p3 <= (trunc_ln252_1_fu_2787_p1 & ap_const_lv13_0);
    shl_ln3_fu_2235_p3 <= (y_gap_1_fu_2229_p2 & ap_const_lv3_0);
    shl_ln4_fu_2835_p3 <= (y_gap_fu_2799_p2 & ap_const_lv3_0);
    shl_ln5_fu_2262_p3 <= (trunc_ln134_fu_2213_p1 & ap_const_lv15_0);
    shl_ln6_fu_2893_p3 <= (cycles26_reg_933 & ap_const_lv15_0);
    shl_ln8_fu_2725_p3 <= (scale_V_1_reg_886 & ap_const_lv55_0);
    shl_ln_fu_2779_p3 <= (trunc_ln252_fu_2775_p1 & ap_const_lv15_0);
    size <= std_logic_vector(unsigned(t_gap_reg_3360) + unsigned(add405_fu_2886_p2));

    size_ap_vld_assign_proc : process(ap_CS_fsm_state65, icmp_ln254_reg_3371, X_BUS_BVALID)
    begin
        if ((not(((ap_const_logic_0 = X_BUS_BVALID) and (icmp_ln254_reg_3371 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            size_ap_vld <= ap_const_logic_1;
        else 
            size_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln220_fu_2653_p2 <= std_logic_vector(unsigned(tmp_8_fu_2639_p3) - unsigned(tmp_9_fu_2646_p3));
    sub_ln231_fu_2683_p2 <= std_logic_vector(unsigned(tmp_10_fu_2669_p3) - unsigned(tmp_11_fu_2676_p3));
    sub_ln616_1_fu_1675_p2 <= std_logic_vector(unsigned(ap_const_lv12_37) - unsigned(F2_1_fu_1657_p2));
    sub_ln616_2_fu_1948_p2 <= std_logic_vector(unsigned(ap_const_lv12_37) - unsigned(F2_2_fu_1930_p2));
    sub_ln616_fu_1402_p2 <= std_logic_vector(unsigned(ap_const_lv12_37) - unsigned(F2_fu_1384_p2));
    sub_ln859_fu_2719_p2 <= std_logic_vector(unsigned(tmp_12_fu_2703_p3) - unsigned(tmp_13_fu_2711_p3));
    t_gap_fu_2767_p3 <= (ap_phi_mux_cycles26_phi_fu_937_p4 & ap_const_lv12_0);
    tk_next_1_fu_2205_p3 <= 
        add_ln149_fu_2199_p2 when (icmp_ln148_fu_2193_p2(0) = '1') else 
        tk_next29_reg_752;
    tmp_10_fu_2669_p3 <= (trunc_ln125_2_reg_3174 & ap_const_lv3_0);
    tmp_11_fu_2676_p3 <= (trunc_ln125_1_reg_3168 & ap_const_lv1_0);
    tmp_12_fu_2703_p3 <= (trunc_ln127_1_fu_2694_p1 & ap_const_lv3_0);
    tmp_13_fu_2711_p3 <= (trunc_ln127_fu_2690_p1 & ap_const_lv1_0);
    tmp_6_fu_2471_p3 <= (ap_const_lv1_1 & n12_reg_846);
    tmp_7_fu_2572_p3 <= (ap_const_lv1_1 & n_211_reg_858);
    tmp_8_fu_2639_p3 <= (trunc_ln125_2_reg_3174 & ap_const_lv3_0);
    tmp_9_fu_2646_p3 <= (trunc_ln125_1_reg_3168 & ap_const_lv1_0);
    tmp_s_fu_2374_p3 <= (i_814_reg_822 & ap_const_lv2_0);
    trunc_ln122_fu_1315_p1 <= T_BUS_RDATA(64 - 1 downto 0);
    trunc_ln125_1_fu_2351_p1 <= tk_next_reg_809(14 - 1 downto 0);
    trunc_ln125_2_fu_2355_p1 <= tk_next_reg_809(12 - 1 downto 0);
    trunc_ln125_fu_2347_p1 <= cycles_reg_797(20 - 1 downto 0);
    trunc_ln127_1_fu_2694_p1 <= ap_phi_mux_tk_prev_phi_fu_874_p6(12 - 1 downto 0);
    trunc_ln127_fu_2690_p1 <= ap_phi_mux_tk_prev_phi_fu_874_p6(14 - 1 downto 0);
    trunc_ln134_fu_2213_p1 <= cycles27_reg_763(20 - 1 downto 0);
    trunc_ln1696_fu_2171_p1 <= tk_prev30_reg_740(12 - 1 downto 0);
    trunc_ln252_1_fu_2787_p1 <= ap_phi_mux_cycles26_phi_fu_937_p4(19 - 1 downto 0);
    trunc_ln252_fu_2775_p1 <= ap_phi_mux_cycles26_phi_fu_937_p4(17 - 1 downto 0);
    trunc_ln257_fu_2902_p1 <= tt_read_reg_2942(4 - 1 downto 0);
    trunc_ln590_1_fu_1595_p1 <= ireg_1_fu_1592_p1(63 - 1 downto 0);
    trunc_ln590_2_fu_1868_p1 <= ireg_2_fu_1865_p1(63 - 1 downto 0);
    trunc_ln590_fu_1322_p1 <= ireg_fu_1319_p1(63 - 1 downto 0);
    trunc_ln600_1_fu_1621_p1 <= ireg_1_fu_1592_p1(52 - 1 downto 0);
    trunc_ln600_2_fu_1894_p1 <= ireg_2_fu_1865_p1(52 - 1 downto 0);
    trunc_ln600_fu_1348_p1 <= ireg_fu_1319_p1(52 - 1 downto 0);

    tt_loc_V_address0_assign_proc : process(ap_CS_fsm_state11, icmp_ln1698_fu_2629_p2, ap_CS_fsm_state55, icmp_ln1698_1_fu_2660_p2, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_address0, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state66, idxprom318_fu_2634_p1, idxprom348_fu_2664_p1, zext_ln129_fu_2698_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            tt_loc_V_address0 <= zext_ln129_fu_2698_p1(12 - 1 downto 0);
        elsif (((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            tt_loc_V_address0 <= idxprom348_fu_2664_p1(12 - 1 downto 0);
        elsif (((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            tt_loc_V_address0 <= idxprom318_fu_2634_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tt_loc_V_address0 <= ap_const_lv64_0(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            tt_loc_V_address0 <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            tt_loc_V_address0 <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_address0;
        else 
            tt_loc_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tt_loc_V_ce0_assign_proc : process(ap_CS_fsm_state11, icmp_ln1698_fu_2629_p2, ap_CS_fsm_state55, icmp_ln1698_1_fu_2660_p2, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_ce0, grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_ce0, ap_block_state56_on_subcall_done, ap_CS_fsm_state15, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((ap_const_boolean_0 = ap_block_state56_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            tt_loc_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            tt_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_last_axi_write_tt_fu_1228_tt_loc_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            tt_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_axi_write_tt_fu_1155_tt_loc_V_ce0;
        else 
            tt_loc_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tt_loc_V_d0_assign_proc : process(grp_ap_fixed_base_fu_1123_ap_return, ap_CS_fsm_state11, icmp_ln1698_fu_2629_p2, ap_CS_fsm_state55, icmp_ln1698_1_fu_2660_p2, grp_fu_1251_p2)
    begin
        if ((((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            tt_loc_V_d0 <= grp_fu_1251_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tt_loc_V_d0 <= grp_ap_fixed_base_fu_1123_ap_return;
        else 
            tt_loc_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tt_loc_V_we0_assign_proc : process(ap_CS_fsm_state11, icmp_ln1698_fu_2629_p2, ap_CS_fsm_state55, icmp_ln1698_1_fu_2660_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln1698_1_fu_2660_p2 = ap_const_lv1_0) and (icmp_ln1698_fu_2629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln1698_fu_2629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            tt_loc_V_we0 <= ap_const_logic_1;
        else 
            tt_loc_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln606_1_fu_1751_p2 <= (icmp_ln606_1_fu_1651_p2 xor ap_const_lv1_1);
    xor_ln606_2_fu_2024_p2 <= (icmp_ln606_2_fu_1924_p2 xor ap_const_lv1_1);
    xor_ln606_fu_1478_p2 <= (icmp_ln606_fu_1378_p2 xor ap_const_lv1_1);
    xor_ln616_1_fu_1813_p2 <= (or_ln616_1_fu_1807_p2 xor ap_const_lv1_1);
    xor_ln616_2_fu_2066_p2 <= (or_ln616_2_fu_2060_p2 xor ap_const_lv1_1);
    xor_ln616_fu_1540_p2 <= (or_ln616_fu_1534_p2 xor ap_const_lv1_1);
    xor_ln617_1_fu_1777_p2 <= (or_ln617_1_fu_1771_p2 xor ap_const_lv1_1);
    xor_ln617_2_fu_2042_p2 <= (or_ln617_2_fu_2036_p2 xor ap_const_lv1_1);
    xor_ln617_fu_1504_p2 <= (or_ln617_fu_1498_p2 xor ap_const_lv1_1);
    xor_ln638_1_fu_1839_p2 <= (icmp_ln638_1_fu_1705_p2 xor ap_const_lv1_1);
    xor_ln638_2_fu_2084_p2 <= (icmp_ln638_2_fu_1978_p2 xor ap_const_lv1_1);
    xor_ln638_fu_1566_p2 <= (icmp_ln638_fu_1432_p2 xor ap_const_lv1_1);
    y_gap_1_fu_2229_p2 <= std_logic_vector(unsigned(shl_ln135_fu_2217_p2) - unsigned(shl_ln135_1_fu_2223_p2));
    y_gap_fu_2799_p2 <= std_logic_vector(unsigned(shl_ln_fu_2779_p3) - unsigned(shl_ln252_1_fu_2791_p3));

    yy_loc_V_address0_assign_proc : process(ap_CS_fsm_state24, icmp_ln1698_reg_3319, ap_CS_fsm_state56, ap_CS_fsm_state30, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_address0, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_address0, grp_ode_fpga_fu_1163_in_r_address0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address0, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_address0, ap_predicate_op557_call_state56, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            yy_loc_V_address0 <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            yy_loc_V_address0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            yy_loc_V_address0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            yy_loc_V_address0 <= grp_ode_fpga_fu_1163_in_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            yy_loc_V_address0 <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            yy_loc_V_address0 <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_address0;
        else 
            yy_loc_V_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    yy_loc_V_address1_assign_proc : process(icmp_ln1698_reg_3319, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address1, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address1, ap_predicate_op557_call_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
            if ((ap_predicate_op557_call_state56 = ap_const_boolean_1)) then 
                yy_loc_V_address1 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_address1;
            elsif ((icmp_ln1698_reg_3319 = ap_const_lv1_0)) then 
                yy_loc_V_address1 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_address1;
            else 
                yy_loc_V_address1 <= "XXXXXXXXXXXXXXX";
            end if;
        else 
            yy_loc_V_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    yy_loc_V_ce0_assign_proc : process(ap_CS_fsm_state24, icmp_ln1698_reg_3319, ap_CS_fsm_state56, ap_CS_fsm_state30, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_ce0, grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_ce0, grp_ode_fpga_fu_1163_in_r_ce0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce0, grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_ce0, ap_predicate_op557_call_state56, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            yy_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_last_axi_write_yy_fu_1219_yy_loc_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            yy_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            yy_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            yy_loc_V_ce0 <= grp_ode_fpga_fu_1163_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            yy_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_axi_write_yy_fu_1147_yy_loc_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            yy_loc_V_ce0 <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_ce0;
        else 
            yy_loc_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yy_loc_V_ce1_assign_proc : process(icmp_ln1698_reg_3319, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce1, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce1, ap_predicate_op557_call_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
            if ((ap_predicate_op557_call_state56 = ap_const_boolean_1)) then 
                yy_loc_V_ce1 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_ce1;
            elsif ((icmp_ln1698_reg_3319 = ap_const_lv1_0)) then 
                yy_loc_V_ce1 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_ce1;
            else 
                yy_loc_V_ce1 <= ap_const_logic_0;
            end if;
        else 
            yy_loc_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yy_loc_V_d0_assign_proc : process(icmp_ln1698_reg_3319, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_d0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_d0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_d0, ap_predicate_op557_call_state56, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            yy_loc_V_d0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_d0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            yy_loc_V_d0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            yy_loc_V_d0 <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_d0;
        else 
            yy_loc_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    yy_loc_V_we0_assign_proc : process(icmp_ln1698_reg_3319, ap_CS_fsm_state56, grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_we0, grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_we0, grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_we0, ap_predicate_op557_call_state56, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) and (ap_predicate_op557_call_state56 = ap_const_boolean_1))) then 
            yy_loc_V_we0 <= grp_runge_kutta_45_Pipeline_update_2_fu_1210_yy_loc_V_we0;
        elsif (((icmp_ln1698_reg_3319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            yy_loc_V_we0 <= grp_runge_kutta_45_Pipeline_update_1_fu_1201_yy_loc_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            yy_loc_V_we0 <= grp_runge_kutta_45_Pipeline_VITIS_LOOP_119_1_fu_1139_yy_loc_V_we0;
        else 
            yy_loc_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln129_fu_2698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_tk_prev_phi_fu_874_p6),64));
    zext_ln137_fu_2243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_2235_p3),64));
    zext_ln140_fu_2270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_2262_p3),64));
    zext_ln162_fu_2398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_113_reg_834),64));
    zext_ln170_fu_2370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_814_reg_822),5));
    zext_ln180_fu_2421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n12_phi_fu_850_p4),64));
    zext_ln187_1_fu_2441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n12_reg_846),5));
    zext_ln187_2_fu_2426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n12_phi_fu_850_p4),4));
    zext_ln187_3_fu_2436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_fu_2430_p2),64));
    zext_ln187_4_fu_2451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_1_fu_2445_p2),64));
    zext_ln187_5_fu_2462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_2_fu_2456_p2),64));
    zext_ln187_6_fu_2483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln187_fu_2479_p1),64));
    zext_ln187_7_fu_2494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_3_fu_2488_p2),64));
    zext_ln187_8_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_4_fu_2505_p2),64));
    zext_ln187_fu_2467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n12_reg_846),6));
    zext_ln195_fu_2521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_211_phi_fu_862_p4),64));
    zext_ln201_1_fu_2542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_211_reg_858),5));
    zext_ln201_2_fu_2527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_211_phi_fu_862_p4),4));
    zext_ln201_3_fu_2537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_fu_2531_p2),64));
    zext_ln201_4_fu_2552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_1_fu_2546_p2),64));
    zext_ln201_5_fu_2563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_2_fu_2557_p2),64));
    zext_ln201_6_fu_2584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln201_fu_2580_p1),64));
    zext_ln201_7_fu_2595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_3_fu_2589_p2),64));
    zext_ln201_8_fu_2611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_4_fu_2606_p2),64));
    zext_ln201_fu_2568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_211_reg_858),6));
    zext_ln243_fu_2733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln8_fu_2725_p3),177));
    zext_ln254_1_fu_2871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_2862_p4),32));
    zext_ln254_fu_2843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_2835_p3),64));
    zext_ln501_1_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_1607_p4),12));
    zext_ln501_2_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_2_fu_1880_p4),12));
    zext_ln501_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1334_p4),12));
    zext_ln604_1_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_32_fu_1625_p3),54));
    zext_ln604_2_fu_1906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_34_fu_1898_p3),54));
    zext_ln604_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_30_fu_1352_p3),54));
    zext_ln621_1_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_1_fu_1711_p1),54));
    zext_ln621_2_fu_1988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_2_fu_1984_p1),54));
    zext_ln621_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_fu_1438_p1),54));
    zext_ln639_1_fu_1741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_1_fu_1711_p1),85));
    zext_ln639_2_fu_2014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_2_fu_1984_p1),85));
    zext_ln639_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln621_fu_1438_p1),85));
end behav;
