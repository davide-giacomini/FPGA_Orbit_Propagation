// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module runge_kutta_45_vel_der (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        i_read,
        mu_V_read,
        p_read3,
        p_read4,
        p_read5,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [84:0] p_read;
input  [84:0] p_read1;
input  [84:0] p_read2;
input  [1:0] i_read;
input  [84:0] mu_V_read;
input  [84:0] p_read3;
input  [84:0] p_read4;
input  [84:0] p_read5;
output  [84:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[84:0] ap_return;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [85:0] tmp_4_fu_173_p5;
reg   [85:0] tmp_4_reg_317;
wire    ap_CS_fsm_state3;
wire  signed [85:0] sext_ln859_fu_190_p1;
reg  signed [85:0] sext_ln859_reg_325;
wire    ap_CS_fsm_state5;
wire   [121:0] grp_division_fu_149_ap_return;
reg   [121:0] mu_over_r_squared_V_reg_330;
wire    ap_CS_fsm_state6;
wire   [176:0] zext_ln45_fu_206_p1;
reg   [176:0] zext_ln45_reg_335;
wire    ap_CS_fsm_state7;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_done;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_idle;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_ready;
wire   [85:0] grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out_ap_vld;
wire   [85:0] grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out_ap_vld;
wire   [85:0] grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out;
wire    grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out_ap_vld;
wire    grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start;
wire    grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_done;
wire    grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_idle;
wire    grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_ready;
wire   [176:0] grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out;
wire    grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out_ap_vld;
wire    grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start;
wire    grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_done;
wire    grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_idle;
wire    grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_ready;
wire   [88:0] grp_vel_der_Pipeline_sqrt_loop_fu_143_Q_V_2_out;
wire    grp_vel_der_Pipeline_sqrt_loop_fu_143_Q_V_2_out_ap_vld;
wire    grp_division_fu_149_ap_start;
wire    grp_division_fu_149_ap_done;
wire    grp_division_fu_149_ap_idle;
wire    grp_division_fu_149_ap_ready;
reg   [85:0] grp_division_fu_149_num_V_read;
reg   [176:0] grp_division_fu_149_den_V_read;
wire    op_V_multiply_fu_155_ap_ready;
wire   [176:0] op_V_multiply_fu_155_x_V_read;
wire   [176:0] op_V_multiply_fu_155_y_V_read;
wire   [176:0] op_V_multiply_fu_155_ap_return;
reg    grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg;
reg    grp_division_fu_149_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [143:0] shl_ln_fu_198_p3;
wire   [139:0] trunc_ln1454_fu_228_p1;
wire   [139:0] r_V_fu_232_p2;
reg   [84:0] ap_return_preg;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_block_state6_on_subcall_done;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg = 1'b0;
#0 grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg = 1'b0;
#0 grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg = 1'b0;
#0 grp_division_fu_149_ap_start_reg = 1'b0;
#0 ap_return_preg = 85'd0;
end

runge_kutta_45_vel_der_Pipeline_add_constant_loop grp_vel_der_Pipeline_add_constant_loop_fu_116(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start),
    .ap_done(grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_done),
    .ap_idle(grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_idle),
    .ap_ready(grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_ready),
    .p_read(p_read),
    .p_read1(p_read1),
    .p_read2(p_read2),
    .p_read3(p_read3),
    .p_read4(p_read4),
    .p_read5(p_read5),
    .r_in_V_2_03_out(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out),
    .r_in_V_2_03_out_ap_vld(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out_ap_vld),
    .r_in_V_1_02_out(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out),
    .r_in_V_1_02_out_ap_vld(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out_ap_vld),
    .r_in_V_0_01_out(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out),
    .r_in_V_0_01_out_ap_vld(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out_ap_vld)
);

runge_kutta_45_vel_der_Pipeline_sq_sum_loop grp_vel_der_Pipeline_sq_sum_loop_fu_135(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start),
    .ap_done(grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_done),
    .ap_idle(grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_idle),
    .ap_ready(grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_ready),
    .r_in_V_0_01_reload(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out),
    .r_in_V_1_02_reload(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out),
    .r_in_V_2_03_reload(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out),
    .p_Val2_3_out(grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out),
    .p_Val2_3_out_ap_vld(grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out_ap_vld)
);

runge_kutta_45_vel_der_Pipeline_sqrt_loop grp_vel_der_Pipeline_sqrt_loop_fu_143(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start),
    .ap_done(grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_done),
    .ap_idle(grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_idle),
    .ap_ready(grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_ready),
    .zext_ln449(grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out),
    .Q_V_2_out(grp_vel_der_Pipeline_sqrt_loop_fu_143_Q_V_2_out),
    .Q_V_2_out_ap_vld(grp_vel_der_Pipeline_sqrt_loop_fu_143_Q_V_2_out_ap_vld)
);

runge_kutta_45_division grp_division_fu_149(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_division_fu_149_ap_start),
    .ap_done(grp_division_fu_149_ap_done),
    .ap_idle(grp_division_fu_149_ap_idle),
    .ap_ready(grp_division_fu_149_ap_ready),
    .num_V_read(grp_division_fu_149_num_V_read),
    .den_V_read(grp_division_fu_149_den_V_read),
    .ap_return(grp_division_fu_149_ap_return)
);

runge_kutta_45_multiply op_V_multiply_fu_155(
    .ap_ready(op_V_multiply_fu_155_ap_ready),
    .x_V_read(op_V_multiply_fu_155_x_V_read),
    .y_V_read(op_V_multiply_fu_155_y_V_read),
    .ap_return(op_V_multiply_fu_155_ap_return)
);

runge_kutta_45_mux_32_86_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 86 ),
    .din1_WIDTH( 86 ),
    .din2_WIDTH( 86 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 86 ))
mux_32_86_1_1_U44(
    .din0(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_0_01_out),
    .din1(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_1_02_out),
    .din2(grp_vel_der_Pipeline_add_constant_loop_fu_116_r_in_V_2_03_out),
    .din3(i_read),
    .dout(tmp_4_fu_173_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 85'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (grp_division_fu_149_ap_done == 1'b1))) begin
            ap_return_preg <= {{r_V_fu_232_p2[139:55]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_division_fu_149_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_division_fu_149_ap_start_reg <= 1'b1;
        end else if ((grp_division_fu_149_ap_ready == 1'b1)) begin
            grp_division_fu_149_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg <= 1'b1;
        end else if ((grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_ready == 1'b1)) begin
            grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg <= 1'b1;
        end else if ((grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_ready == 1'b1)) begin
            grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg <= 1'b1;
        end else if ((grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_ready == 1'b1)) begin
            grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mu_over_r_squared_V_reg_330 <= grp_division_fu_149_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sext_ln859_reg_325 <= sext_ln859_fu_190_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_4_reg_317 <= tmp_4_fu_173_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        zext_ln45_reg_335[143 : 55] <= zext_ln45_fu_206_p1[143 : 55];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_on_subcall_done)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_division_fu_149_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state8) & (grp_division_fu_149_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_division_fu_149_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_division_fu_149_ap_done == 1'b1))) begin
        ap_return = {{r_V_fu_232_p2[139:55]}};
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_division_fu_149_den_V_read = zext_ln45_reg_335;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_division_fu_149_den_V_read = grp_vel_der_Pipeline_sq_sum_loop_fu_135_p_Val2_3_out;
    end else begin
        grp_division_fu_149_den_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_division_fu_149_num_V_read = tmp_4_reg_317;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_division_fu_149_num_V_read = sext_ln859_reg_325;
    end else begin
        grp_division_fu_149_num_V_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_division_fu_149_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state6_on_subcall_done = ((grp_division_fu_149_ap_done == 1'b0) | (grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_done == 1'b0));
end

assign grp_division_fu_149_ap_start = grp_division_fu_149_ap_start_reg;

assign grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start = grp_vel_der_Pipeline_add_constant_loop_fu_116_ap_start_reg;

assign grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start = grp_vel_der_Pipeline_sq_sum_loop_fu_135_ap_start_reg;

assign grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start = grp_vel_der_Pipeline_sqrt_loop_fu_143_ap_start_reg;

assign op_V_multiply_fu_155_x_V_read = {{mu_over_r_squared_V_reg_330}, {55'd0}};

assign op_V_multiply_fu_155_y_V_read = {{grp_division_fu_149_ap_return}, {55'd0}};

assign r_V_fu_232_p2 = (140'd0 - trunc_ln1454_fu_228_p1);

assign sext_ln859_fu_190_p1 = $signed(mu_V_read);

assign shl_ln_fu_198_p3 = {{grp_vel_der_Pipeline_sqrt_loop_fu_143_Q_V_2_out}, {55'd0}};

assign trunc_ln1454_fu_228_p1 = op_V_multiply_fu_155_ap_return[139:0];

assign zext_ln45_fu_206_p1 = shl_ln_fu_198_p3;

always @ (posedge ap_clk) begin
    zext_ln45_reg_335[54:0] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln45_reg_335[176:144] <= 33'b000000000000000000000000000000000;
end

endmodule //runge_kutta_45_vel_der
