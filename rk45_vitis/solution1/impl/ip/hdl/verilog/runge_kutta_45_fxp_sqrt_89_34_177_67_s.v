// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module runge_kutta_45_fxp_sqrt_89_34_177_67_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_val_V_read,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [176:0] in_val_V_read;
output  [88:0] ap_return;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln85_fu_105_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [88:0] Q_V_2_fu_56;
wire   [88:0] Q_V_1_fu_198_p3;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [177:0] p_Val2_s_fu_60;
wire   [177:0] X_V_fu_144_p2;
wire   [177:0] zext_ln449_fu_78_p1;
reg   [175:0] A_V_fu_64;
wire   [175:0] A_V_3_fu_222_p3;
reg   [6:0] i_04_fu_68;
wire   [6:0] i_13_fu_111_p2;
wire   [1:0] tmp2_fu_126_p4;
wire   [61:0] trunc_ln312_fu_150_p1;
wire   [63:0] i_op_assign_fu_154_p3;
wire   [177:0] p_Result_29_fu_136_p3;
wire   [177:0] zext_ln75_fu_162_p1;
wire   [177:0] T_V_fu_166_p2;
wire   [87:0] trunc_ln1027_fu_172_p1;
wire   [0:0] p_Result_s_fu_182_p3;
wire   [88:0] Q_V_3_fu_176_p2;
wire   [88:0] p_Result_30_fu_190_p3;
wire   [173:0] trunc_ln642_fu_206_p1;
wire   [175:0] tmp_s_fu_210_p3;
wire   [175:0] trunc_ln642_1_fu_218_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

runge_kutta_45_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            A_V_fu_64 <= 176'd0;
        end else if (((icmp_ln85_fu_105_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            A_V_fu_64 <= A_V_3_fu_222_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Q_V_2_fu_56 <= 89'd0;
        end else if (((icmp_ln85_fu_105_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            Q_V_2_fu_56 <= Q_V_1_fu_198_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_04_fu_68 <= 7'd0;
        end else if (((icmp_ln85_fu_105_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_04_fu_68 <= i_13_fu_111_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_60 <= zext_ln449_fu_78_p1;
        end else if (((icmp_ln85_fu_105_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_s_fu_60 <= X_V_fu_144_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_105_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_3_fu_222_p3 = ((p_Result_s_fu_182_p3[0:0] == 1'b1) ? tmp_s_fu_210_p3 : trunc_ln642_1_fu_218_p1);

assign Q_V_1_fu_198_p3 = ((p_Result_s_fu_182_p3[0:0] == 1'b1) ? Q_V_3_fu_176_p2 : p_Result_30_fu_190_p3);

assign Q_V_3_fu_176_p2 = Q_V_2_fu_56 << 89'd1;

assign T_V_fu_166_p2 = (p_Result_29_fu_136_p3 - zext_ln75_fu_162_p1);

assign X_V_fu_144_p2 = p_Val2_s_fu_60 << 178'd2;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_return = Q_V_2_fu_56;

assign i_13_fu_111_p2 = (i_04_fu_68 + 7'd1);

assign i_op_assign_fu_154_p3 = {{trunc_ln312_fu_150_p1}, {2'd1}};

assign icmp_ln85_fu_105_p2 = ((i_04_fu_68 == 7'd89) ? 1'b1 : 1'b0);

assign p_Result_29_fu_136_p3 = {{A_V_fu_64}, {tmp2_fu_126_p4}};

assign p_Result_30_fu_190_p3 = {{trunc_ln1027_fu_172_p1}, {1'd1}};

assign p_Result_s_fu_182_p3 = T_V_fu_166_p2[32'd177];

assign tmp2_fu_126_p4 = {{p_Val2_s_fu_60[177:176]}};

assign tmp_s_fu_210_p3 = {{trunc_ln642_fu_206_p1}, {tmp2_fu_126_p4}};

assign trunc_ln1027_fu_172_p1 = Q_V_2_fu_56[87:0];

assign trunc_ln312_fu_150_p1 = Q_V_2_fu_56[61:0];

assign trunc_ln642_1_fu_218_p1 = T_V_fu_166_p2[175:0];

assign trunc_ln642_fu_206_p1 = A_V_fu_64[173:0];

assign zext_ln449_fu_78_p1 = in_val_V_read;

assign zext_ln75_fu_162_p1 = i_op_assign_fu_154_p3;

endmodule //runge_kutta_45_fxp_sqrt_89_34_177_67_s
