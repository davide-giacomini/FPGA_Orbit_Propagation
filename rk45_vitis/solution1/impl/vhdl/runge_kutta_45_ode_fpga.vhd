-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity runge_kutta_45_ode_fpga is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
    out_offset : IN STD_LOGIC_VECTOR (2 downto 0);
    in_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
    in_offset : IN STD_LOGIC_VECTOR (11 downto 0);
    c_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_q0 : IN STD_LOGIC_VECTOR (84 downto 0);
    mu_V_read : IN STD_LOGIC_VECTOR (84 downto 0) );
end;


architecture behav of runge_kutta_45_ode_fpga is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_262_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_reg_687 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_74_fu_288_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_74_reg_693 : STD_LOGIC_VECTOR (5 downto 0);
    signal loop_index29_t_load_reg_699 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_76_fu_322_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_76_reg_711 : STD_LOGIC_VECTOR (1 downto 0);
    signal loop_index26_t_load_reg_741 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_77_fu_365_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_77_reg_748 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond105_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index23_t_load_reg_783 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal empty_79_fu_429_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_79_reg_790 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond94_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index20_t_load_reg_825 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal empty_80_fu_472_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_80_reg_832 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond83_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_reg_885 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_10_fu_523_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_10_reg_892 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln63_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_vel_der_fu_210_ap_start : STD_LOGIC;
    signal grp_vel_der_fu_210_ap_done : STD_LOGIC;
    signal grp_vel_der_fu_210_ap_idle : STD_LOGIC;
    signal grp_vel_der_fu_210_ap_ready : STD_LOGIC;
    signal grp_vel_der_fu_210_ap_return : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_ode_fpga_Pipeline_1_fu_222_ap_start : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_ap_done : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_ap_idle : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_ap_ready : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ode_fpga_Pipeline_1_fu_222_out_r_ce0 : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_out_r_we0 : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_1_fu_222_out_r_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_ode_fpga_Pipeline_2_fu_232_ap_start : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_ap_done : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_ap_idle : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_ap_ready : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ode_fpga_Pipeline_2_fu_232_out_r_ce0 : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_out_r_we0 : STD_LOGIC;
    signal grp_ode_fpga_Pipeline_2_fu_232_out_r_d0 : STD_LOGIC_VECTOR (84 downto 0);
    signal grp_vel_der_fu_210_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_cast_fu_311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index23_t_cast_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum2_cast_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index29_t_fu_58 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal r_in_V_2_fu_62 : STD_LOGIC_VECTOR (84 downto 0);
    signal r_in_V_2_1_fu_66 : STD_LOGIC_VECTOR (84 downto 0);
    signal r_in_V_2_2_fu_70 : STD_LOGIC_VECTOR (84 downto 0);
    signal loop_index26_t_fu_74 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond116_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_in_V_2_fu_78 : STD_LOGIC_VECTOR (84 downto 0);
    signal v_in_V_2_1_fu_82 : STD_LOGIC_VECTOR (84 downto 0);
    signal v_in_V_2_2_fu_86 : STD_LOGIC_VECTOR (84 downto 0);
    signal loop_index23_t_fu_90 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal cr_V_2_fu_94 : STD_LOGIC_VECTOR (84 downto 0);
    signal cr_V_2_1_fu_98 : STD_LOGIC_VECTOR (84 downto 0);
    signal cr_V_2_2_fu_102 : STD_LOGIC_VECTOR (84 downto 0);
    signal loop_index20_t_fu_106 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal cv_V_2_fu_110 : STD_LOGIC_VECTOR (84 downto 0);
    signal cv_V_2_1_fu_114 : STD_LOGIC_VECTOR (84 downto 0);
    signal cv_V_2_2_fu_118 : STD_LOGIC_VECTOR (84 downto 0);
    signal i_fu_122 : STD_LOGIC_VECTOR (1 downto 0);
    signal dr_dt_V_2_fu_126 : STD_LOGIC_VECTOR (84 downto 0);
    signal dr_dt_V_0_fu_605_p2 : STD_LOGIC_VECTOR (84 downto 0);
    signal dr_dt_V_2_1_fu_130 : STD_LOGIC_VECTOR (84 downto 0);
    signal dr_dt_V_2_2_fu_134 : STD_LOGIC_VECTOR (84 downto 0);
    signal dv_dt_V_2_fu_138 : STD_LOGIC_VECTOR (84 downto 0);
    signal dv_dt_V_2_1_fu_142 : STD_LOGIC_VECTOR (84 downto 0);
    signal dv_dt_V_2_2_fu_146 : STD_LOGIC_VECTOR (84 downto 0);
    signal tmp_14_fu_250_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_242_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_53_cast_fu_258_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_16_fu_276_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_268_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_55_cast_fu_284_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal loop_index29_t_cast5_fu_302_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_75_fu_306_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_index26_cast_fu_355_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ptr_sum_fu_371_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ptr_sum_cast6_fu_377_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_78_fu_381_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_index20_cast_fu_462_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sum2_fu_478_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_594_p5 : STD_LOGIC_VECTOR (84 downto 0);
    signal tmp_fu_583_p5 : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component runge_kutta_45_vel_der IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (84 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (84 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (84 downto 0);
        i_read : IN STD_LOGIC_VECTOR (1 downto 0);
        mu_V_read : IN STD_LOGIC_VECTOR (84 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (84 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (84 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (84 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_ode_fpga_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (5 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (84 downto 0);
        dr_dt_V_0_04 : IN STD_LOGIC_VECTOR (84 downto 0);
        dr_dt_V_1_05 : IN STD_LOGIC_VECTOR (84 downto 0);
        dr_dt_V_2_06 : IN STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_ode_fpga_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dv_dt_V_0_07 : IN STD_LOGIC_VECTOR (84 downto 0);
        dv_dt_V_1_08 : IN STD_LOGIC_VECTOR (84 downto 0);
        dv_dt_V_2_09 : IN STD_LOGIC_VECTOR (84 downto 0);
        empty : IN STD_LOGIC_VECTOR (5 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;


    component runge_kutta_45_mux_32_85_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (84 downto 0);
        din1 : IN STD_LOGIC_VECTOR (84 downto 0);
        din2 : IN STD_LOGIC_VECTOR (84 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (84 downto 0) );
    end component;



begin
    grp_vel_der_fu_210 : component runge_kutta_45_vel_der
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_vel_der_fu_210_ap_start,
        ap_done => grp_vel_der_fu_210_ap_done,
        ap_idle => grp_vel_der_fu_210_ap_idle,
        ap_ready => grp_vel_der_fu_210_ap_ready,
        p_read => r_in_V_2_fu_62,
        p_read1 => r_in_V_2_1_fu_66,
        p_read2 => r_in_V_2_2_fu_70,
        i_read => i_fu_122,
        mu_V_read => mu_V_read,
        p_read3 => cr_V_2_fu_94,
        p_read4 => cr_V_2_1_fu_98,
        p_read5 => cr_V_2_2_fu_102,
        ap_return => grp_vel_der_fu_210_ap_return);

    grp_ode_fpga_Pipeline_1_fu_222 : component runge_kutta_45_ode_fpga_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ode_fpga_Pipeline_1_fu_222_ap_start,
        ap_done => grp_ode_fpga_Pipeline_1_fu_222_ap_done,
        ap_idle => grp_ode_fpga_Pipeline_1_fu_222_ap_idle,
        ap_ready => grp_ode_fpga_Pipeline_1_fu_222_ap_ready,
        empty => empty_74_reg_693,
        out_r_address0 => grp_ode_fpga_Pipeline_1_fu_222_out_r_address0,
        out_r_ce0 => grp_ode_fpga_Pipeline_1_fu_222_out_r_ce0,
        out_r_we0 => grp_ode_fpga_Pipeline_1_fu_222_out_r_we0,
        out_r_d0 => grp_ode_fpga_Pipeline_1_fu_222_out_r_d0,
        dr_dt_V_0_04 => dr_dt_V_2_fu_126,
        dr_dt_V_1_05 => dr_dt_V_2_1_fu_130,
        dr_dt_V_2_06 => dr_dt_V_2_2_fu_134);

    grp_ode_fpga_Pipeline_2_fu_232 : component runge_kutta_45_ode_fpga_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ode_fpga_Pipeline_2_fu_232_ap_start,
        ap_done => grp_ode_fpga_Pipeline_2_fu_232_ap_done,
        ap_idle => grp_ode_fpga_Pipeline_2_fu_232_ap_idle,
        ap_ready => grp_ode_fpga_Pipeline_2_fu_232_ap_ready,
        dv_dt_V_0_07 => dv_dt_V_2_fu_138,
        dv_dt_V_1_08 => dv_dt_V_2_1_fu_142,
        dv_dt_V_2_09 => dv_dt_V_2_2_fu_146,
        empty => empty_74_reg_693,
        out_r_address0 => grp_ode_fpga_Pipeline_2_fu_232_out_r_address0,
        out_r_ce0 => grp_ode_fpga_Pipeline_2_fu_232_out_r_ce0,
        out_r_we0 => grp_ode_fpga_Pipeline_2_fu_232_out_r_we0,
        out_r_d0 => grp_ode_fpga_Pipeline_2_fu_232_out_r_d0);

    mux_32_85_1_1_U65 : component runge_kutta_45_mux_32_85_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 85,
        din1_WIDTH => 85,
        din2_WIDTH => 85,
        din3_WIDTH => 2,
        dout_WIDTH => 85)
    port map (
        din0 => v_in_V_2_fu_78,
        din1 => v_in_V_2_1_fu_82,
        din2 => v_in_V_2_2_fu_86,
        din3 => i_fu_122,
        dout => tmp_fu_583_p5);

    mux_32_85_1_1_U66 : component runge_kutta_45_mux_32_85_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 85,
        din1_WIDTH => 85,
        din2_WIDTH => 85,
        din3_WIDTH => 2,
        dout_WIDTH => 85)
    port map (
        din0 => cv_V_2_fu_110,
        din1 => cv_V_2_1_fu_114,
        din2 => cv_V_2_2_fu_118,
        din3 => i_fu_122,
        dout => tmp_5_fu_594_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln63_fu_517_p2 = ap_const_lv1_1))) then 
                    grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ode_fpga_Pipeline_1_fu_222_ap_ready = ap_const_logic_1)) then 
                    grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ode_fpga_Pipeline_2_fu_232_ap_ready = ap_const_logic_1)) then 
                    grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_vel_der_fu_210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_vel_der_fu_210_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln63_fu_517_p2 = ap_const_lv1_0))) then 
                    grp_vel_der_fu_210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_vel_der_fu_210_ap_ready = ap_const_logic_1)) then 
                    grp_vel_der_fu_210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond83_fu_466_p2 = ap_const_lv1_1))) then 
                i_fu_122 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_vel_der_fu_210_ap_done = ap_const_logic_1))) then 
                i_fu_122 <= i_10_reg_892;
            end if; 
        end if;
    end process;

    loop_index20_t_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond94_fu_423_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                loop_index20_t_fu_106 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                loop_index20_t_fu_106 <= empty_80_reg_832;
            end if; 
        end if;
    end process;

    loop_index23_t_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond105_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                loop_index23_t_fu_90 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                loop_index23_t_fu_90 <= empty_79_reg_790;
            end if; 
        end if;
    end process;

    loop_index26_t_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond116_fu_316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                loop_index26_t_fu_74 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                loop_index26_t_fu_74 <= empty_77_reg_748;
            end if; 
        end if;
    end process;

    loop_index29_t_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                loop_index29_t_fu_58 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                loop_index29_t_fu_58 <= empty_76_reg_711;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index23_t_load_reg_783 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                cr_V_2_1_fu_98 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((loop_index23_t_load_reg_783 = ap_const_lv2_1)) and not((loop_index23_t_load_reg_783 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                cr_V_2_2_fu_102 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index23_t_load_reg_783 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                cr_V_2_fu_94 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (loop_index20_t_load_reg_825 = ap_const_lv2_1))) then
                cv_V_2_1_fu_114 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((loop_index20_t_load_reg_825 = ap_const_lv2_1)) and not((loop_index20_t_load_reg_825 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                cv_V_2_2_fu_118 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (loop_index20_t_load_reg_825 = ap_const_lv2_0))) then
                cv_V_2_fu_110 <= c_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_vel_der_fu_210_ap_done = ap_const_logic_1) and (i_9_reg_885 = ap_const_lv2_1))) then
                dr_dt_V_2_1_fu_130 <= dr_dt_V_0_fu_605_p2;
                dv_dt_V_2_1_fu_142 <= grp_vel_der_fu_210_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_9_reg_885 = ap_const_lv2_1)) and not((i_9_reg_885 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state11) and (grp_vel_der_fu_210_ap_done = ap_const_logic_1))) then
                dr_dt_V_2_2_fu_134 <= dr_dt_V_0_fu_605_p2;
                dv_dt_V_2_2_fu_146 <= grp_vel_der_fu_210_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_vel_der_fu_210_ap_done = ap_const_logic_1) and (i_9_reg_885 = ap_const_lv2_0))) then
                dr_dt_V_2_fu_126 <= dr_dt_V_0_fu_605_p2;
                dv_dt_V_2_fu_138 <= grp_vel_der_fu_210_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    empty_74_reg_693(5 downto 1) <= empty_74_fu_288_p2(5 downto 1);
                    empty_reg_687(14 downto 1) <= empty_fu_262_p2(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_76_reg_711 <= empty_76_fu_322_p2;
                loop_index29_t_load_reg_699 <= loop_index29_t_fu_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                empty_77_reg_748 <= empty_77_fu_365_p2;
                loop_index26_t_load_reg_741 <= loop_index26_t_fu_74;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                empty_79_reg_790 <= empty_79_fu_429_p2;
                loop_index23_t_load_reg_783 <= loop_index23_t_fu_90;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                empty_80_reg_832 <= empty_80_fu_472_p2;
                loop_index20_t_load_reg_825 <= loop_index20_t_fu_106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                i_10_reg_892 <= i_10_fu_523_p2;
                i_9_reg_885 <= i_fu_122;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index29_t_load_reg_699 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_in_V_2_1_fu_66 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((loop_index29_t_load_reg_699 = ap_const_lv2_1)) and not((loop_index29_t_load_reg_699 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_in_V_2_2_fu_70 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index29_t_load_reg_699 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_in_V_2_fu_62 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index26_t_load_reg_741 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                v_in_V_2_1_fu_82 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((loop_index26_t_load_reg_741 = ap_const_lv2_1)) and not((loop_index26_t_load_reg_741 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                v_in_V_2_2_fu_86 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_index26_t_load_reg_741 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                v_in_V_2_fu_78 <= in_r_q0;
            end if;
        end if;
    end process;
    empty_reg_687(0) <= '0';
    empty_74_reg_693(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, exitcond105_fu_359_p2, ap_CS_fsm_state6, exitcond94_fu_423_p2, ap_CS_fsm_state8, exitcond83_fu_466_p2, ap_CS_fsm_state10, icmp_ln63_fu_517_p2, grp_vel_der_fu_210_ap_done, grp_ode_fpga_Pipeline_1_fu_222_ap_done, grp_ode_fpga_Pipeline_2_fu_232_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state14, exitcond116_fu_316_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond116_fu_316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((exitcond105_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((exitcond94_fu_423_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond83_fu_466_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln63_fu_517_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_vel_der_fu_210_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_ode_fpga_Pipeline_1_fu_222_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_ode_fpga_Pipeline_2_fu_232_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ptr_sum_cast6_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ptr_sum_fu_371_p2),15));
    add_ptr_sum_fu_371_p2 <= std_logic_vector(unsigned(loop_index26_cast_fu_355_p1) + unsigned(ap_const_lv3_3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_vel_der_fu_210_ap_done)
    begin
        if ((grp_vel_der_fu_210_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(grp_ode_fpga_Pipeline_1_fu_222_ap_done)
    begin
        if ((grp_ode_fpga_Pipeline_1_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_ode_fpga_Pipeline_2_fu_232_ap_done)
    begin
        if ((grp_ode_fpga_Pipeline_2_fu_232_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ode_fpga_Pipeline_2_fu_232_ap_done, ap_CS_fsm_state14)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_ode_fpga_Pipeline_2_fu_232_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_ode_fpga_Pipeline_2_fu_232_ap_done, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_ode_fpga_Pipeline_2_fu_232_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    c_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, loop_index23_t_cast_fu_418_p1, sum2_cast_fu_484_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c_address0 <= sum2_cast_fu_484_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c_address0 <= loop_index23_t_cast_fu_418_p1(3 - 1 downto 0);
        else 
            c_address0 <= "XXX";
        end if; 
    end process;


    c_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            c_ce0 <= ap_const_logic_1;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dr_dt_V_0_fu_605_p2 <= std_logic_vector(unsigned(tmp_5_fu_594_p5) + unsigned(tmp_fu_583_p5));
    empty_74_fu_288_p2 <= std_logic_vector(unsigned(tmp_15_fu_268_p3) - unsigned(tmp_55_cast_fu_284_p1));
    empty_75_fu_306_p2 <= std_logic_vector(unsigned(empty_reg_687) + unsigned(loop_index29_t_cast5_fu_302_p1));
    empty_76_fu_322_p2 <= std_logic_vector(unsigned(loop_index29_t_fu_58) + unsigned(ap_const_lv2_1));
    empty_77_fu_365_p2 <= std_logic_vector(unsigned(loop_index26_t_fu_74) + unsigned(ap_const_lv2_1));
    empty_78_fu_381_p2 <= std_logic_vector(unsigned(empty_reg_687) + unsigned(add_ptr_sum_cast6_fu_377_p1));
    empty_79_fu_429_p2 <= std_logic_vector(unsigned(loop_index23_t_fu_90) + unsigned(ap_const_lv2_1));
    empty_80_fu_472_p2 <= std_logic_vector(unsigned(loop_index20_t_fu_106) + unsigned(ap_const_lv2_1));
    empty_fu_262_p2 <= std_logic_vector(unsigned(tmp_s_fu_242_p3) - unsigned(tmp_53_cast_fu_258_p1));
    exitcond105_fu_359_p2 <= "1" when (loop_index26_t_fu_74 = ap_const_lv2_3) else "0";
    exitcond116_fu_316_p2 <= "1" when (loop_index29_t_fu_58 = ap_const_lv2_3) else "0";
    exitcond83_fu_466_p2 <= "1" when (loop_index20_t_fu_106 = ap_const_lv2_3) else "0";
    exitcond94_fu_423_p2 <= "1" when (loop_index23_t_fu_90 = ap_const_lv2_3) else "0";
    grp_ode_fpga_Pipeline_1_fu_222_ap_start <= grp_ode_fpga_Pipeline_1_fu_222_ap_start_reg;
    grp_ode_fpga_Pipeline_2_fu_232_ap_start <= grp_ode_fpga_Pipeline_2_fu_232_ap_start_reg;
    grp_vel_der_fu_210_ap_start <= grp_vel_der_fu_210_ap_start_reg;
    i_10_fu_523_p2 <= std_logic_vector(unsigned(i_fu_122) + unsigned(ap_const_lv2_1));
    icmp_ln63_fu_517_p2 <= "1" when (i_fu_122 = ap_const_lv2_3) else "0";

    in_r_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, p_cast_fu_311_p1, p_cast7_fu_386_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_r_address0 <= p_cast7_fu_386_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_r_address0 <= p_cast_fu_311_p1(15 - 1 downto 0);
        else 
            in_r_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_r_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    loop_index20_cast_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index20_t_fu_106),3));
    loop_index23_t_cast_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index23_t_fu_90),64));
    loop_index26_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index26_t_fu_74),3));
    loop_index29_t_cast5_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index29_t_fu_58),15));

    out_r_address0_assign_proc : process(grp_ode_fpga_Pipeline_1_fu_222_out_r_address0, grp_ode_fpga_Pipeline_2_fu_232_out_r_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_r_address0 <= grp_ode_fpga_Pipeline_2_fu_232_out_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_r_address0 <= grp_ode_fpga_Pipeline_1_fu_222_out_r_address0;
        else 
            out_r_address0 <= "XXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(grp_ode_fpga_Pipeline_1_fu_222_out_r_ce0, grp_ode_fpga_Pipeline_2_fu_232_out_r_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_r_ce0 <= grp_ode_fpga_Pipeline_2_fu_232_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_r_ce0 <= grp_ode_fpga_Pipeline_1_fu_222_out_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(grp_ode_fpga_Pipeline_1_fu_222_out_r_d0, grp_ode_fpga_Pipeline_2_fu_232_out_r_d0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_r_d0 <= grp_ode_fpga_Pipeline_2_fu_232_out_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_r_d0 <= grp_ode_fpga_Pipeline_1_fu_222_out_r_d0;
        else 
            out_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(grp_ode_fpga_Pipeline_1_fu_222_out_r_we0, grp_ode_fpga_Pipeline_2_fu_232_out_r_we0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_r_we0 <= grp_ode_fpga_Pipeline_2_fu_232_out_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_r_we0 <= grp_ode_fpga_Pipeline_1_fu_222_out_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast7_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_78_fu_381_p2),64));
    p_cast_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_75_fu_306_p2),64));
    sum2_cast_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum2_fu_478_p2),64));
    sum2_fu_478_p2 <= std_logic_vector(unsigned(loop_index20_cast_fu_462_p1) + unsigned(ap_const_lv3_3));
    tmp_14_fu_250_p3 <= (in_offset & ap_const_lv1_0);
    tmp_15_fu_268_p3 <= (out_offset & ap_const_lv3_0);
    tmp_16_fu_276_p3 <= (out_offset & ap_const_lv1_0);
    tmp_53_cast_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_250_p3),15));
    tmp_55_cast_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_276_p3),6));
    tmp_s_fu_242_p3 <= (in_offset & ap_const_lv3_0);
end behav;
