

================================================================
== Vitis HLS Report for 'vel_der'
================================================================
* Date:           Sat Jun 24 07:23:01 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        rk45_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+-----------+------------+
    |  Clock |  Target | Estimated | Uncertainty|
    +--------+---------+-----------+------------+
    |ap_clk  |  0.10 us|  36.128 ns|    27.00 ns|
    +--------+---------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |      415|      415|  41.500 us|  41.500 us|  415|  415|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.82>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_7 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read5"   --->   Operation 9 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_8 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read4"   --->   Operation 10 'read' 'p_read_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read_9 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read3"   --->   Operation 11 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read28 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read2"   --->   Operation 12 'read' 'p_read28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read17 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read1"   --->   Operation 13 'read' 'p_read17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read_10 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %p_read"   --->   Operation 14 'read' 'p_read_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%Q_V_2_loc = alloca i64 1"   --->   Operation 15 'alloca' 'Q_V_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%squared_sum_V_loc = alloca i64 1"   --->   Operation 16 'alloca' 'squared_sum_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%r_in_V_0_01_loc = alloca i64 1"   --->   Operation 17 'alloca' 'r_in_V_0_01_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%r_in_V_1_02_loc = alloca i64 1"   --->   Operation 18 'alloca' 'r_in_V_1_02_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%r_in_V_2_03_loc = alloca i64 1"   --->   Operation 19 'alloca' 'r_in_V_2_03_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (5.82ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_add_constant_loop, i85 %p_read_10, i85 %p_read17, i85 %p_read28, i85 %p_read_9, i85 %p_read_8, i85 %p_read_7, i86 %r_in_V_2_03_loc, i86 %r_in_V_1_02_loc, i86 %r_in_V_0_01_loc"   --->   Operation 20 'call' 'call_ln0' <Predicate = true> <Delay = 5.82> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.54>
ST_2 : Operation 21 [1/2] (2.54ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_add_constant_loop, i85 %p_read_10, i85 %p_read17, i85 %p_read28, i85 %p_read_9, i85 %p_read_8, i85 %p_read_7, i86 %r_in_V_2_03_loc, i86 %r_in_V_1_02_loc, i86 %r_in_V_0_01_loc"   --->   Operation 21 'call' 'call_ln0' <Predicate = true> <Delay = 2.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.70>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%i_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %i_read"   --->   Operation 22 'read' 'i_read_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%r_in_V_2_03_loc_load = load i86 %r_in_V_2_03_loc"   --->   Operation 23 'load' 'r_in_V_2_03_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%r_in_V_1_02_loc_load = load i86 %r_in_V_1_02_loc"   --->   Operation 24 'load' 'r_in_V_1_02_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%r_in_V_0_01_loc_load = load i86 %r_in_V_0_01_loc"   --->   Operation 25 'load' 'r_in_V_0_01_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [2/2] (0.00ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sq_sum_loop, i86 %r_in_V_0_01_loc_load, i86 %r_in_V_1_02_loc_load, i86 %r_in_V_2_03_loc_load, i173 %squared_sum_V_loc"   --->   Operation 26 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i32 %i_read_1" [src/runge_kutta_45.cpp:77]   --->   Operation 27 'trunc' 'trunc_ln77' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.70ns)   --->   "%tmp_4 = mux i86 @_ssdm_op_Mux.ap_auto.3i86.i2, i86 %r_in_V_0_01_loc_load, i86 %r_in_V_1_02_loc_load, i86 %r_in_V_2_03_loc_load, i2 %trunc_ln77" [src/runge_kutta_45.cpp:77]   --->   Operation 28 'mux' 'tmp_4' <Predicate = true> <Delay = 1.70> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.95>
ST_4 : Operation 29 [1/2] (0.95ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sq_sum_loop, i86 %r_in_V_0_01_loc_load, i86 %r_in_V_1_02_loc_load, i86 %r_in_V_2_03_loc_load, i173 %squared_sum_V_loc"   --->   Operation 29 'call' 'call_ln0' <Predicate = true> <Delay = 0.95> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.07>
ST_5 : Operation 30 [1/1] (0.00ns)   --->   "%mu_V_read_1 = read i85 @_ssdm_op_Read.ap_auto.i85, i85 %mu_V_read"   --->   Operation 30 'read' 'mu_V_read_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%squared_sum_V_loc_load = load i173 %squared_sum_V_loc"   --->   Operation 31 'load' 'squared_sum_V_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [1/1] (0.00ns)   --->   "%sext_ln67 = sext i173 %squared_sum_V_loc_load" [src/runge_kutta_45.cpp:67]   --->   Operation 32 'sext' 'sext_ln67' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i87 @_ssdm_op_PartSelect.i87.i173.i32.i32, i173 %squared_sum_V_loc_load, i32 55, i32 141"   --->   Operation 33 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%r_V_2 = bitconcatenate i88 @_ssdm_op_BitConcatenate.i88.i87.i1, i87 %tmp_1, i1 0"   --->   Operation 34 'bitconcatenate' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [2/2] (1.58ns)   --->   "%call_ln1715 = call void @vel_der_Pipeline_sqrt_loop, i88 %r_V_2, i44 %Q_V_2_loc"   --->   Operation 35 'call' 'call_ln1715' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln859 = sext i85 %mu_V_read_1"   --->   Operation 36 'sext' 'sext_ln859' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [2/2] (5.07ns)   --->   "%mu_over_r_squared_V = call i196 @division, i86 %sext_ln859, i174 %sext_ln67" [src/runge_kutta_45.cpp:76]   --->   Operation 37 'call' 'mu_over_r_squared_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 5.07>
ST_6 : Operation 38 [1/2] (1.42ns)   --->   "%call_ln1715 = call void @vel_der_Pipeline_sqrt_loop, i88 %r_V_2, i44 %Q_V_2_loc"   --->   Operation 38 'call' 'call_ln1715' <Predicate = true> <Delay = 1.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 39 [1/2] (5.07ns)   --->   "%mu_over_r_squared_V = call i196 @division, i86 %sext_ln859, i174 %sext_ln67" [src/runge_kutta_45.cpp:76]   --->   Operation 39 'call' 'mu_over_r_squared_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln1319 = trunc i196 %mu_over_r_squared_V"   --->   Operation 40 'trunc' 'trunc_ln1319' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 5.07>
ST_7 : Operation 41 [1/1] (0.00ns)   --->   "%Q_V_2_loc_load = load i44 %Q_V_2_loc"   --->   Operation 41 'load' 'Q_V_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 42 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i126 @_ssdm_op_BitConcatenate.i126.i44.i82, i44 %Q_V_2_loc_load, i82 0"   --->   Operation 42 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i126 %shl_ln" [src/runge_kutta_45.cpp:77]   --->   Operation 43 'zext' 'zext_ln77' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 44 [2/2] (5.07ns)   --->   "%versor_r_i_V = call i196 @division, i86 %tmp_4, i174 %zext_ln77" [src/runge_kutta_45.cpp:77]   --->   Operation 44 'call' 'versor_r_i_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 36.1>
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%specresourcelimit_ln58 = specresourcelimit void @_ssdm_op_SpecResourceLimit, i64 1, void @empty_10, void @empty_10, void @function, void @empty_10" [src/runge_kutta_45.cpp:58]   --->   Operation 45 'specresourcelimit' 'specresourcelimit_ln58' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 46 [1/2] (5.07ns)   --->   "%versor_r_i_V = call i196 @division, i86 %tmp_4, i174 %zext_ln77" [src/runge_kutta_45.cpp:77]   --->   Operation 46 'call' 'versor_r_i_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln1319_1 = trunc i196 %versor_r_i_V"   --->   Operation 47 'trunc' 'trunc_ln1319_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 48 [1/1] (25.3ns)   --->   "%mul_ln1319 = mul i140 %trunc_ln1319, i140 %trunc_ln1319_1"   --->   Operation 48 'mul' 'mul_ln1319' <Predicate = true> <Delay = 25.3> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 25.3> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/1] (5.70ns)   --->   "%r_V = sub i140 0, i140 %mul_ln1319"   --->   Operation 49 'sub' 'r_V' <Predicate = true> <Delay = 5.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%dv_dt_V_write_assign = partselect i85 @_ssdm_op_PartSelect.i85.i140.i32.i32, i140 %r_V, i32 55, i32 139"   --->   Operation 50 'partselect' 'dv_dt_V_write_assign' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%ret_ln80 = ret i85 %dv_dt_V_write_assign" [src/runge_kutta_45.cpp:80]   --->   Operation 51 'ret' 'ret_ln80' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 100ns, clock uncertainty: 27ns.

 <State 1>: 5.83ns
The critical path consists of the following:
	wire read operation ('c.V[2]') on port 'p_read5' [9]  (0 ns)
	'call' operation ('call_ln0') to 'vel_der_Pipeline_add_constant_loop' [23]  (5.83 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'vel_der_Pipeline_add_constant_loop' [23]  (2.55 ns)

 <State 3>: 1.71ns
The critical path consists of the following:
	wire read operation ('i') on port 'i_read' [13]  (0 ns)
	'mux' operation ('tmp_4', src/runge_kutta_45.cpp:77) [37]  (1.71 ns)

 <State 4>: 0.959ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'vel_der_Pipeline_sq_sum_loop' [27]  (0.959 ns)

 <State 5>: 5.07ns
The critical path consists of the following:
	wire read operation ('mu.V') on port 'mu_V_read' [12]  (0 ns)
	'call' operation ('mu_over_r_squared.V', src/runge_kutta_45.cpp:76) to 'division' [35]  (5.07 ns)

 <State 6>: 5.07ns
The critical path consists of the following:
	'call' operation ('mu_over_r_squared.V', src/runge_kutta_45.cpp:76) to 'division' [35]  (5.07 ns)

 <State 7>: 5.07ns
The critical path consists of the following:
	'load' operation ('Q_V_2_loc_load') on local variable 'Q_V_2_loc' [33]  (0 ns)
	'call' operation ('versor_r_i.V', src/runge_kutta_45.cpp:77) to 'division' [40]  (5.07 ns)

 <State 8>: 36.1ns
The critical path consists of the following:
	'call' operation ('versor_r_i.V', src/runge_kutta_45.cpp:77) to 'division' [40]  (5.07 ns)
	'mul' operation ('mul_ln1319') [43]  (25.4 ns)
	'sub' operation ('r.V') [44]  (5.7 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
