

================================================================
== Vitis HLS Report for 'vel_der'
================================================================
* Date:           Tue Jun 13 00:34:34 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        rk45_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  50.00 ns|  26.581 ns|    13.50 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |      464|      464|  23.200 us|  23.200 us|  464|  464|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.25>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_7 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read5"   --->   Operation 10 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read_8 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read4"   --->   Operation 11 'read' 'p_read_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read_9 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read3"   --->   Operation 12 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read28 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read2"   --->   Operation 13 'read' 'p_read28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read17 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read1"   --->   Operation 14 'read' 'p_read17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read_10 = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %p_read"   --->   Operation 15 'read' 'p_read_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%Q_V_2_loc = alloca i64 1"   --->   Operation 16 'alloca' 'Q_V_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%X_V_4_loc = alloca i64 1"   --->   Operation 17 'alloca' 'X_V_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%r_in_V_0_01_loc = alloca i64 1"   --->   Operation 18 'alloca' 'r_in_V_0_01_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%r_in_V_1_02_loc = alloca i64 1"   --->   Operation 19 'alloca' 'r_in_V_1_02_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%r_in_V_2_03_loc = alloca i64 1"   --->   Operation 20 'alloca' 'r_in_V_2_03_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [2/2] (6.25ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_VITIS_LOOP_70_1, i100 %p_read_10, i100 %p_read17, i100 %p_read28, i100 %p_read_9, i100 %p_read_8, i100 %p_read_7, i100 %r_in_V_2_03_loc, i100 %r_in_V_1_02_loc, i100 %r_in_V_0_01_loc"   --->   Operation 21 'call' 'call_ln0' <Predicate = true> <Delay = 6.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.54>
ST_2 : Operation 22 [1/2] (2.54ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_VITIS_LOOP_70_1, i100 %p_read_10, i100 %p_read17, i100 %p_read28, i100 %p_read_9, i100 %p_read_8, i100 %p_read_7, i100 %r_in_V_2_03_loc, i100 %r_in_V_1_02_loc, i100 %r_in_V_0_01_loc"   --->   Operation 22 'call' 'call_ln0' <Predicate = true> <Delay = 2.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.70>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%i_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %i"   --->   Operation 23 'read' 'i_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%r_in_V_2_03_loc_load = load i100 %r_in_V_2_03_loc"   --->   Operation 24 'load' 'r_in_V_2_03_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%r_in_V_1_02_loc_load = load i100 %r_in_V_1_02_loc"   --->   Operation 25 'load' 'r_in_V_1_02_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%r_in_V_0_01_loc_load = load i100 %r_in_V_0_01_loc"   --->   Operation 26 'load' 'r_in_V_0_01_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [2/2] (0.00ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sq_sum_loop, i100 %r_in_V_0_01_loc_load, i100 %r_in_V_1_02_loc_load, i100 %r_in_V_2_03_loc_load, i201 %X_V_4_loc"   --->   Operation 27 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 28 [1/1] (1.70ns)   --->   "%tmp_4 = mux i100 @_ssdm_op_Mux.ap_auto.3i100.i2, i100 %r_in_V_0_01_loc_load, i100 %r_in_V_1_02_loc_load, i100 %r_in_V_2_03_loc_load, i2 %i_read" [src/runge_kutta_45.cpp:84]   --->   Operation 28 'mux' 'tmp_4' <Predicate = true> <Delay = 1.70> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.95>
ST_4 : Operation 29 [1/2] (0.95ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sq_sum_loop, i100 %r_in_V_0_01_loc_load, i100 %r_in_V_1_02_loc_load, i100 %r_in_V_2_03_loc_load, i201 %X_V_4_loc"   --->   Operation 29 'call' 'call_ln0' <Predicate = true> <Delay = 0.95> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.07>
ST_5 : Operation 30 [1/1] (0.00ns)   --->   "%mu_read = read i100 @_ssdm_op_Read.ap_auto.i100, i100 %mu"   --->   Operation 30 'read' 'mu_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%X_V_4_loc_load = load i201 %X_V_4_loc"   --->   Operation 31 'load' 'X_V_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [2/2] (1.58ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sqrt_loop, i201 %X_V_4_loc_load, i101 %Q_V_2_loc"   --->   Operation 32 'call' 'call_ln0' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 33 [2/2] (5.07ns)   --->   "%mu_over_r_squared_V = call i160 @division, i100 %mu_read, i201 %X_V_4_loc_load" [src/runge_kutta_45.cpp:83]   --->   Operation 33 'call' 'mu_over_r_squared_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 5.07>
ST_6 : Operation 34 [1/2] (1.48ns)   --->   "%call_ln0 = call void @vel_der_Pipeline_sqrt_loop, i201 %X_V_4_loc_load, i101 %Q_V_2_loc"   --->   Operation 34 'call' 'call_ln0' <Predicate = true> <Delay = 1.48> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 35 [1/2] (5.07ns)   --->   "%mu_over_r_squared_V = call i160 @division, i100 %mu_read, i201 %X_V_4_loc_load" [src/runge_kutta_45.cpp:83]   --->   Operation 35 'call' 'mu_over_r_squared_V' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 5.07>
ST_7 : Operation 36 [1/1] (0.00ns)   --->   "%Q_V_2_loc_load = load i101 %Q_V_2_loc"   --->   Operation 36 'load' 'Q_V_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 37 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i161 @_ssdm_op_BitConcatenate.i161.i101.i60, i101 %Q_V_2_loc_load, i60 0"   --->   Operation 37 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i161 %shl_ln" [src/runge_kutta_45.cpp:84]   --->   Operation 38 'zext' 'zext_ln84' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 39 [2/2] (5.07ns)   --->   "%versor_r_i = call i160 @division, i100 %tmp_4, i201 %zext_ln84"   --->   Operation 39 'call' 'versor_r_i' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 16.6>
ST_8 : Operation 40 [1/2] (5.07ns)   --->   "%versor_r_i = call i160 @division, i100 %tmp_4, i201 %zext_ln84"   --->   Operation 40 'call' 'versor_r_i' <Predicate = true> <Delay = 5.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 41 [1/1] (6.29ns)   --->   "%r_V_2 = sub i160 0, i160 %mu_over_r_squared_V"   --->   Operation 41 'sub' 'r_V_2' <Predicate = true> <Delay = 6.29> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 6.29> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 42 [2/2] (10.3ns)   --->   "%r_V_3 = mul i160 %versor_r_i, i160 %r_V_2"   --->   Operation 42 'mul' 'r_V_3' <Predicate = true> <Delay = 10.3> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 10.3>
ST_9 : Operation 43 [1/2] (10.3ns)   --->   "%r_V_3 = mul i160 %versor_r_i, i160 %r_V_2"   --->   Operation 43 'mul' 'r_V_3' <Predicate = true> <Delay = 10.3> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%this_V_write_assign = partselect i100 @_ssdm_op_PartSelect.i100.i160.i32.i32, i160 %r_V_3, i32 60, i32 159"   --->   Operation 44 'partselect' 'this_V_write_assign' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (0.00ns)   --->   "%ret_ln87 = ret i100 %this_V_write_assign" [src/runge_kutta_45.cpp:87]   --->   Operation 45 'ret' 'ret_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 50ns, clock uncertainty: 13.5ns.

 <State 1>: 6.26ns
The critical path consists of the following:
	wire read operation ('c.V[2]') on port 'p_read5' [9]  (0 ns)
	'call' operation ('call_ln0') to 'vel_der_Pipeline_VITIS_LOOP_70_1' [22]  (6.26 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'vel_der_Pipeline_VITIS_LOOP_70_1' [22]  (2.55 ns)

 <State 3>: 1.71ns
The critical path consists of the following:
	wire read operation ('i_read') on port 'i' [13]  (0 ns)
	'mux' operation ('tmp_4', src/runge_kutta_45.cpp:84) [31]  (1.71 ns)

 <State 4>: 0.959ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'vel_der_Pipeline_sq_sum_loop' [26]  (0.959 ns)

 <State 5>: 5.07ns
The critical path consists of the following:
	wire read operation ('mu_read') on port 'mu' [12]  (0 ns)
	'call' operation ('mu_over_r_squared.V', src/runge_kutta_45.cpp:83) to 'division' [30]  (5.07 ns)

 <State 6>: 5.07ns
The critical path consists of the following:
	'call' operation ('mu_over_r_squared.V', src/runge_kutta_45.cpp:83) to 'division' [30]  (5.07 ns)

 <State 7>: 5.07ns
The critical path consists of the following:
	'load' operation ('Q_V_2_loc_load') on local variable 'Q_V_2_loc' [29]  (0 ns)
	'call' operation ('versor_r_i') to 'division' [34]  (5.07 ns)

 <State 8>: 16.6ns
The critical path consists of the following:
	'sub' operation ('r.V') [35]  (6.29 ns)
	'mul' operation ('r.V') [36]  (10.3 ns)

 <State 9>: 10.3ns
The critical path consists of the following:
	'mul' operation ('r.V') [36]  (10.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
