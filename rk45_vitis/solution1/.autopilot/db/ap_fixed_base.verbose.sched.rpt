

================================================================
== Vitis HLS Report for 'ap_fixed_base'
================================================================
* Date:           Mon May 22 17:32:26 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        rk45_vitis
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  50.00 ns|  17.470 ns|    13.50 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 17.4>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%d_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %d"   --->   Operation 2 'read' 'd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%ireg = bitcast i64 %d_read"   --->   Operation 3 'bitcast' 'ireg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%trunc_ln590 = trunc i64 %ireg"   --->   Operation 4 'trunc' 'trunc_ln590' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 5 'bitselect' 'p_Result_s' <Predicate = (or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%exp_tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %ireg, i32 52, i32 62"   --->   Operation 6 'partselect' 'exp_tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%zext_ln501 = zext i11 %exp_tmp"   --->   Operation 7 'zext' 'zext_ln501' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%trunc_ln600 = trunc i64 %ireg"   --->   Operation 8 'trunc' 'trunc_ln600' <Predicate = (or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_Result_36 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln600"   --->   Operation 9 'bitconcatenate' 'p_Result_36' <Predicate = (or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln604 = zext i53 %p_Result_36"   --->   Operation 10 'zext' 'zext_ln604' <Predicate = (or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.23ns)   --->   "%man_V_11 = sub i54 0, i54 %zext_ln604"   --->   Operation 11 'sub' 'man_V_11' <Predicate = (p_Result_s & or_ln638_8)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.94ns)   --->   "%man_V_12 = select i1 %p_Result_s, i54 %man_V_11, i54 %zext_ln604"   --->   Operation 12 'select' 'man_V_12' <Predicate = (or_ln638_8)> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (2.78ns)   --->   "%icmp_ln606 = icmp_eq  i63 %trunc_ln590, i63 0"   --->   Operation 13 'icmp' 'icmp_ln606' <Predicate = true> <Delay = 2.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, i12 %zext_ln501"   --->   Operation 14 'sub' 'F2' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (1.99ns)   --->   "%icmp_ln616 = icmp_sgt  i12 %F2, i12 60"   --->   Operation 15 'icmp' 'icmp_ln616' <Predicate = true> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.54ns)   --->   "%add_ln616 = add i12 %F2, i12 4036"   --->   Operation 16 'add' 'add_ln616' <Predicate = (icmp_ln616)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.54ns)   --->   "%sub_ln616 = sub i12 60, i12 %F2"   --->   Operation 17 'sub' 'sub_ln616' <Predicate = (!icmp_ln616)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln616, i12 %add_ln616, i12 %sub_ln616"   --->   Operation 18 'select' 'sh_amt' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.99ns)   --->   "%icmp_ln617 = icmp_eq  i12 %F2, i12 60"   --->   Operation 19 'icmp' 'icmp_ln617' <Predicate = true> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_5)   --->   "%sext_ln618 = sext i54 %man_V_12"   --->   Operation 20 'sext' 'sext_ln618' <Predicate = (!or_ln638 & or_ln638_6 & or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.99ns)   --->   "%icmp_ln620 = icmp_ult  i12 %sh_amt, i12 54"   --->   Operation 21 'icmp' 'icmp_ln620' <Predicate = true> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.99ns)   --->   "%icmp_ln638 = icmp_ult  i12 %sh_amt, i12 80"   --->   Operation 22 'icmp' 'icmp_ln638' <Predicate = true> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%sext_ln621 = sext i12 %sh_amt"   --->   Operation 23 'sext' 'sext_ln621' <Predicate = (or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_4)   --->   "%zext_ln621 = zext i32 %sext_ln621"   --->   Operation 24 'zext' 'zext_ln621' <Predicate = (and_ln620_6 & !or_ln638_6 & or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_4)   --->   "%ashr_ln621 = ashr i54 %man_V_12, i54 %zext_ln621"   --->   Operation 25 'ashr' 'ashr_ln621' <Predicate = (and_ln620_6 & !or_ln638_6 & or_ln638_8)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_8)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 26 'bitselect' 'tmp' <Predicate = (!or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_8)   --->   "%select_ln623 = select i1 %tmp, i80 1208925819614629174706175, i80 0"   --->   Operation 27 'select' 'select_ln623' <Predicate = (!or_ln638_8)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_5)   --->   "%zext_ln639 = zext i32 %sext_ln621"   --->   Operation 28 'zext' 'zext_ln639' <Predicate = (!or_ln638 & or_ln638_6 & or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_5)   --->   "%shl_ln639 = shl i80 %sext_ln618, i80 %zext_ln639"   --->   Operation 29 'shl' 'shl_ln639' <Predicate = (!or_ln638 & or_ln638_6 & or_ln638_8)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_8)   --->   "%xor_ln606 = xor i1 %icmp_ln606, i1 1"   --->   Operation 30 'xor' 'xor_ln606' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_8)   --->   "%and_ln617 = and i1 %icmp_ln617, i1 %xor_ln606"   --->   Operation 31 'and' 'and_ln617' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.97ns)   --->   "%or_ln617 = or i1 %icmp_ln606, i1 %icmp_ln617"   --->   Operation 32 'or' 'or_ln617' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node and_ln620_6)   --->   "%xor_ln617 = xor i1 %or_ln617, i1 1"   --->   Operation 33 'xor' 'xor_ln617' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node and_ln620_6)   --->   "%and_ln620 = and i1 %icmp_ln620, i1 %xor_ln617"   --->   Operation 34 'and' 'and_ln620' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln620_6 = and i1 %and_ln620, i1 %icmp_ln616"   --->   Operation 35 'and' 'and_ln620_6' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_6)   --->   "%or_ln616 = or i1 %or_ln617, i1 %icmp_ln616"   --->   Operation 36 'or' 'or_ln616' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_6)   --->   "%xor_ln616 = xor i1 %or_ln616, i1 1"   --->   Operation 37 'xor' 'xor_ln616' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_6)   --->   "%and_ln638 = and i1 %icmp_ln638, i1 %xor_ln616"   --->   Operation 38 'and' 'and_ln638' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.99ns)   --->   "%icmp_ln616_6 = icmp_slt  i12 %F2, i12 60"   --->   Operation 39 'icmp' 'icmp_ln616_6' <Predicate = true> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln638)   --->   "%xor_ln638 = xor i1 %icmp_ln638, i1 1"   --->   Operation 40 'xor' 'xor_ln638' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node or_ln638)   --->   "%and_ln638_6 = and i1 %icmp_ln616_6, i1 %xor_ln638"   --->   Operation 41 'and' 'and_ln638_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln638 = or i1 %icmp_ln606, i1 %and_ln638_6"   --->   Operation 42 'or' 'or_ln638' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_5)   --->   "%select_ln638 = select i1 %or_ln638, i80 0, i80 %shl_ln639"   --->   Operation 43 'select' 'select_ln638' <Predicate = (or_ln638_6 & or_ln638_8)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln638_6 = or i1 %or_ln638, i1 %and_ln638"   --->   Operation 44 'or' 'or_ln638_6' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln638_4 = select i1 %and_ln620_6, i54 %ashr_ln621, i54 %man_V_12"   --->   Operation 45 'select' 'select_ln638_4' <Predicate = (!or_ln638_6 & or_ln638_8)> <Delay = 4.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node select_ln638_5)   --->   "%sext_ln638 = sext i54 %select_ln638_4"   --->   Operation 46 'sext' 'sext_ln638' <Predicate = (!or_ln638_6 & or_ln638_8)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln638_8)   --->   "%or_ln638_7 = or i1 %and_ln620_6, i1 %and_ln617"   --->   Operation 47 'or' 'or_ln638_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln638_5 = select i1 %or_ln638_6, i80 %select_ln638, i80 %sext_ln638"   --->   Operation 48 'select' 'select_ln638_5' <Predicate = (or_ln638_8)> <Delay = 4.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln638_8 = or i1 %or_ln638_6, i1 %or_ln638_7"   --->   Operation 49 'or' 'or_ln638_8' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (1.04ns) (out node of the LUT)   --->   "%select_ln638_8 = select i1 %or_ln638_8, i80 %select_ln638_5, i80 %select_ln623"   --->   Operation 50 'select' 'select_ln638_8' <Predicate = true> <Delay = 1.04> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%ret_ln704 = ret i80 %select_ln638_8"   --->   Operation 51 'ret' 'ret_ln704' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 50ns, clock uncertainty: 13.5ns.

 <State 1>: 17.5ns
The critical path consists of the following:
	wire read operation ('d_read') on port 'd' [2]  (0 ns)
	'sub' operation ('F2') [14]  (1.55 ns)
	'icmp' operation ('icmp_ln616') [15]  (1.99 ns)
	'select' operation ('sh_amt') [18]  (0.697 ns)
	'icmp' operation ('icmp_ln620') [21]  (1.99 ns)
	'and' operation ('and_ln620') [34]  (0 ns)
	'and' operation ('and_ln620_6') [35]  (0.978 ns)
	'select' operation ('select_ln638_4') [45]  (4.61 ns)
	'select' operation ('select_ln638_5') [48]  (4.61 ns)
	'select' operation ('this.V') [50]  (1.04 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
