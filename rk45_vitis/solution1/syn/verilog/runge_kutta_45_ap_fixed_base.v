// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module runge_kutta_45_ap_fixed_base (
        ap_ready,
        d,
        ap_return
);


output   ap_ready;
input  [63:0] d;
output  [79:0] ap_return;

wire   [63:0] ireg_fu_42_p1;
wire   [10:0] exp_tmp_fu_58_p4;
wire   [51:0] trunc_ln600_fu_72_p1;
wire   [52:0] p_Result_36_fu_76_p3;
wire   [53:0] zext_ln604_fu_84_p1;
wire   [0:0] p_Result_s_fu_50_p3;
wire   [53:0] man_V_11_fu_88_p2;
wire   [62:0] trunc_ln590_fu_46_p1;
wire   [11:0] zext_ln501_fu_68_p1;
wire   [11:0] F2_fu_108_p2;
wire   [0:0] icmp_ln616_fu_114_p2;
wire   [11:0] add_ln616_fu_120_p2;
wire   [11:0] sub_ln616_fu_126_p2;
wire  signed [53:0] man_V_12_fu_94_p3;
wire  signed [11:0] sh_amt_fu_132_p3;
wire  signed [31:0] sext_ln621_fu_162_p1;
wire   [53:0] zext_ln621_fu_166_p1;
wire   [0:0] tmp_fu_176_p3;
wire  signed [79:0] sext_ln618_fu_146_p1;
wire   [79:0] zext_ln639_fu_192_p1;
wire   [0:0] icmp_ln606_fu_102_p2;
wire   [0:0] icmp_ln617_fu_140_p2;
wire   [0:0] xor_ln606_fu_202_p2;
wire   [0:0] or_ln617_fu_214_p2;
wire   [0:0] icmp_ln620_fu_150_p2;
wire   [0:0] xor_ln617_fu_220_p2;
wire   [0:0] and_ln620_fu_226_p2;
wire   [0:0] or_ln616_fu_238_p2;
wire   [0:0] icmp_ln638_fu_156_p2;
wire   [0:0] xor_ln616_fu_244_p2;
wire   [0:0] icmp_ln616_6_fu_256_p2;
wire   [0:0] xor_ln638_fu_262_p2;
wire   [0:0] and_ln638_6_fu_268_p2;
wire   [0:0] or_ln638_fu_274_p2;
wire   [79:0] shl_ln639_fu_196_p2;
wire   [0:0] and_ln638_fu_250_p2;
wire   [0:0] and_ln620_6_fu_232_p2;
wire   [53:0] ashr_ln621_fu_170_p2;
wire   [53:0] select_ln638_4_fu_294_p3;
wire   [0:0] and_ln617_fu_208_p2;
wire   [0:0] or_ln638_6_fu_288_p2;
wire   [79:0] select_ln638_fu_280_p3;
wire  signed [79:0] sext_ln638_fu_302_p1;
wire   [0:0] or_ln638_7_fu_306_p2;
wire   [0:0] or_ln638_8_fu_320_p2;
wire   [79:0] select_ln638_5_fu_312_p3;
wire   [79:0] select_ln623_fu_184_p3;

assign F2_fu_108_p2 = (12'd1075 - zext_ln501_fu_68_p1);

assign add_ln616_fu_120_p2 = ($signed(F2_fu_108_p2) + $signed(12'd4036));

assign and_ln617_fu_208_p2 = (xor_ln606_fu_202_p2 & icmp_ln617_fu_140_p2);

assign and_ln620_6_fu_232_p2 = (icmp_ln616_fu_114_p2 & and_ln620_fu_226_p2);

assign and_ln620_fu_226_p2 = (xor_ln617_fu_220_p2 & icmp_ln620_fu_150_p2);

assign and_ln638_6_fu_268_p2 = (xor_ln638_fu_262_p2 & icmp_ln616_6_fu_256_p2);

assign and_ln638_fu_250_p2 = (xor_ln616_fu_244_p2 & icmp_ln638_fu_156_p2);

assign ap_ready = 1'b1;

assign ap_return = ((or_ln638_8_fu_320_p2[0:0] == 1'b1) ? select_ln638_5_fu_312_p3 : select_ln623_fu_184_p3);

assign ashr_ln621_fu_170_p2 = $signed(man_V_12_fu_94_p3) >>> zext_ln621_fu_166_p1;

assign exp_tmp_fu_58_p4 = {{ireg_fu_42_p1[62:52]}};

assign icmp_ln606_fu_102_p2 = ((trunc_ln590_fu_46_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_6_fu_256_p2 = (($signed(F2_fu_108_p2) < $signed(12'd60)) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_114_p2 = (($signed(F2_fu_108_p2) > $signed(12'd60)) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_140_p2 = ((F2_fu_108_p2 == 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_150_p2 = ((sh_amt_fu_132_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_156_p2 = ((sh_amt_fu_132_p3 < 12'd80) ? 1'b1 : 1'b0);

assign ireg_fu_42_p1 = d;

assign man_V_11_fu_88_p2 = (54'd0 - zext_ln604_fu_84_p1);

assign man_V_12_fu_94_p3 = ((p_Result_s_fu_50_p3[0:0] == 1'b1) ? man_V_11_fu_88_p2 : zext_ln604_fu_84_p1);

assign or_ln616_fu_238_p2 = (or_ln617_fu_214_p2 | icmp_ln616_fu_114_p2);

assign or_ln617_fu_214_p2 = (icmp_ln617_fu_140_p2 | icmp_ln606_fu_102_p2);

assign or_ln638_6_fu_288_p2 = (or_ln638_fu_274_p2 | and_ln638_fu_250_p2);

assign or_ln638_7_fu_306_p2 = (and_ln620_6_fu_232_p2 | and_ln617_fu_208_p2);

assign or_ln638_8_fu_320_p2 = (or_ln638_7_fu_306_p2 | or_ln638_6_fu_288_p2);

assign or_ln638_fu_274_p2 = (icmp_ln606_fu_102_p2 | and_ln638_6_fu_268_p2);

assign p_Result_36_fu_76_p3 = {{1'd1}, {trunc_ln600_fu_72_p1}};

assign p_Result_s_fu_50_p3 = ireg_fu_42_p1[32'd63];

assign select_ln623_fu_184_p3 = ((tmp_fu_176_p3[0:0] == 1'b1) ? 80'd1208925819614629174706175 : 80'd0);

assign select_ln638_4_fu_294_p3 = ((and_ln620_6_fu_232_p2[0:0] == 1'b1) ? ashr_ln621_fu_170_p2 : man_V_12_fu_94_p3);

assign select_ln638_5_fu_312_p3 = ((or_ln638_6_fu_288_p2[0:0] == 1'b1) ? select_ln638_fu_280_p3 : sext_ln638_fu_302_p1);

assign select_ln638_fu_280_p3 = ((or_ln638_fu_274_p2[0:0] == 1'b1) ? 80'd0 : shl_ln639_fu_196_p2);

assign sext_ln618_fu_146_p1 = man_V_12_fu_94_p3;

assign sext_ln621_fu_162_p1 = sh_amt_fu_132_p3;

assign sext_ln638_fu_302_p1 = $signed(select_ln638_4_fu_294_p3);

assign sh_amt_fu_132_p3 = ((icmp_ln616_fu_114_p2[0:0] == 1'b1) ? add_ln616_fu_120_p2 : sub_ln616_fu_126_p2);

assign shl_ln639_fu_196_p2 = sext_ln618_fu_146_p1 << zext_ln639_fu_192_p1;

assign sub_ln616_fu_126_p2 = (12'd60 - F2_fu_108_p2);

assign tmp_fu_176_p3 = ireg_fu_42_p1[32'd63];

assign trunc_ln590_fu_46_p1 = ireg_fu_42_p1[62:0];

assign trunc_ln600_fu_72_p1 = ireg_fu_42_p1[51:0];

assign xor_ln606_fu_202_p2 = (icmp_ln606_fu_102_p2 ^ 1'd1);

assign xor_ln616_fu_244_p2 = (or_ln616_fu_238_p2 ^ 1'd1);

assign xor_ln617_fu_220_p2 = (or_ln617_fu_214_p2 ^ 1'd1);

assign xor_ln638_fu_262_p2 = (icmp_ln638_fu_156_p2 ^ 1'd1);

assign zext_ln501_fu_68_p1 = exp_tmp_fu_58_p4;

assign zext_ln604_fu_84_p1 = p_Result_36_fu_76_p3;

assign zext_ln621_fu_166_p1 = $unsigned(sext_ln621_fu_162_p1);

assign zext_ln639_fu_192_p1 = $unsigned(sext_ln621_fu_162_p1);

endmodule //runge_kutta_45_ap_fixed_base
